<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="sql.IdsmMapper">

	<update id="updateSetLanguage" >
	    <![CDATA[
	    	alter session set nls_language = 'AMERICAN'
	    ]]>
    </update>

	<select id="getIdsmSetupProject" parameterType="java.util.Map" resultType="java.util.HashMap">
		SELECT TO_CHAR(PPA.PROJECT_ID) AS PROJECT_ID,
		       PPA.SEGMENT1,
		       PPA.NAME,
	           (SELECT CASE WHEN COUNT(*) > 0 THEN 'Y' ELSE 'N' END
	              FROM ZVTS_MAP_IDSM_ITEM MII
	             WHERE MII.PROJECT_NO = PPA.SEGMENT1) AS DATA_YN
		  FROM ZVTS_ITEM_MASTER IM,
		       PA_PROJECTS_ALL_INT PPA,
		       (SELECT COUNT(*) AS PROJECT_ALL_CNT
		          FROM DESM_USER_PROJECT_ALL
		         WHERE USER_AD = #{USER_AD}  ) DUPA
		 WHERE 1=1
		   AND IM.PROJECT_NO = PPA.SEGMENT1
		   AND (DUPA.PROJECT_ALL_CNT = 1 OR
		       (EXISTS (SELECT 1 FROM DESM_USER_PROJECT DUP
				             WHERE DUP.PROJECT_CODE = PPA.SEGMENT1 AND DUP.USER_AD = #{USER_AD})))
		   <if test='keyword != null and keyword !=""'>
		   AND (UPPER(PPA.SEGMENT1) like '%'|| UPPER(#{keyword}) ||'%' OR UPPER(PPA.NAME) like '%'|| UPPER(#{keyword}) ||'%')
		   </if>
		GROUP BY PPA.PROJECT_ID,
		       PPA.SEGMENT1,
		       PPA.NAME
	</select>

	<select id="getIdsmSetupDlgMprProject" parameterType="java.util.Map" resultType="java.util.HashMap">
			SELECT DISTINCT
			   TO_CHAR(PPA.PROJECT_ID) AS PROJECT_ID,
		       DPHI.PROJECT_CODE AS SEGMENT1,
		       DPHI.PROJECT_NAME AS NAME,
		       (SELECT CASE WHEN COUNT(*) > 0 THEN 'Y' ELSE 'N' END
	              FROM ZVTS_MAP_IDSM_ITEM MII
	             WHERE MII.PROJECT_NO = PPA.SEGMENT1) AS DATA_YN
		  FROM DESM_MPR_HEADER DMH,
		       DESM_PO_HEADER_INT DPHI,
		       PA_PROJECTS_ALL_INT PPA
		 WHERE DMH.PO_NO = DPHI.PO_NO
		   AND PPA.SEGMENT1 = DPHI.PROJECT_CODE
		   AND DPHI.PROJECT_CODE IS NOT NULL
 			<if test='keyword != null and keyword !=""'>
		   AND (UPPER(DPHI.PROJECT_CODE) like '%'|| UPPER(#{keyword}) ||'%' OR UPPER(DPHI.PROJECT_NAME) like '%'|| UPPER(#{keyword}) ||'%')
		   </if>
		   ORDER BY DPHI.PROJECT_CODE

	</select>

	<select id="getPo" parameterType="java.util.Map" resultType="java.util.HashMap">
		SELECT DT.*,
		       CASE WHEN DT.CUR_MPR_DATE IS NULL THEN TO_CHAR(SYSDATE, 'YYYY/MM')
		            ELSE TO_CHAR(ADD_MONTHS(TO_DATE(DT.CUR_MPR_DATE || '/01', 'YYYY/MM/DD'), 1), 'YYYY/MM') END AS MPR_DATE
		  FROM (SELECT A.PO_NO,
		               A.PO_DESCRIPTION,
		               A.SUPPLIER_NUMBER,
		               A.SUPPLIER_NAME,
		               TO_CHAR(A.MAX_PROMISED_DATE, 'YYYY/MM/DD') AS PROMISED_DATE,
		               (SELECT MAX(MPR_DATE) FROM DESM_MPR_HEADER WHERE PO_NO = A.PO_NO) AS CUR_MPR_DATE,
		               A.PROJECT_CODE,
		               A.PROJECT_NAME,
		               A.BUYER,
		               B.PRODUCT_NAME
		          FROM DESM_PO_HEADER_INT A,
		          	   DESM_MPR_SETUP_DATE B
		         WHERE A.PO_NO = B.PO_NO(+)
				   <if test='keyword2 != null and keyword2 !=""'>
				   AND A.PROJECT_CODE = #{keyword2}
				   </if>
				   <if test='keyword != null and keyword !=""'>
				   AND (UPPER(A.PO_NO) LIKE '%' || UPPER(#{keyword}) || '%' OR UPPER(A.PO_DESCRIPTION) LIKE '%' || UPPER(#{keyword}) || '%')
				   </if>
				   <if test='keyword3 != null and keyword3 !=""'>
				   AND UPPER(A.SUPPLIER_NAME) = UPPER(#{keyword3})
				   </if>
				   <if test='SUPPLIER_NO != null and SUPPLIER_NO !=""'>
				   AND A.SUPPLIER_NUMBER = #{SUPPLIER_NO}
				   </if>
		        ) DT
		 ORDER BY PO_NO DESC
	</select>

	<select id="getIdsmProjectMgtProject" parameterType="java.util.Map" resultType="java.util.HashMap">
		SELECT TO_CHAR(PPA.PROJECT_ID) AS PROJECT_ID,
		       PPA.SEGMENT1,
		       PPA.NAME
		  FROM DESM_USER_PROJECT DUP,
		       PA_PROJECTS_ALL_INT PPA
		 WHERE DUP.PROJECT_CODE = PPA.SEGMENT1
		   <if test='keyword != null and keyword !=""'>
		   AND (UPPER(PPA.SEGMENT1) like '%'|| UPPER(#{keyword}) ||'%' OR UPPER(PPA.NAME) like '%'|| UPPER(#{keyword}) ||'%')
		   </if>
		GROUP BY PPA.PROJECT_ID,
		         PPA.SEGMENT1,
		         PPA.NAME
	</select>

	<select id="getBlrSchmapProject" parameterType="java.util.Map" resultType="java.util.HashMap">
		SELECT DISTINCT PROJECT_NUMBER PROJECT_NO,
		                PROJECT_NAME    AS PROJECT_DESC,
		                (SELECT CASE WHEN COUNT(*) > 0 THEN 'Y' ELSE 'N' END
			              FROM ZVTS_MAP_BLR_ITEM MII
			             WHERE MII.PROJECT_NO = A.PROJECT_NUMBER) AS DATA_YN

		 FROM PA_PROJECTS_INFO_V A,
		   (SELECT PROJECT_CODE FROM ZVTS_ITEM_MASTER_DETAIL_INT GROUP BY PROJECT_CODE ) B,
		     (SELECT COUNT(*) AS PROJECT_ALL_CNT
		        FROM DESM_USER_PROJECT_ALL
		       WHERE USER_AD = #{USER_AD}  ) DUPA
		 WHERE 1=1
		     AND A.PROJECT_NUMBER = B.PROJECT_CODE
			   AND (DUPA.PROJECT_ALL_CNT = 1 OR
			       (EXISTS (SELECT 1 FROM DESM_USER_PROJECT DUP
					             WHERE DUP.PROJECT_CODE = PROJECT_NUMBER AND DUP.USER_AD = #{USER_AD})))
		   <if test='keyword != null and keyword !=""'>
		   AND (UPPER(A.PROJECT_NUMBER) like '%'|| UPPER(#{keyword}) ||'%' OR UPPER(A.PROJECT_NAME) like '%'|| UPPER(#{keyword}) ||'%')
		   </if>
		   ORDER BY A.PROJECT_NUMBER, A.PROJECT_NAME
	</select>


	<select id="getIdsmSchedule" parameterType="java.util.Map" resultType="java.util.HashMap">
		SELECT V1.LV
			,V1.PROJECT_NO
			,V1.TRK_ITEM_SEQ
			,V1.TRK_ITEM_GROUP
			,V1.ROOT_NAME
			,V1.SEARCH_ROOT_NAME
			,V1.TRK_ITEM_NAME
			,V1.LV1_NAME
			,V1.LV2_NAME
			,V1.LV3_NAME
			,V1.LV4_NAME
			,V1.PAYMENT_MILESTONE
			,V1.PRIMAVERA_ID
			,V1.VENDOR AS ATTRIBUTE3
			,V1.SUPPLY_SCOPE AS ATTRIBUTE6
			,V1.SHIPPING_COUNTRY AS ATTRIBUTE7
			,V1.SHIPMENT_NO AS ATTRIBUTE10
			,V1.SEQUENCE_NO AS ATTRIBUTE9
			,TO_CHAR(V1.MPS_PLAN_DATE, 'YYYY/MM/DD') AS MPS_PLAN_DATE
			,TO_CHAR(V1.MPS_EXPECTED_DATE, 'YYYY/MM/DD') AS MPS_EXPECTED_DATE
			,TO_CHAR(V1.MPS_ACTUAL_DATE, 'YYYY/MM/DD') AS MPS_ACTUAL_DATE
			,TO_CHAR(V1.TE_PLAN_DATE, 'YYYY/MM/DD') AS TE_PLAN_DATE
			,TO_CHAR(V1.TE_EXPECTED_DATE, 'YYYY/MM/DD') AS TE_EXPECTED_DATE
			,TO_CHAR(V1.TE_ACTUAL_DATE, 'YYYY/MM/DD') AS TE_ACTUAL_DATE
			,TO_CHAR(V1.PO_PLAN_DATE, 'YYYY/MM/DD') AS PO_PLAN_DATE
			,TO_CHAR(V1.PO_EXPECTED_DATE, 'YYYY/MM/DD') AS PO_EXPECTED_DATE
			,TO_CHAR(V1.PO_ATCUAL_DATE, 'YYYY/MM/DD') AS PO_ATCUAL_DATE
			,TO_CHAR(V1.CARGO_PLAN_DATE, 'YYYY/MM/DD') AS CARGO_PLAN_DATE
			,TO_CHAR(V1.CARGO_EXPECTED_DATE, 'YYYY/MM/DD') AS CARGO_EXPECTED_DATE
			,TO_CHAR(V1.CARGO_ACTUAL_DATE, 'YYYY/MM/DD') AS CARGO_ACTUAL_DATE
			,TO_CHAR(V1.FOB_PLAN_DATE, 'YYYY/MM/DD') AS FOB_PLAN_DATE
			,TO_CHAR(V1.FOB_EXPECTED_DATE, 'YYYY/MM/DD') AS FOB_EXPECTED_DATE
			,TO_CHAR(V1.FOB_ACTUAL_DATE, 'YYYY/MM/DD') AS FOB_ACTUAL_DATE
			,TO_CHAR(V1.ONSITE_PLAN_DATE, 'YYYY/MM/DD') AS ONSITE_PLAN_DATE
			,TO_CHAR(V1.ONSITE_EXPECTED_DATE, 'YYYY/MM/DD') AS ONSITE_EXPECTED_DATE
			,TO_CHAR(V1.ONSITE_ACTUAL_DATE, 'YYYY/MM/DD') AS ONSITE_ACTUAL_DATE
			,V1.CREATION_DATE
			,V1.CREATED_BY
			,V1.LAST_UPDATE_DATE
			,V1.LAST_UPDATED_BY
			,V1.OFFSHORE
			,V1.PM_AD
			,V1.PM_NAME
			,V1.EM_AD
			,V1.EM_NAME
			,V1.QC_AD
			,V1.QC_NAME
			,V1.SM_AD
			,V1.SM_NAME
			,V1.BUYER_AD
			,V1.BUYER_NAME
			,CASE WHEN CNT = 1 THEN AA.INVOICE_NUM
			          WHEN CNT > 1 THEN AA.INVOICE_NUM || ' 외 ' || AA.CALC_CNT  || '건'
                      ELSE ''
                      END  SEL_INVOICE_NUM
			,ZDA.FILE_GRP_CD
			, (SELECT CASE WHEN COUNT(*) = 0 THEN NULL ELSE COUNT(*) END
		              FROM ESAATTH ATT
		             WHERE 1=1
		               AND ATT.GRP_CD  = ZDA.FILE_GRP_CD
		               AND ATT.STS <![CDATA[<>]]> 'D'
		                )  ATTH_CNT
		 	,(SELECT COUNT(*)
		     FROM DESM_PACKING_MST
		    WHERE PROJECT_NO = V1.PROJECT_NO
		      AND TRK_ITEM_NAME = V1.TRK_ITEM_NAME ) AS PL_CNT
		FROM DESM_SUPPLY_SUMMARY_V V1
		,(SELECT DI.TRK_ITEM_SEQ,
		        COUNT(*) CNT,
		        COUNT(*)-1 CALC_CNT,
		        MAX(DI.INVOICE_NUM) INVOICE_NUM
		   FROM ZVTS_DESM_INVOICE DI
		  WHERE 1=1
		 GROUP BY DI.TRK_ITEM_SEQ ) AA
		 ,ZVTS_DESM_ATTACH ZDA
		WHERE V1.TRK_ITEM_SEQ = AA.TRK_ITEM_SEQ(+)
		AND V1.PROJECT_NO = ZDA.PROJECT_NO(+)
		AND V1.TRK_ITEM_NAME = ZDA.TRK_ITEM_NAME(+)
		AND V1.PROJECT_NO = UPPER(#{PROJECT_NO})
		AND V1.TRK_ITEM_SEQ IN (SELECT
		     	DISTINCT ZIM_IN.TRK_ITEM_SEQ
		    FROM ZVTS_ITEM_MASTER ZIM_IN
			    ,PA_PROJECTS_ALL_INT PA
			    ,PA_PROJECTS_ALL_INT PA_INTER
			    ,ZVTS_ITEM_MASTER_AUTH IAV
			    ,ZVTS_EMP EMP
			    ,ZVTS_DESM_INVOICE DI
			 WHERE 1=1
			     AND ZIM_IN.PROJECT_ID = PA.PROJECT_ID
			     AND ZIM_IN.TRK_ITEM_SEQ = IAV.TRK_ITEM_SEQ(+)
			     AND ZIM_IN.ATTRIBUTE8 = PA_INTER.SEGMENT1(+)
			     AND IAV.USER_AD = EMP.AD_USER_ID(+)
			     AND ZIM_IN.TRK_ITEM_SEQ = DI.TRK_ITEM_SEQ(+)
			<if test='VIEW_TYPE == "INTER"'>
				and zim_in.project_no like 'Z%'
				<if test='KEY1 == "project_name" 	and VALUE1 != null and VALUE1 != ""'> and upper(pa.name) like upper(#{VALUE1})||'%'</if>
		 		<if test='KEY1 == "project_no" 	and VALUE1 != null and VALUE1 != ""'> and zim_in.project_no = upper(#{VALUE1})</if>
		 		<if test='KEY4 == "project_name" 	and VALUE4 != null and VALUE4 != ""'> and upper(pa.name) like upper(#{VALUE4})||'%'</if>
		 		<if test='KEY4 == "project_no" 	and VALUE4 != null and VALUE4 != ""'> and zim_in.project_no = upper(#{VALUE4})</if>
			</if>

			<if test='VIEW_TYPE != "INTER"'>
				<if test='KEY1 == "project_name" 	and VALUE1 != null and VALUE1 != ""'> and upper(pa.name) like upper(#{VALUE1})||'%'</if>
		 		<if test='KEY1 == "project_no" 	and VALUE1 != null and VALUE1 != ""'> and zim_in.project_no = upper(#{VALUE1})</if>
				<if test='KEY4 == "project_name" 	and VALUE4 != null and VALUE4 != ""'> and upper(pa.name) like upper(#{VALUE4})||'%'</if>
		 		<if test='KEY4 == "project_no" 	and VALUE4 != null and VALUE4 != ""'> and zim_in.project_no = upper(#{VALUE4})</if>
			</if>

		 	<if test='KEY1 == "item" 			and VALUE1 != null and VALUE1 != ""'> and UPPER(trk_item_name) like '%' || UPPER(#{VALUE1})||'%'</if>
		 	<if test='KEY1 == "pm" 	and VALUE1 != null and VALUE1 != ""'>   AND (V1.PM_AD LIKE  '%' ||UPPER(#{VALUE1})||'%' OR V1.PM_NAME LIKE  '%' ||UPPER(#{VALUE1})||'%')</if>
			<if test='KEY1 == "em" 	and VALUE1 != null and VALUE1 != ""'>   AND (V1.EM_AD LIKE  '%' ||UPPER(#{VALUE1})||'%' OR V1.EM_NAME LIKE  '%' ||UPPER(#{VALUE1})||'%')</if>
			<if test='KEY1 == "buyer" and VALUE1 != null and VALUE1 != ""'> AND (V1.BUYER_AD LIKE  '%' ||UPPER(#{VALUE1})||'%' OR V1.BUYER_NAME LIKE  '%' ||UPPER(#{VALUE1})||'%')</if>
			<if test='KEY1 == "qc" 	and VALUE1 != null and VALUE1 != ""'>   AND (V1.QC_AD LIKE  '%' ||UPPER(#{VALUE1})||'%' OR V1.QC_NAME LIKE  '%' ||UPPER(#{VALUE1})||'%')</if>
			<if test='KEY1 == "sm" 	and VALUE1 != null and VALUE1 != ""'>   AND (V1.SM_AD LIKE  '%' ||UPPER(#{VALUE1})||'%' OR V1.SM_NAME LIKE  '%' ||UPPER(#{VALUE1})||'%')</if>
		 	<if test='KEY1 == "attribute7" 			and VALUE1 != null and VALUE1 != ""'> and UPPER(zim_in.attribute7) like '%' || UPPER(#{VALUE1})||'%'</if>
		 	<if test='KEY1 == "attribute3" 			and VALUE1 != null and VALUE1 != ""'> and UPPER(zim_in.attribute3) like '%' || UPPER(#{VALUE1})||'%'</if>
		 	<if test='KEY1 == "attribute10" 			and VALUE1 != null and VALUE1 != ""'> and UPPER(zim_in.attribute10) like '%' || UPPER(#{VALUE1})||'%'</if>
		 	<if test='KEY1 == "attribute6" 			and VALUE1 != null and VALUE1 != ""'> and UPPER(zim_in.attribute6) like '%' || UPPER(#{VALUE1})||'%'</if>
		 	<if test='KEY1 == "invoice_num" 			and VALUE1 != null and VALUE1 != ""'> and UPPER(di.invoice_num) like '%' || UPPER(#{VALUE1})||'%'</if>


		 	<if test='KEY4 == "item" 			and VALUE4 != null and VALUE4 != ""'> and UPPER(trk_item_name) like '%' || UPPER(#{VALUE4})||'%'</if>
		 	<if test='KEY4 == "pm" 	and VALUE4 != null and VALUE4 != ""'> and user_job='PM' and UPPER(USER_NAME) like UPPER(#{VALUE4})||'%'</if>
		 	<if test='KEY4 == "em" 	and VALUE4 != null and VALUE4 != ""'> and user_job='EM' and UPPER(USER_NAME) like UPPER(#{VALUE4})||'%'</if>
		 	<if test='KEY4 == "buyer" and VALUE4 != null and VALUE4 != ""'> and user_job='BUYER' and UPPER(USER_NAME) like UPPER(#{VALUE4})||'%' </if>
		 	<if test='KEY4 == "qc" 	and VALUE4 != null and VALUE4 != ""'> and user_job='QC' and UPPER(USER_NAME) like UPPER(#{VALUE4})||'%'</if>
		 	<if test='KEY4 == "sm" 	and VALUE4 != null and VALUE4 != ""'> and user_job='SM' and UPPER(USER_NAME) like UPPER(#{VALUE4})||'%'</if>

		 	<if test='KEY4 == "attribute7" 			and VALUE4 != null and VALUE4 != ""'> and UPPER(zim_in.attribute7) like '%' || UPPER(#{VALUE4})||'%'</if>
		 	<if test='KEY4 == "attribute3" 			and VALUE4 != null and VALUE4 != ""'> and UPPER(zim_in.attribute3) like '%' || UPPER(#{VALUE4})||'%'</if>
		 	<if test='KEY4 == "attribute10" 			and VALUE4 != null and VALUE4 != ""'> and UPPER(zim_in.attribute10) like '%' || UPPER(#{VALUE4})||'%'</if>
		 	<if test='KEY4 == "attribute6" 			and VALUE4 != null and VALUE4 != ""'> and UPPER(zim_in.attribute6) like '%' || UPPER(#{VALUE4})||'%'</if>
		 	<if test='KEY4 == "invoice_num" 			and VALUE4 != null and VALUE4 != ""'> and UPPER(di.invoice_num) like '%' || UPPER(#{VALUE4})||'%'</if>


		 	<if test='KEY3 == "plan" '>
		 		<if test='(VALUE2 != null and VALUE2 !="") or (VALUE3 != null and VALUE3 !="")'>
		 			<if test='KEY2 == "mps" '> 	and mps_plan_date 	 between to_date(NVL(#{VALUE2},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE3},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY2 == "po" '> 	and po_plan_date 	 between to_date(NVL(#{VALUE2},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE3},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY2 == "cargo" '>  and cargo_plan_date  between to_date(NVL(#{VALUE2},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE3},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY2 == "fob" '> 	and fob_plan_date 	 between to_date(NVL(#{VALUE2},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE3},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY2 == "onsite" '> and onsite_plan_date between to_date(NVL(#{VALUE2},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE3},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 		</if>
		 	</if>
		 	<if test='KEY3 == "expected" '>
		 		<if test='(VALUE2 != null and VALUE2 !="") or (VALUE3 != null and VALUE3 !="")'>
		 			<if test='KEY2 == "mps" '> 	and mps_expected_date 	 between to_date(NVL(#{VALUE2},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE3},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY2 == "po" '>		and po_expected_date 	 between to_date(NVL(#{VALUE2},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE3},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY2 == "cargo" '>  and cargo_expected_date  between to_date(NVL(#{VALUE2},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE3},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY2 == "fob" '> 	and fob_expected_date 	 between to_date(NVL(#{VALUE2},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE3},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY2 == "onsite" '>	and onsite_expected_date between to_date(NVL(#{VALUE2},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE3},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 		</if>
		 	</if>
		 	<if test='KEY3 == "actual" '>
		 		<if test='(VALUE2 != null and VALUE2 !="") or (VALUE3 != null and VALUE3 !="")'>
		 			<if test='KEY2 == "mps" '> 	and mps_actual_date 	between to_date(NVL(#{VALUE2},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE3},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY2 == "po" '> 	and po_actual_date 		between to_date(NVL(#{VALUE2},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE3},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY2 == "cargo" '>  and cargo_actual_date 	between to_date(NVL(#{VALUE2},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE3},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY2 == "fob" '> 	and fob_actual_date		between to_date(NVL(#{VALUE2},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE3},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY2 == "onsite" '> and onsite_actual_date 	between to_date(NVL(#{VALUE2},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE3},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 		</if>
		 	</if>
		 	<if test='KEY6 == "plan" '>
		 		<if test='(VALUE5 != null and VALUE5 !="") or (VALUE6 != null and VALUE6 !="")'>
		 			<if test='KEY5 == "mps" '> 	and mps_plan_date 	 between to_date(NVL(#{VALUE5},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE6},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY5 == "po" '> 	and po_plan_date 	 between to_date(NVL(#{VALUE5},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE6},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY5 == "cargo" '>  and cargo_plan_date  between to_date(NVL(#{VALUE5},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE6},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY5 == "fob" '> 	and fob_plan_date 	 between to_date(NVL(#{VALUE5},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE6},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY5 == "onsite" '> and onsite_plan_date between to_date(NVL(#{VALUE5},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE6},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 		</if>
		 	</if>
		 	<if test='KEY6 == "expected" '>
		 		<if test='(VALUE5 != null and VALUE5 !="") or (VALUE6 != null and VALUE6 !="")'>
		 			<if test='KEY5 == "mps" '>	and mps_plan_date 		 between to_date(NVL(#{VALUE5},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE6},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY5 == "po" '>		and po_expected_date 	 between to_date(NVL(#{VALUE5},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE6},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY5 == "cargo" '>	and cargo_expected_date  between to_date(NVL(#{VALUE5},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE6},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY5 == "fob" '>	and fob_expected_date 	 between to_date(NVL(#{VALUE5},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE6},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY5 == "onsite" '>	and onsite_expected_date between to_date(NVL(#{VALUE5},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE6},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 		</if>
		 	</if>
		 	<if test='KEY6 == "actual" '>
		 		<if test='(VALUE5 != null and VALUE5 !="") or (VALUE6 != null and VALUE6 !="")'>
		 			<if test='KEY5 == "mps" '> 	and mps_actual_date    between to_date(NVL(#{VALUE5},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE6},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY5 == "po" '> 	and po_actual_date     between to_date(NVL(#{VALUE5},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE6},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY5 == "cargo" '>  and cargo_actual_date  between to_date(NVL(#{VALUE5},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE6},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY5 == "fob" '>	and fob_actual_date    between to_date(NVL(#{VALUE5},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE6},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY5 == "onsite" '> and onsite_actual_date between to_date(NVL(#{VALUE5},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE6},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 		</if>
		 	</if>
		    <if test='ISSUE_CHECK == "Y" '>
		    	and (cargo_actual_date IS NULL and cargo_plan_date <![CDATA[<]]> cargo_expected_date
		    		or (PO_ATCUAL_DATE IS NULL AND po_plan_date <![CDATA[<]]> po_expected_date   )
		    		or (MPS_ACTUAL_DATE IS NULL AND  mps_plan_date <![CDATA[<]]> mps_expected_date )
		    		or (fob_actual_date IS NULL AND  fob_plan_date <![CDATA[<]]> fob_expected_date )
		    		or (onsite_actual_date IS NULL AND  onsite_plan_date <![CDATA[<]]> onsite_expected_date )
		    		)
		    </if>
			<if test='OFFSHORE != null and OFFSHORE !=""'> and offshore = #{OFFSHORE}</if>)

	</select>

	<select id="getIdsmSetup" parameterType="java.util.Map" resultType="java.util.HashMap">
		WITH with_zvts_emp AS (SELECT * FROM zvts_emp)
    	select ZIM.TRK_ITEM_SEQ
			    ,ZIM.TRK_ITEM_NAME
			    ,NVL(TRK_ITEM_GROUP, -1) AS TRK_ITEM_GROUP
			    ,ORGANIZATION_ID
			    ,ZIM.PROJECT_ID
			    ,ZIM.PROJECT_NO
			    ,ZIM.REMARK
			    ,PA.NAME AS PROJECT_NAME
			    ,TASK_ID
			    ,TASK_NUMBER
			    ,(SELECT PT.TASK_NAME FROM PA_TASKS PT WHERE PT.PROJECT_ID = ZIM.PROJECT_ID AND PT.TASK_ID = ZIM.TASK_ID) TASK_NAME
			    ,BATCH
			    ,OFFSHORE
			    ,PRIMAVERA_ID
			    ,TO_CHAR(MPS_PLAN_DATE, 'YYYY/MM/DD') AS MPS_PLAN_DATE
			    ,TO_CHAR(MPS_EXPECTED_DATE, 'YYYY/MM/DD') AS MPS_EXPECTED_DATE
			    ,TO_CHAR(MPS_ACTUAL_DATE, 'YYYY/MM/DD') AS MPS_ACTUAL_DATE
			    ,PURCHASE_DURATION
	          	,TO_CHAR(TE_PLAN_DATE, 'YYYY/MM/DD') AS TE_PLAN_DATE
	          	,TO_CHAR(TE_EXPECTED_DATE, 'YYYY/MM/DD') AS TE_EXPECTED_DATE
	          	,TO_CHAR(TE_ACTUAL_DATE, 'YYYY/MM/DD') AS TE_ACTUAL_DATE
			    ,TO_CHAR(PO_PLAN_DATE, 'YYYY/MM/DD') AS PO_PLAN_DATE
			    ,TO_CHAR(PO_EXPECTED_DATE, 'YYYY/MM/DD') AS PO_EXPECTED_DATE
			    ,TO_CHAR(PO_ATCUAL_DATE, 'YYYY/MM/DD') AS PO_ATCUAL_DATE
			    ,MAKE_DURATION
			    ,PROGRESS
			    ,TO_CHAR(CARGO_PLAN_DATE, 'YYYY/MM/DD') AS CARGO_PLAN_DATE
			    ,TO_CHAR(CARGO_EXPECTED_DATE, 'YYYY/MM/DD') AS CARGO_EXPECTED_DATE
			    ,TO_CHAR(CARGO_PROMISED_DATE, 'YYYY/MM/DD') AS CARGO_PROMISED_DATE
			    ,TO_CHAR(CARGO_ACTUAL_DATE, 'YYYY/MM/DD') AS CARGO_ACTUAL_DATE
			    ,SHIPMENT_DURATION
			    ,TO_CHAR(FOB_PLAN_DATE, 'YYYY/MM/DD') AS FOB_PLAN_DATE
			    ,TO_CHAR(FOB_EXPECTED_DATE, 'YYYY/MM/DD') AS FOB_EXPECTED_DATE
			    ,TO_CHAR(FOB_ACTUAL_DATE, 'YYYY/MM/DD') AS FOB_ACTUAL_DATE
			    ,TRANS_DURATION
			    ,TO_CHAR(ONSITE_PLAN_DATE, 'YYYY/MM/DD') AS ONSITE_PLAN_DATE
			    ,TO_CHAR(ONSITE_EXPECTED_DATE, 'YYYY/MM/DD') AS ONSITE_EXPECTED_DATE
			    ,TO_CHAR(ONSITE_ACTUAL_DATE, 'YYYY/MM/DD') AS ONSITE_ACTUAL_DATE
			    ,PAYMENT_MILESTONE
			    ,TRK_ITEM_DEFAULT
			    ,IAV.PM_AD
			    ,IAV.PM_NAME
			    ,IAV.EM_AD
			    ,IAV.EM_NAME
			    ,IAV.BUYER_AD
			    ,IAV.BUYER_NAME
			    ,IAV.QC_AD
			    ,IAV.QC_NAME
			    ,IAV.SM_AD
			    ,IAV.SM_NAME
			    ,CASE WHEN CARGO_PLAN_DATE <![CDATA[<]]> CARGO_EXPECTED_DATE THEN 'Y' ELSE 'N' END AS ISSUE_FLAG
			    ,ZIM.INVOICE_NUM
			    ,ZIM.ATTRIBUTE1
			    ,ZIM.ATTRIBUTE2
			    ,ZIM.ATTRIBUTE3
			    ,ZIM.ATTRIBUTE4
			    ,ZIM.ATTRIBUTE5
			    ,ZIM.ATTRIBUTE6
			    ,ZIM.ATTRIBUTE7
			    ,ZIM.ATTRIBUTE8
			    ,ZIM.ATTRIBUTE9
			    ,ZIM.ATTRIBUTE10
			    ,ZIM.LAST_UPDATE_DATE
			    ,ZIM.LAST_UPDATED_BY
			    ,ZIM.CREATION_DATE
			    ,ZIM.CREATED_BY
			    ,EMP_PM.ZORG_ID AS PM_DEPT_CODE
			    ,EMP_PM.ZORG_NM AS PM_DEPT_NAME
			    ,EMP_EM.ZORG_ID AS EM_DEPT_CODE
			    ,EMP_EM.ZORG_NM AS EM_DEPT_NAME
			    ,EMP_BUYER.ZORG_ID AS BUYER_DEPT_CODE
			    ,EMP_BUYER.ZORG_NM AS BUYER_DEPT_NAME
			    ,EMP_QC.ZORG_ID AS QC_DEPT_CODE
			    ,EMP_QC.ZORG_NM AS QC_DEPT_NAME
			    ,CASE WHEN CNT = 1 THEN AA.INVOICE_NUM
			          WHEN CNT > 1 THEN AA.INVOICE_NUM || ' 외 ' || AA.CALC_CNT  || '건'
                      ELSE ''
                      END  SEL_INVOICE_NUM
                 , (SELECT CASE WHEN COUNT(*) = 0 THEN NULL ELSE COUNT(*) END
		              FROM ESAATTH ATT
		             WHERE 1=1
		               AND ATT.GRP_CD  = ZDA.FILE_GRP_CD
		               AND ATT.STS <![CDATA[<>]]> 'D'
		                )  ATTH_CNT
		         , ZDA.FILE_GRP_CD
		         ,(SELECT COUNT(*)
		             FROM DESM_PACKING_MST
		            WHERE PROJECT_NO = ZIM.PROJECT_NO
		              AND TRK_ITEM_NAME = ZIM.TRK_ITEM_NAME ) AS PL_CNT
		    from
	    		zvts_item_master zim
			    ,pa_projects_all_INT pa
			    ,with_zvts_emp emp_pm
			    ,with_zvts_emp emp_em
			    ,with_zvts_emp emp_buyer
			    ,with_zvts_emp emp_qc
			    ,with_zvts_emp emp_sm
			    ,zvts_item_admin_v iav
			    ,zvts_desm_attach zda
			    ,(select di.trk_item_seq,
		                    count(*) cnt,
		                    count(*)-1 calc_cnt,
		                    max(di.invoice_num) invoice_num
		               from ZVTS_DESM_INVOICE di
		              where 1=1 --di.trk_item_seq = zim.trk_item_seq
		             group by di.trk_item_seq ) aa
			 where 1=1
			     and zim.project_id = pa.project_id
			     and zim.trk_item_seq = iav.trk_item_seq(+)
			     and iav.pm_ad = emp_pm.ad_user_id(+)
			     and iav.em_ad = emp_em.ad_user_id(+)
			     and iav.buyer_ad = emp_buyer.ad_user_id(+)
			     and iav.qc_ad = emp_qc.ad_user_id(+)
			     and iav.sm_ad = emp_sm.ad_user_id(+)
			     and zim.trk_item_seq = aa.trk_item_seq(+)
			     and zim.project_no = zda.project_no(+)
		         and zim.trk_item_name = zda.trk_item_name(+)

    		CONNECT BY zim.trk_item_seq = PRIOR zim.trk_item_group
    			START WITH zim.trk_item_seq in
    		(
	    	select
		     	distinct zim_in.trk_item_seq
		    from zvts_item_master zim_in
			    ,pa_projects_all_INT pa
			    ,pa_projects_all_INT pa_inter
			    ,ZVTS_ITEM_MASTER_AUTH iav
			    ,zvts_emp emp
			    ,ZVTS_DESM_INVOICE di
			 where 1=1
			     and zim_in.project_id = pa.project_id
			     and zim_in.trk_item_seq = iav.trk_item_seq(+)
			     and zim_in.attribute8 = pa_inter.segment1(+)
			     and iav.user_ad = emp.ad_user_id(+)
			     and zim_in.trk_item_seq = di.trk_item_seq(+)
			<if test='VIEW_TYPE == "INTER"'>
				and zim_in.project_no like 'Z%'
				<if test='KEY1 == "project_name" 	and VALUE1 != null and VALUE1 != ""'> and upper(pa.name) like upper(#{VALUE1})||'%'</if>
		 		<if test='KEY1 == "project_no" 	and VALUE1 != null and VALUE1 != ""'> and zim_in.project_no = upper(#{VALUE1})</if>
		 		<if test='KEY4 == "project_name" 	and VALUE4 != null and VALUE4 != ""'> and upper(pa.name) like upper(#{VALUE4})||'%'</if>
		 		<if test='KEY4 == "project_no" 	and VALUE4 != null and VALUE4 != ""'> and zim_in.project_no = upper(#{VALUE4})</if>
			</if>

			<if test='VIEW_TYPE != "INTER"'>
				<if test='KEY1 == "project_name" 	and VALUE1 != null and VALUE1 != ""'> and upper(pa.name) like upper(#{VALUE1})||'%'</if>
		 		<if test='KEY1 == "project_no" 	and VALUE1 != null and VALUE1 != ""'> and zim_in.project_no = upper(#{VALUE1})</if>
				<if test='KEY4 == "project_name" 	and VALUE4 != null and VALUE4 != ""'> and upper(pa.name) like upper(#{VALUE4})||'%'</if>
		 		<if test='KEY4 == "project_no" 	and VALUE4 != null and VALUE4 != ""'> and zim_in.project_no = upper(#{VALUE4})</if>
			</if>


		 	<if test='KEY1 == "item" 			and VALUE1 != null and VALUE1 != ""'> and UPPER(trk_item_name) like '%' || UPPER(#{VALUE1})||'%'</if>
		 	<if test='KEY1 == "pm" 	and VALUE1 != null and VALUE1 != ""'>   AND (IAV.PM_AD LIKE  '%' ||UPPER(#{VALUE1})||'%' OR IAV.PM_NAME LIKE  '%' ||UPPER(#{VALUE1})||'%')</if>
		 	<if test='KEY1 == "em" 	and VALUE1 != null and VALUE1 != ""'>   AND (IAV.EM_AD LIKE  '%' ||UPPER(#{VALUE1})||'%' OR IAV.EM_NAME LIKE  '%' ||UPPER(#{VALUE1})||'%')</if>
		 	<if test='KEY1 == "buyer" and VALUE1 != null and VALUE1 != ""'> AND (IAV.BUYER_AD LIKE  '%' ||UPPER(#{VALUE1})||'%' OR IAV.BUYER_NAME LIKE  '%' ||UPPER(#{VALUE1})||'%')</if>
		 	<if test='KEY1 == "qc" 	and VALUE1 != null and VALUE1 != ""'>   AND (IAV.QC_AD LIKE  '%' ||UPPER(#{VALUE1})||'%' OR IAV.QC_NAME LIKE  '%' ||UPPER(#{VALUE1})||'%')</if>
		 	<if test='KEY1 == "sm" 	and VALUE1 != null and VALUE1 != ""'>   AND (IAV.SM_AD LIKE  '%' ||UPPER(#{VALUE1})||'%' OR IAV.SM_NAME LIKE  '%' ||UPPER(#{VALUE1})||'%')</if>

		 	<if test='KEY1 == "attribute7" 			and VALUE1 != null and VALUE1 != ""'> and UPPER(zim_in.attribute7) like '%' || UPPER(#{VALUE1})||'%'</if>
		 	<if test='KEY1 == "attribute3" 			and VALUE1 != null and VALUE1 != ""'> and UPPER(zim_in.attribute3) like '%' || UPPER(#{VALUE1})||'%'</if>
		 	<if test='KEY1 == "attribute10" 			and VALUE1 != null and VALUE1 != ""'> and UPPER(zim_in.attribute10) like '%' || UPPER(#{VALUE1})||'%'</if>
		 	<if test='KEY1 == "attribute6" 			and VALUE1 != null and VALUE1 != ""'> and UPPER(zim_in.attribute6) like '%' || UPPER(#{VALUE1})||'%'</if>
		 	<if test='KEY1 == "invoice_num" 			and VALUE1 != null and VALUE1 != ""'> and UPPER(di.invoice_num) like '%' || UPPER(#{VALUE1})||'%'</if>


		 	<if test='KEY4 == "item" 			and VALUE4 != null and VALUE4 != ""'> and UPPER(trk_item_name) like '%' || UPPER(#{VALUE4})||'%'</if>
		 	<if test='KEY4 == "pm" 	and VALUE4 != null and VALUE4 != ""'> and user_job='PM' and UPPER(USER_NAME) like UPPER(#{VALUE4})||'%'</if>
		 	<if test='KEY4 == "em" 	and VALUE4 != null and VALUE4 != ""'> and user_job='EM' and UPPER(USER_NAME) like UPPER(#{VALUE4})||'%'</if>
		 	<if test='KEY4 == "buyer" and VALUE4 != null and VALUE4 != ""'> and user_job='BUYER' and UPPER(USER_NAME) like UPPER(#{VALUE4})||'%' </if>
		 	<if test='KEY4 == "qc" 	and VALUE4 != null and VALUE4 != ""'> and user_job='QC' and UPPER(USER_NAME) like UPPER(#{VALUE4})||'%'</if>
		 	<if test='KEY4 == "sm" 	and VALUE4 != null and VALUE4 != ""'> and user_job='SM' and UPPER(USER_NAME) like UPPER(#{VALUE4})||'%'</if>

		 	<if test='KEY4 == "attribute7" 			and VALUE4 != null and VALUE4 != ""'> and UPPER(zim_in.attribute7) like '%' || UPPER(#{VALUE4})||'%'</if>
		 	<if test='KEY4 == "attribute3" 			and VALUE4 != null and VALUE4 != ""'> and UPPER(zim_in.attribute3) like '%' || UPPER(#{VALUE4})||'%'</if>
		 	<if test='KEY4 == "attribute10" 			and VALUE4 != null and VALUE4 != ""'> and UPPER(zim_in.attribute10) like '%' || UPPER(#{VALUE4})||'%'</if>
		 	<if test='KEY4 == "attribute6" 			and VALUE4 != null and VALUE4 != ""'> and UPPER(zim_in.attribute6) like '%' || UPPER(#{VALUE4})||'%'</if>
		 	<if test='KEY4 == "invoice_num" 			and VALUE4 != null and VALUE4 != ""'> and UPPER(di.invoice_num) like '%' || UPPER(#{VALUE4})||'%'</if>


		 	<if test='KEY3 == "plan" '>
		 		<if test='(VALUE2 != null and VALUE2 !="") or (VALUE3 != null and VALUE3 !="")'>
		 			<if test='KEY2 == "mps" '> 	and mps_plan_date 	 between to_date(NVL(#{VALUE2},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE3},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY2 == "po" '> 	and po_plan_date 	 between to_date(NVL(#{VALUE2},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE3},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY2 == "cargo" '>  and cargo_plan_date  between to_date(NVL(#{VALUE2},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE3},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY2 == "fob" '> 	and fob_plan_date 	 between to_date(NVL(#{VALUE2},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE3},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY2 == "onsite" '> and onsite_plan_date between to_date(NVL(#{VALUE2},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE3},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 		</if>
		 	</if>
		 	<if test='KEY3 == "expected" '>
		 		<if test='(VALUE2 != null and VALUE2 !="") or (VALUE3 != null and VALUE3 !="")'>
		 			<if test='KEY2 == "mps" '> 	and mps_expected_date 	 between to_date(NVL(#{VALUE2},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE3},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY2 == "po" '>		and po_expected_date 	 between to_date(NVL(#{VALUE2},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE3},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY2 == "cargo" '>  and cargo_expected_date  between to_date(NVL(#{VALUE2},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE3},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY2 == "fob" '> 	and fob_expected_date 	 between to_date(NVL(#{VALUE2},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE3},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY2 == "onsite" '>	and onsite_expected_date between to_date(NVL(#{VALUE2},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE3},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 		</if>
		 	</if>
		 	<if test='KEY3 == "actual" '>
		 		<if test='(VALUE2 != null and VALUE2 !="") or (VALUE3 != null and VALUE3 !="")'>
		 			<if test='KEY2 == "mps" '> 	and mps_actual_date 	between to_date(NVL(#{VALUE2},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE3},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY2 == "po" '> 	and po_actual_date 		between to_date(NVL(#{VALUE2},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE3},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY2 == "cargo" '>  and cargo_actual_date 	between to_date(NVL(#{VALUE2},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE3},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY2 == "fob" '> 	and fob_actual_date		between to_date(NVL(#{VALUE2},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE3},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY2 == "onsite" '> and onsite_actual_date 	between to_date(NVL(#{VALUE2},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE3},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 		</if>
		 	</if>
		 	<if test='KEY6 == "plan" '>
		 		<if test='(VALUE5 != null and VALUE5 !="") or (VALUE6 != null and VALUE6 !="")'>
		 			<if test='KEY5 == "mps" '> 	and mps_plan_date 	 between to_date(NVL(#{VALUE5},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE6},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY5 == "po" '> 	and po_plan_date 	 between to_date(NVL(#{VALUE5},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE6},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY5 == "cargo" '>  and cargo_plan_date  between to_date(NVL(#{VALUE5},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE6},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY5 == "fob" '> 	and fob_plan_date 	 between to_date(NVL(#{VALUE5},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE6},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY5 == "onsite" '> and onsite_plan_date between to_date(NVL(#{VALUE5},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE6},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 		</if>
		 	</if>
		 	<if test='KEY6 == "expected" '>
		 		<if test='(VALUE5 != null and VALUE5 !="") or (VALUE6 != null and VALUE6 !="")'>
		 			<if test='KEY5 == "mps" '>	and mps_plan_date 		 between to_date(NVL(#{VALUE5},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE6},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY5 == "po" '>		and po_expected_date 	 between to_date(NVL(#{VALUE5},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE6},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY5 == "cargo" '>	and cargo_expected_date  between to_date(NVL(#{VALUE5},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE6},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY5 == "fob" '>	and fob_expected_date 	 between to_date(NVL(#{VALUE5},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE6},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY5 == "onsite" '>	and onsite_expected_date between to_date(NVL(#{VALUE5},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE6},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 		</if>
		 	</if>
		 	<if test='KEY6 == "actual" '>
		 		<if test='(VALUE5 != null and VALUE5 !="") or (VALUE6 != null and VALUE6 !="")'>
		 			<if test='KEY5 == "mps" '> 	and mps_actual_date    between to_date(NVL(#{VALUE5},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE6},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY5 == "po" '> 	and po_actual_date     between to_date(NVL(#{VALUE5},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE6},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY5 == "cargo" '>  and cargo_actual_date  between to_date(NVL(#{VALUE5},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE6},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY5 == "fob" '>	and fob_actual_date    between to_date(NVL(#{VALUE5},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE6},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY5 == "onsite" '> and onsite_actual_date between to_date(NVL(#{VALUE5},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE6},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 		</if>
		 	</if>
		    <if test='ISSUE_CHECK == "Y" '>
		    	and (cargo_actual_date IS NULL and cargo_plan_date <![CDATA[<]]> cargo_expected_date
		    		or (PO_ATCUAL_DATE IS NULL AND po_plan_date <![CDATA[<]]> po_expected_date   )
		    		or (MPS_ACTUAL_DATE IS NULL AND  mps_plan_date <![CDATA[<]]> mps_expected_date )
		    		or (fob_actual_date IS NULL AND  fob_plan_date <![CDATA[<]]> fob_expected_date )
		    		or (onsite_actual_date IS NULL AND  onsite_plan_date <![CDATA[<]]> onsite_expected_date )
		    		)
		    </if>
			<if test='OFFSHORE != null and OFFSHORE !=""'> and offshore = #{OFFSHORE}</if>
			<if test='PROJECT_NO != "" '> and zim_in.project_no = UPPER(#{PROJECT_NO})</if>

	 		)

	 		union
	 		select ZIM.TRK_ITEM_SEQ
			    ,ZIM.TRK_ITEM_NAME
			    ,NVL(TRK_ITEM_GROUP, -1) AS TRK_ITEM_GROUP
			    ,ORGANIZATION_ID
			    ,ZIM.PROJECT_ID
			    ,ZIM.PROJECT_NO
			    ,ZIM.REMARK
			    ,PA.NAME AS PROJECT_NAME
			    ,TASK_ID
			    ,TASK_NUMBER
			    ,(SELECT PT.TASK_NAME FROM PA_TASKS PT WHERE PT.PROJECT_ID = ZIM.PROJECT_ID AND PT.TASK_ID = ZIM.TASK_ID) TASK_NAME
			    ,BATCH
			    ,OFFSHORE
			    ,PRIMAVERA_ID
			    ,TO_CHAR(MPS_PLAN_DATE, 'YYYY/MM/DD') AS MPS_PLAN_DATE
			    ,TO_CHAR(MPS_EXPECTED_DATE, 'YYYY/MM/DD') AS MPS_EXPECTED_DATE
			    ,TO_CHAR(MPS_ACTUAL_DATE, 'YYYY/MM/DD') AS MPS_ACTUAL_DATE
			    ,PURCHASE_DURATION
	          	,TO_CHAR(TE_PLAN_DATE, 'YYYY/MM/DD') AS TE_PLAN_DATE
	          	,TO_CHAR(TE_EXPECTED_DATE, 'YYYY/MM/DD') AS TE_EXPECTED_DATE
	          	,TO_CHAR(TE_ACTUAL_DATE, 'YYYY/MM/DD') AS TE_ACTUAL_DATE
			    ,TO_CHAR(PO_PLAN_DATE, 'YYYY/MM/DD') AS PO_PLAN_DATE
			    ,TO_CHAR(PO_EXPECTED_DATE, 'YYYY/MM/DD') AS PO_EXPECTED_DATE
			    ,TO_CHAR(PO_ATCUAL_DATE, 'YYYY/MM/DD') AS PO_ATCUAL_DATE
			    ,MAKE_DURATION
			    ,PROGRESS
			    ,TO_CHAR(CARGO_PLAN_DATE, 'YYYY/MM/DD') AS CARGO_PLAN_DATE
			    ,TO_CHAR(CARGO_EXPECTED_DATE, 'YYYY/MM/DD') AS CARGO_EXPECTED_DATE
			    ,TO_CHAR(CARGO_PROMISED_DATE, 'YYYY/MM/DD') AS CARGO_PROMISED_DATE
			    ,TO_CHAR(CARGO_ACTUAL_DATE, 'YYYY/MM/DD') AS CARGO_ACTUAL_DATE
			    ,SHIPMENT_DURATION
			    ,TO_CHAR(FOB_PLAN_DATE, 'YYYY/MM/DD') AS FOB_PLAN_DATE
			    ,TO_CHAR(FOB_EXPECTED_DATE, 'YYYY/MM/DD') AS FOB_EXPECTED_DATE
			    ,TO_CHAR(FOB_ACTUAL_DATE, 'YYYY/MM/DD') AS FOB_ACTUAL_DATE
			    ,TRANS_DURATION
			    ,TO_CHAR(ONSITE_PLAN_DATE, 'YYYY/MM/DD') AS ONSITE_PLAN_DATE
			    ,TO_CHAR(ONSITE_EXPECTED_DATE, 'YYYY/MM/DD') AS ONSITE_EXPECTED_DATE
			    ,TO_CHAR(ONSITE_ACTUAL_DATE, 'YYYY/MM/DD') AS ONSITE_ACTUAL_DATE
			    ,PAYMENT_MILESTONE
			    ,TRK_ITEM_DEFAULT
			    ,IAV.PM_AD
			    ,IAV.PM_NAME
			    ,IAV.EM_AD
			    ,IAV.EM_NAME
			    ,IAV.BUYER_AD
			    ,IAV.BUYER_NAME
			    ,IAV.QC_AD
			    ,IAV.QC_NAME
			    ,IAV.SM_AD
			    ,IAV.SM_NAME
			    ,CASE WHEN CARGO_PLAN_DATE <![CDATA[<]]> CARGO_EXPECTED_DATE THEN 'Y' ELSE 'N' END AS ISSUE_FLAG
			    ,ZIM.INVOICE_NUM
			    ,ZIM.ATTRIBUTE1
			    ,ZIM.ATTRIBUTE2
			    ,ZIM.ATTRIBUTE3
			    ,ZIM.ATTRIBUTE4
			    ,ZIM.ATTRIBUTE5
			    ,ZIM.ATTRIBUTE6
			    ,ZIM.ATTRIBUTE7
			    ,ZIM.ATTRIBUTE8
			    ,ZIM.ATTRIBUTE9
			    ,ZIM.ATTRIBUTE10
			    ,ZIM.LAST_UPDATE_DATE
			    ,ZIM.LAST_UPDATED_BY
			    ,ZIM.CREATION_DATE
			    ,ZIM.CREATED_BY
			    ,EMP_PM.ZORG_ID AS PM_DEPT_CODE
			    ,EMP_PM.ZORG_NM AS PM_DEPT_NAME
			    ,EMP_EM.ZORG_ID AS EM_DEPT_CODE
			    ,EMP_EM.ZORG_NM AS EM_DEPT_NAME
			    ,EMP_BUYER.ZORG_ID AS BUYER_DEPT_CODE
			    ,EMP_BUYER.ZORG_NM AS BUYER_DEPT_NAME
			    ,EMP_QC.ZORG_ID AS QC_DEPT_CODE
			    ,EMP_QC.ZORG_NM AS QC_DEPT_NAME
			    ,CASE WHEN CNT = 1 THEN AA.INVOICE_NUM
			          WHEN CNT > 1 THEN AA.INVOICE_NUM || ' 외 ' || AA.CALC_CNT  || '건'
                      END  SEL_INVOICE_NUM
                 , (SELECT CASE WHEN COUNT(*) = 0 THEN NULL ELSE COUNT(*) END
		              FROM ESAATTH ATT
		             WHERE 1=1
		               AND ATT.GRP_CD  = ZDA.FILE_GRP_CD
		               AND ATT.STS <![CDATA[<>]]> 'D'
		                )  ATTH_CNT
		         , ZDA.FILE_GRP_CD
		         ,(SELECT COUNT(*)
		             FROM DESM_PACKING_MST
		            WHERE PROJECT_NO = ZIM.PROJECT_NO
		              AND TRK_ITEM_NAME = ZIM.TRK_ITEM_NAME ) AS PL_CNT
			from
	    		zvts_item_master zim
	    		,zvts_item_admin_v iav
			    ,pa_projects_all_INT pa
			    ,with_zvts_emp emp_pm
			    ,with_zvts_emp emp_em
			    ,with_zvts_emp emp_buyer
			    ,with_zvts_emp emp_qc
			    ,with_zvts_emp emp_sm
			    ,zvts_desm_attach zda
			    ,(select di.trk_item_seq,
		                    count(*) cnt,
		                    count(*)-1 calc_cnt,
		                    max(di.invoice_num) invoice_num
		               from ZVTS_DESM_INVOICE di
		              where 1=1 --di.trk_item_seq = zim.trk_item_seq
		             group by di.trk_item_seq ) aa
			 where 1=1
			     and zim.project_id = pa.project_id
			     and zim.trk_item_seq = iav.trk_item_seq(+)
			     and iav.pm_ad = emp_pm.ad_user_id(+)
			     and iav.em_ad = emp_em.ad_user_id(+)
			     and iav.buyer_ad = emp_buyer.ad_user_id(+)
			     and iav.qc_ad = emp_qc.ad_user_id(+)
			     and iav.sm_ad = emp_sm.ad_user_id(+)
		     	 and zim.trk_item_seq = aa.trk_item_seq(+)
		     	 and zim.project_no = zda.project_no(+)
				 and zim.trk_item_name = zda.trk_item_name(+)

    		CONNECT BY PRIOR zim.trk_item_seq = zim.trk_item_group
    			START WITH zim.trk_item_seq in
    		(
	    	 select
		     	distinct zim_in.trk_item_seq
		     from zvts_item_master zim_in
		     	,ZVTS_ITEM_MASTER_AUTH iav
			    ,pa_projects_all_INT pa
			    ,pa_projects_all_INT pa_inter
			    ,zvts_emp emp
			    ,ZVTS_DESM_INVOICE di
			 where 1=1
			     and zim_in.project_id = pa.project_id
			     and zim_in.trk_item_seq = iav.trk_item_seq(+)
			     and zim_in.attribute8 = pa_inter.segment1(+)
			     and iav.user_ad = emp.ad_user_id(+)
			     and zim_in.trk_item_seq = di.trk_item_seq(+)

		    <if test='VIEW_TYPE == "INTER"'>
				and zim_in.project_no like 'Z%'
				<if test='KEY1 == "project_name" 	and VALUE1 != null and VALUE1 != ""'> and upper(pa.name) like upper(#{VALUE1})||'%'</if>
		 		<if test='KEY1 == "project_no" 	and VALUE1 != null and VALUE1 != ""'> and zim_in.project_no = upper(#{VALUE1})</if>
		 		<if test='KEY4 == "project_name" 	and VALUE4 != null and VALUE4 != ""'> and upper(pa.name) like upper(#{VALUE4})||'%'</if>
		 		<if test='KEY4 == "project_no" 	and VALUE4 != null and VALUE4 != ""'> and zim_in.project_no = upper(#{VALUE4})</if>
			</if>

			<if test='VIEW_TYPE != "INTER"'>
				<if test='KEY1 == "project_name" 	and VALUE1 != null and VALUE1 != ""'> and upper(pa.name) like upper(#{VALUE1})||'%'</if>
		 		<if test='KEY1 == "project_no" 	and VALUE1 != null and VALUE1 != ""'> and zim_in.project_no = upper(#{VALUE1})</if>
				<if test='KEY4 == "project_name" 	and VALUE4 != null and VALUE4 != ""'> and upper(pa.name) like upper(#{VALUE4})||'%'</if>
		 		<if test='KEY4 == "project_no" 	and VALUE4 != null and VALUE4 != ""'> and zim_in.project_no = upper(#{VALUE4})</if>
			</if>


		    <if test='KEY1 == "item" 			and VALUE1 != null and VALUE1 != ""'> and UPPER(trk_item_name) like '%' || UPPER(#{VALUE1})||'%'</if>
		 	<if test='KEY1 == "pm" 	and VALUE1 != null and VALUE1 != ""'>   AND (IAV.PM_AD LIKE  '%' ||UPPER(#{VALUE1})||'%' OR IAV.PM_NAME LIKE  '%' ||UPPER(#{VALUE1})||'%')</if>
		 	<if test='KEY1 == "em" 	and VALUE1 != null and VALUE1 != ""'>   AND (IAV.EM_AD LIKE  '%' ||UPPER(#{VALUE1})||'%' OR IAV.EM_NAME LIKE  '%' ||UPPER(#{VALUE1})||'%')</if>
		 	<if test='KEY1 == "buyer" and VALUE1 != null and VALUE1 != ""'> AND (IAV.BUYER_AD LIKE  '%' ||UPPER(#{VALUE1})||'%' OR IAV.BUYER_NAME LIKE  '%' ||UPPER(#{VALUE1})||'%')</if>
		 	<if test='KEY1 == "qc" 	and VALUE1 != null and VALUE1 != ""'>   AND (IAV.QC_AD LIKE  '%' ||UPPER(#{VALUE1})||'%' OR IAV.QC_NAME LIKE  '%' ||UPPER(#{VALUE1})||'%')</if>
		 	<if test='KEY1 == "sm" 	and VALUE1 != null and VALUE1 != ""'>   AND (IAV.SM_AD LIKE  '%' ||UPPER(#{VALUE1})||'%' OR IAV.SM_NAME LIKE  '%' ||UPPER(#{VALUE1})||'%')</if>

		 	<if test='KEY1 == "attribute7" 			and VALUE1 != null and VALUE1 != ""'> and UPPER(zim_in.attribute7) like '%' || UPPER(#{VALUE1})||'%'</if>
		 	<if test='KEY1 == "attribute3" 			and VALUE1 != null and VALUE1 != ""'> and UPPER(zim_in.attribute3) like '%' || UPPER(#{VALUE1})||'%'</if>
		 	<if test='KEY1 == "attribute10" 			and VALUE1 != null and VALUE1 != ""'> and UPPER(zim_in.attribute10) like '%' || UPPER(#{VALUE1})||'%'</if>
		 	<if test='KEY1 == "attribute6" 			and VALUE1 != null and VALUE1 != ""'> and UPPER(zim_in.attribute6) like '%' || UPPER(#{VALUE1})||'%'</if>
		 	<if test='KEY1 == "invoice_num" 			and VALUE1 != null and VALUE1 != ""'> and UPPER(di.invoice_num) like '%' || UPPER(#{VALUE1})||'%'</if>


		 	<if test='KEY4 == "item" 			and VALUE4 != null and VALUE4 != ""'> and UPPER(trk_item_name) like '%' || UPPER(#{VALUE4})||'%'</if>
		 	<if test='KEY4 == "pm" 	and VALUE4 != null and VALUE4 != ""'>  and user_job='PM' and UPPER(USER_NAME) like UPPER(#{VALUE4})||'%'</if>
		 	<if test='KEY4 == "em" 	and VALUE4 != null and VALUE4 != ""'>  and user_job='EM' and UPPER(USER_NAME) like UPPER(#{VALUE4})||'%'</if>
		 	<if test='KEY4 == "buyer" and VALUE4 != null and VALUE4 != ""'>  and user_job='BUYER' and UPPER(USER_NAME) like UPPER(#{VALUE4})||'%'  </if>
		 	<if test='KEY4 == "qc" 	and VALUE4 != null and VALUE4 != ""'>  and user_job='QC' and UPPER(USER_NAME) like UPPER(#{VALUE4})||'%'</if>
		 	<if test='KEY4 == "sm" 	and VALUE4 != null and VALUE4 != ""'>  and user_job='SM' and UPPER(USER_NAME) like UPPER(#{VALUE4})||'%'</if>

		 	<if test='KEY4 == "attribute7" 			and VALUE4 != null and VALUE4 != ""'> and UPPER(zim_in.attribute7) like '%' || UPPER(#{VALUE4})||'%'</if>
		 	<if test='KEY4 == "attribute3" 			and VALUE4 != null and VALUE4 != ""'> and UPPER(zim_in.attribute3) like '%' || UPPER(#{VALUE4})||'%'</if>
		 	<if test='KEY4 == "attribute10" 			and VALUE4 != null and VALUE4 != ""'> and UPPER(zim_in.attribute10) like '%' || UPPER(#{VALUE4})||'%'</if>
		 	<if test='KEY4 == "attribute6" 			and VALUE4 != null and VALUE4 != ""'> and UPPER(zim_in.attribute6) like '%' || UPPER(#{VALUE4})||'%'</if>
		 	<if test='KEY4 == "invoice_num" 			and VALUE4 != null and VALUE4 != ""'> and UPPER(di.invoice_num) like '%' || UPPER(#{VALUE4})||'%'</if>

		 	<if test='KEY3 == "plan" '>
		 		<if test='(VALUE2 != null and VALUE2 !="") or (VALUE3 != null and VALUE3 !="")'>
		 			<if test='KEY2 == "mps" '> 	and mps_plan_date 	 between to_date(NVL(#{VALUE2},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE3},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY2 == "po" '> 	and po_plan_date 	 between to_date(NVL(#{VALUE2},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE3},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY2 == "cargo" '>  and cargo_plan_date  between to_date(NVL(#{VALUE2},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE3},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY2 == "fob" '> 	and fob_plan_date 	 between to_date(NVL(#{VALUE2},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE3},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY2 == "onsite" '> and onsite_plan_date between to_date(NVL(#{VALUE2},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE3},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 		</if>
		 	</if>
		 	<if test='KEY3 == "expected" '>
		 		<if test='(VALUE2 != null and VALUE2 !="") or (VALUE3 != null and VALUE3 !="")'>
		 			<if test='KEY2 == "mps" '> 	and mps_expected_date 	 between to_date(NVL(#{VALUE2},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE3},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY2 == "po" '>		and po_expected_date 	 between to_date(NVL(#{VALUE2},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE3},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY2 == "cargo" '>  and cargo_expected_date  between to_date(NVL(#{VALUE2},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE3},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY2 == "fob" '> 	and fob_expected_date 	 between to_date(NVL(#{VALUE2},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE3},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY2 == "onsite" '>	and onsite_expected_date between to_date(NVL(#{VALUE2},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE3},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 		</if>
		 	</if>
		 	<if test='KEY3 == "actual" '>
		 		<if test='(VALUE2 != null and VALUE2 !="") or (VALUE3 != null and VALUE3 !="")'>
		 			<if test='KEY2 == "mps" '> 	and mps_actual_date 	between to_date(NVL(#{VALUE2},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE3},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY2 == "po" '> 	and po_actual_date 		between to_date(NVL(#{VALUE2},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE3},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY2 == "cargo" '>  and cargo_actual_date 	between to_date(NVL(#{VALUE2},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE3},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY2 == "fob" '> 	and fob_actual_date		between to_date(NVL(#{VALUE2},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE3},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY2 == "onsite" '> and onsite_actual_date 	between to_date(NVL(#{VALUE2},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE3},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 		</if>
		 	</if>
		 	<if test='KEY6 == "plan" '>
		 		<if test='(VALUE5 != null and VALUE5 !="") or (VALUE6 != null and VALUE6 !="")'>
		 			<if test='KEY5 == "mps" '> 	and mps_plan_date 	 between to_date(NVL(#{VALUE5},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE6},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY5 == "po" '> 	and po_plan_date 	 between to_date(NVL(#{VALUE5},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE6},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY5 == "cargo" '>  and cargo_plan_date  between to_date(NVL(#{VALUE5},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE6},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY5 == "fob" '> 	and fob_plan_date 	 between to_date(NVL(#{VALUE5},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE6},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY5 == "onsite" '> and onsite_plan_date between to_date(NVL(#{VALUE5},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE6},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 		</if>
		 	</if>
		 	<if test='KEY6 == "expected" '>
		 		<if test='(VALUE5 != null and VALUE5 !="") or (VALUE6 != null and VALUE6 !="")'>
		 			<if test='KEY5 == "mps" '>	and mps_plan_date 		 between to_date(NVL(#{VALUE5},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE6},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY5 == "po" '>		and po_expected_date 	 between to_date(NVL(#{VALUE5},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE6},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY5 == "cargo" '>	and cargo_expected_date  between to_date(NVL(#{VALUE5},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE6},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY5 == "fob" '>	and fob_expected_date 	 between to_date(NVL(#{VALUE5},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE6},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY5 == "onsite" '>	and onsite_expected_date between to_date(NVL(#{VALUE5},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE6},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 		</if>
		 	</if>
		 	<if test='KEY6 == "actual" '>
		 		<if test='(VALUE5 != null and VALUE5 !="") or (VALUE6 != null and VALUE6 !="")'>
		 			<if test='KEY5 == "mps" '> 	and mps_actual_date    between to_date(NVL(#{VALUE5},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE6},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY5 == "po" '> 	and po_actual_date     between to_date(NVL(#{VALUE5},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE6},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY5 == "cargo" '>  and cargo_actual_date  between to_date(NVL(#{VALUE5},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE6},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY5 == "fob" '>	and fob_actual_date    between to_date(NVL(#{VALUE5},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE6},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY5 == "onsite" '> and onsite_actual_date between to_date(NVL(#{VALUE5},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE6},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 		</if>
		 	</if>
		    <if test='ISSUE_CHECK == "Y" '>
		    	and (cargo_actual_date IS NULL and cargo_plan_date <![CDATA[<]]> cargo_expected_date
		    		or (PO_ATCUAL_DATE IS NULL AND po_plan_date <![CDATA[<]]> po_expected_date   )
		    		or (MPS_ACTUAL_DATE IS NULL AND  mps_plan_date <![CDATA[<]]> mps_expected_date )
		    		or (fob_actual_date IS NULL AND  fob_plan_date <![CDATA[<]]> fob_expected_date )
		    		or (onsite_actual_date IS NULL AND  onsite_plan_date <![CDATA[<]]> onsite_expected_date )
		    		)
		    </if>
			<if test='OFFSHORE != null and OFFSHORE !=""'> and offshore = #{OFFSHORE}</if>
			<if test='PROJECT_NO != "" '> and zim_in.project_no = UPPER(#{PROJECT_NO})</if>
	 		)
	</select>

	<update id="saveIdsmSetup" parameterType="java.util.Map">
		MERGE INTO zvts_item_master
		USING DUAL
		ON (trk_item_seq = #{TRK_ITEM_SEQ})
		WHEN MATCHED THEN
		UPDATE SET
		trk_item_name = #{TRK_ITEM_NAME}
		,trk_item_group = decode(#{TRK_ITEM_GROUP}, '-1', null, #{TRK_ITEM_GROUP})
		,organization_id = #{ORGANIZATION_ID}
		,project_id = #{PROJECT_ID}
		,project_no = UPPER(#{PROJECT_NO})
		,task_id = (SELECT pt.task_id
		              FROM pa_tasks pt,
		             PA_PROJECTS_ALL_INT ppa
		       WHERE ppa.segment1 = UPPER(#{PROJECT_NO})
		         AND ppa.project_id = pt.project_id
		         AND pt.task_number = UPPER(#{TASK_NUMBER}) )
		,task_number = #{TASK_NUMBER}
		,batch = #{BATCH}
		,offshore = #{OFFSHORE}
		,primavera_id = #{PRIMAVERA_ID}
		,invoice_num = #{INVOICE_NUM}
		, mps_plan_date = to_date (#{MPS_PLAN_DATE},'yyyy/mm/dd')
		,mps_expected_date = to_date(#{MPS_EXPECTED_DATE},'yyyy/mm/dd')
		,mps_actual_date = to_date(#{MPS_ACTUAL_DATE},'yyyy/mm/dd')
		,te_plan_date = to_date (#{TE_PLAN_DATE},'yyyy/mm/dd')
		,te_expected_date = to_date(#{TE_EXPECTED_DATE},'yyyy/mm/dd')
		,te_actual_date = to_date(#{TE_ACTUAL_DATE},'yyyy/mm/dd')
		,purchase_duration = #{PURCHASE_DURATION}
		,po_plan_date = to_date(#{PO_PLAN_DATE},'yyyy/mm/dd')
		,po_expected_date = to_date(#{PO_EXPECTED_DATE},'yyyy/mm/dd')
		,po_atcual_date = to_date(#{PO_ATCUAL_DATE},'yyyy/mm/dd')
		,make_duration = #{MAKE_DURATION}
		,progress = #{PROGRESS}
		,cargo_plan_date = to_date(#{CARGO_PLAN_DATE},'yyyy/mm/dd')
		,cargo_expected_date = to_date(#{CARGO_EXPECTED_DATE},'yyyy/mm/dd')
		,cargo_promised_date = to_date(#{CARGO_PROMISED_DATE},'yyyy/mm/dd')
		,cargo_actual_date = to_date(#{CARGO_ACTUAL_DATE},'yyyy/mm/dd')
		,shipment_duration = #{SHIPMENT_DURATION}
		,fob_plan_date = to_date(#{FOB_PLAN_DATE},'yyyy/mm/dd')
		,fob_expected_date = to_date(#{FOB_EXPECTED_DATE},'yyyy/mm/dd')
		,fob_actual_date = to_date(#{FOB_ACTUAL_DATE},'yyyy/mm/dd')
		,trans_duration = #{TRANS_DURATION}
		,onsite_plan_date = to_date(#{ONSITE_PLAN_DATE},'yyyy/mm/dd')
		,onsite_expected_date = to_date(#{ONSITE_EXPECTED_DATE},'yyyy/mm/dd')
		,onsite_actual_date = to_date(#{ONSITE_ACTUAL_DATE},'yyyy/mm/dd')
		,payment_milestone = #{PAYMENT_MILESTONE}
		,trk_item_default = #{TRK_ITEM_DEFAULT}
		,pm_ad = #{PM_AD}
		,pm_name = #{PM_NAME}
		,em_ad = #{EM_AD}
		,em_name = #{EM_NAME}
		,buyer_ad = #{BUYER_AD}
		,buyer_name = #{BUYER_NAME}
		,qc_ad = #{QC_AD}
		,qc_name = #{QC_NAME}
		,sm_ad = #{SM_AD}
		,sm_name = #{SM_NAME}
		,ATTRIBUTE1 = #{ATTRIBUTE1}
		,ATTRIBUTE2 = #{ATTRIBUTE2}
		,ATTRIBUTE3 = #{ATTRIBUTE3}
		,ATTRIBUTE4 = #{ATTRIBUTE4}
		,ATTRIBUTE5 = #{ATTRIBUTE5}
		,ATTRIBUTE6 = #{ATTRIBUTE6}
		,ATTRIBUTE7 = #{ATTRIBUTE7}
		,ATTRIBUTE8 = #{ATTRIBUTE8}
		,ATTRIBUTE10 = #{ATTRIBUTE10}
		,last_update_date = sysdate
		,last_updated_by = #{USER_AD}
		WHEN NOT MATCHED THEN
		INSERT
		(trk_item_seq
		,trk_item_name
		,trk_item_group
		,organization_id
		,project_id
		,project_no
		,task_id
		,task_number
		,batch
		,offshore
		,primavera_id
		,invoice_num
		, mps_plan_date
		,mps_expected_date
		,mps_actual_date
		,purchase_duration
		,te_plan_date
		,te_expected_date
		,te_actual_date
		,po_plan_date
		,po_expected_date
		,po_atcual_date
		,make_duration
		,progress
		,cargo_plan_date
		,cargo_expected_date
		,cargo_promised_date
		,cargo_actual_date
		,shipment_duration
		,fob_plan_date
		,fob_expected_date
		,fob_actual_date
		,trans_duration
		,onsite_plan_date
		,onsite_expected_date
		,onsite_actual_date
		,payment_milestone
		,trk_item_default
		,ATTRIBUTE1
		,ATTRIBUTE2
		,ATTRIBUTE3
		,ATTRIBUTE4
		,ATTRIBUTE5
		,ATTRIBUTE6
		,ATTRIBUTE7
		,ATTRIBUTE8
		,ATTRIBUTE10
		,last_update_date
		,last_updated_by
		,CREATION_DATE
		,CREATED_BY)
		VALUES
		(#{TRK_ITEM_SEQ}
		,#{TRK_ITEM_NAME}
		,decode(#{TRK_ITEM_GROUP}, '-1', null, #{TRK_ITEM_GROUP})
		,#{ORGANIZATION_ID}
		,#{PROJECT_ID}
		,UPPER(#{PROJECT_NO})
		,(SELECT pt.task_id
		      FROM pa_tasks pt,
		     PA_PROJECTS_ALL_INT ppa
		    WHERE ppa.segment1 = UPPER(#{PROJECT_NO})
		     AND ppa.project_id = pt.project_id
		     AND pt.task_number = UPPER(#{TASK_NUMBER}) )
		,#{TASK_NUMBER}
		,#{BATCH}
		,#{OFFSHORE}
		,#{PRIMAVERA_ID}
		,#{INVOICE_NUM}
		,to_date (#{MPS_PLAN_DATE},'yyyy/mm/dd')
		,to_date(#{MPS_EXPECTED_DATE},'yyyy/mm/dd')
		,to_date(#{MPS_ACTUAL_DATE},'yyyy/mm/dd')
		,#{PURCHASE_DURATION}
		,to_date (#{TE_PLAN_DATE},'yyyy/mm/dd')
		,to_date(#{TE_EXPECTED_DATE},'yyyy/mm/dd')
		,to_date(#{TE_ACTUAL_DATE},'yyyy/mm/dd')
		,to_date(#{PO_PLAN_DATE},'yyyy/mm/dd')
		,to_date(#{PO_EXPECTED_DATE},'yyyy/mm/dd')
		,to_date(#{PO_ATCUAL_DATE},'yyyy/mm/dd')
		,#{MAKE_DURATION}
		,#{PROGRESS}
		,to_date(#{CARGO_PLAN_DATE},'yyyy/mm/dd')
		,to_date(#{CARGO_EXPECTED_DATE},'yyyy/mm/dd')
		,to_date(#{CARGO_PROMISED_DATE},'yyyy/mm/dd')
		,to_date(#{CARGO_ACTUAL_DATE},'yyyy/mm/dd')
		,#{SHIPMENT_DURATION}
		,to_date(#{FOB_PLAN_DATE},'yyyy/mm/dd')
		,to_date(#{FOB_EXPECTED_DATE},'yyyy/mm/dd')
		,to_date(#{FOB_ACTUAL_DATE},'yyyy/mm/dd')
		,#{TRANS_DURATION}
		,to_date(#{ONSITE_PLAN_DATE},'yyyy/mm/dd')
		,to_date(#{ONSITE_EXPECTED_DATE},'yyyy/mm/dd')
		,to_date(#{ONSITE_ACTUAL_DATE},'yyyy/mm/dd')
		,#{PAYMENT_MILESTONE}
		,#{TRK_ITEM_DEFAULT}
		,#{ATTRIBUTE1}
		,#{ATTRIBUTE2}
		,#{ATTRIBUTE3}
		,#{ATTRIBUTE4}
		,#{ATTRIBUTE5}
		,#{ATTRIBUTE6}
		,#{ATTRIBUTE7}
		,#{ATTRIBUTE8}
		,#{ATTRIBUTE10}
		,sysdate
		,#{USER_AD}
		,sysdate
		,#{USER_AD})
    </update>

	<select id="getIdsmSetupDlgInvEditList" parameterType="java.util.Map" resultType="java.util.HashMap">
    	SELECT ROWIDTOCHAR(DI.ROWID) AS ROW_ID,
    	       DI.TRK_ITEM_SEQ     ,
			   DI.PROJECT_NO       ,
			   DI.INVOICE_NUM      ,
			   DI.LAST_UPDATE_DATE ,
			   DI.LAST_UPDATED_BY  ,
			   DI.CREATION_DATE    ,
			   DI.CREATED_BY
    	  FROM ZVTS_DESM_INVOICE DI
    	 WHERE DI.TRK_ITEM_SEQ = #{TRK_ITEM_SEQ}
    </select>

	<select id="getIdsmSetupDlgInvEditAllList" parameterType="java.util.Map" resultType="java.util.HashMap">
		SELECT ZDI.INVOICE_NUM
		  FROM ZVTS_ITEM_MASTER ZIM,
		       ZVTS_DESM_INVOICE ZDI
		 WHERE ZIM.PROJECT_NO = ZDI.PROJECT_NO
		   AND ZIM.TRK_ITEM_SEQ = ZDI.TRK_ITEM_SEQ
		   AND ZIM.PROJECT_NO = #{PROJECT_NO}
    </select>

	<delete id="deleteIdsmSetupDlgInvEdit" parameterType="java.util.Map">
    	DELETE FROM ZVTS_DESM_INVOICE
    		WHERE ROWID = #{ROW_ID}
	</delete>

	<update id="saveIdsmSetupDlgInvEdit" parameterType="java.util.Map">
		MERGE INTO ZVTS_DESM_INVOICE DI
		USING DUAL
		ON (ROWIDTOCHAR(DI.ROWID) = #{ROW_ID})
		WHEN MATCHED THEN
		     UPDATE SET INVOICE_NUM = #{INVOICE_NUM},
		                PROJECT_NO = #{PROJECT_NO},
		                LAST_UPDATE_DATE = SYSDATE,
		                LAST_UPDATED_BY = #{USER_AD}
		WHEN NOT MATCHED THEN
		     INSERT
		     (TRK_ITEM_SEQ,
		      PROJECT_NO,
		      INVOICE_NUM,
		      LAST_UPDATE_DATE,
		      LAST_UPDATED_BY,
		      CREATION_DATE,
		      CREATED_BY)
		      VALUES
		     (#{TRK_ITEM_SEQ},
		      #{PROJECT_NO},
		      #{INVOICE_NUM},
		      SYSDATE,
		      #{USER_AD},
		      SYSDATE,
		      #{USER_AD})
	</update>

	<select id="getIdsmSetupDlgCreateItemProject" parameterType="java.util.Map" resultType="java.util.HashMap">
     	SELECT
			SEGMENT1 AS PROJECT_CODE
			,NAME AS PROJECT_NAME
			,TO_CHAR(PROJECT_ID) AS PROJECT_ID
		FROM
			PA_PROJECTS_ALL_INT PPA,
		   (SELECT COUNT(*) AS PROJECT_ALL_CNT
		      FROM DESM_USER_PROJECT_ALL
		     WHERE USER_AD = #{USER_AD}  ) DUPA
		WHERE (DUPA.PROJECT_ALL_CNT = 1 OR
		      (EXISTS (SELECT 1 FROM DESM_USER_PROJECT DUP
				            WHERE DUP.PROJECT_CODE = PPA.SEGMENT1 AND DUP.USER_AD = #{USER_AD})))
		  AND (UPPER(SEGMENT1) like '%'|| UPPER(#{keyword}) ||'%' OR UPPER(NAME) like '%'|| UPPER(#{keyword}) ||'%')
	</select>

	<select id="getIdsmSetupDlgItemScheduleItemTreeName" parameterType="java.util.Map" resultType="java.util.HashMap">
		SELECT ZIM.TRK_ITEM_SEQ
			    ,ZIM.TRK_ITEM_NAME
			    ,ZIM.TRK_ITEM_GROUP
			    ,ZIM.ORGANIZATION_ID
			    ,ZIM.PROJECT_ID
			    ,ZIM.PROJECT_NO
			    ,(SELECT NAME FROM PA_PROJECTS_ALL_INT WHERE PROJECT_ID = ZIM.PROJECT_ID) AS PROJECT_NAME
			    ,ZIM.TASK_ID
			    ,ZIM.TASK_NUMBER
			    ,(SELECT PT.TASK_NAME FROM PA_TASKS PT WHERE PT.PROJECT_ID = ZIM.PROJECT_ID AND PT.TASK_ID = ZIM.TASK_ID) TASK_NAME
			    ,ZIM.BATCH
			    ,ZIM.OFFSHORE
			    ,ZIM.PRIMAVERA_ID
			    ,TO_CHAR(ZIM.MPS_PLAN_DATE, 'YYYY/MM/DD') AS MPS_PLAN_DATE
			    ,TO_CHAR(ZIM.MPS_EXPECTED_DATE, 'YYYY/MM/DD') AS MPS_EXPECTED_DATE
			    ,TO_CHAR(ZIM.MPS_ACTUAL_DATE, 'YYYY/MM/DD') AS MPS_ACTUAL_DATE
			    ,TO_CHAR(ZIM.TE_PLAN_DATE, 'YYYY/MM/DD') AS TE_PLAN_DATE
			    ,TO_CHAR(ZIM.TE_EXPECTED_DATE, 'YYYY/MM/DD') AS TE_EXPECTED_DATE
			    ,TO_CHAR(ZIM.TE_ACTUAL_DATE, 'YYYY/MM/DD') AS TE_ACTUAL_DATE
			    ,ZIM.PURCHASE_DURATION
			    ,TO_CHAR(ZIM.PO_PLAN_DATE, 'YYYY/MM/DD') AS PO_PLAN_DATE
			    ,TO_CHAR(ZIM.PO_EXPECTED_DATE, 'YYYY/MM/DD') AS PO_EXPECTED_DATE
			    ,TO_CHAR(ZIM.PO_ATCUAL_DATE, 'YYYY/MM/DD') AS PO_ATCUAL_DATE
			    ,ZIM.MAKE_DURATION
			    ,ZIM.PROGRESS
			    ,TO_CHAR(ZIM.CARGO_PLAN_DATE, 'YYYY/MM/DD') AS CARGO_PLAN_DATE
			    ,TO_CHAR(ZIM.CARGO_EXPECTED_DATE, 'YYYY/MM/DD') AS CARGO_EXPECTED_DATE
			    ,TO_CHAR(ZIM.CARGO_PROMISED_DATE, 'YYYY/MM/DD') AS CARGO_PROMISED_DATE
			    ,TO_CHAR(ZIM.CARGO_ACTUAL_DATE, 'YYYY/MM/DD') AS CARGO_ACTUAL_DATE
			    ,ZIM.SHIPMENT_DURATION
			    ,TO_CHAR(ZIM.FOB_PLAN_DATE, 'YYYY/MM/DD') AS FOB_PLAN_DATE
			    ,TO_CHAR(ZIM.FOB_EXPECTED_DATE, 'YYYY/MM/DD') AS FOB_EXPECTED_DATE
			    ,TO_CHAR(ZIM.FOB_ACTUAL_DATE, 'YYYY/MM/DD') AS FOB_ACTUAL_DATE
			    ,ZIM.TRANS_DURATION
			    ,TO_CHAR(ZIM.ONSITE_PLAN_DATE, 'YYYY/MM/DD') AS ONSITE_PLAN_DATE
			    ,TO_CHAR(ZIM.ONSITE_EXPECTED_DATE, 'YYYY/MM/DD') AS ONSITE_EXPECTED_DATE
			    ,TO_CHAR(ZIM.ONSITE_ACTUAL_DATE, 'YYYY/MM/DD') AS ONSITE_ACTUAL_DATE
			    ,ZIM.PAYMENT_MILESTONE
			    ,TRK_ITEM_DEFAULT
			    ,CASE WHEN ZIM.CARGO_PLAN_DATE <![CDATA[<]]> ZIM.CARGO_EXPECTED_DATE THEN 'Y' ELSE 'N' END AS ISSUE_FLAG
			    ,ZIM.INVOICE_NUM
			    ,ZIM.ATTRIBUTE1
			    ,ZIM.ATTRIBUTE2
			    ,ZIM.ATTRIBUTE3
			    ,ZIM.ATTRIBUTE4
			    ,ZIM.ATTRIBUTE5
			    ,ZIM.ATTRIBUTE6
			    ,ZIM.ATTRIBUTE7
			    ,ZIM.ATTRIBUTE8
			    ,ZIM.ATTRIBUTE9
			    ,ZIM.ATTRIBUTE10
			    ,ZIM.LAST_UPDATE_DATE
			    ,ZIM.LAST_UPDATED_BY
			    ,ZIM.CREATION_DATE
			    ,ZIM.CREATED_BY
		          ,CASE WHEN CNT = 1 THEN AA.INVOICE_NUM
		                WHEN CNT > 1 THEN AA.INVOICE_NUM || ' 외 ' || AA.CALC_CNT  || '건'
		                      ELSE ''
		                      END  SEL_INVOICE_NUM
		         , ZDA.FILE_GRP_CD
		         ,SUM_V.ROOT_NAME
		    FROM (SELECT * FROM ZVTS_ITEM_MASTER WHERE TRK_ITEM_SEQ =  #{TRK_ITEM_SEQ} ) ZIM
			    ,zvts_desm_attach zda
		          ,(select di.trk_item_seq,
		                    count(*) cnt,
		                    count(*)-1 calc_cnt,
		                    max(di.invoice_num) invoice_num
		               from ZVTS_DESM_INVOICE di
		               where 1=1
		            group by di.trk_item_seq ) aa
		         ,DESM_SUPPLY_SUMMARY_V SUM_V
			 WHERE 1=1
			     and ZIM.trk_item_seq = aa.trk_item_seq(+)
		         and zim.project_no = zda.project_no(+)
		         and zim.trk_item_name = zda.trk_item_name(+)
 	             AND ZIM.TRK_ITEM_SEQ = SUM_V.TRK_ITEM_SEQ
	</select>

	<select id="getIdsmSetupDlgItemScheduleItem" parameterType="java.util.Map" resultType="java.util.HashMap">
			SELECT ZIM.TRK_ITEM_SEQ
			    ,ZIM.TRK_ITEM_NAME
			    ,TRK_ITEM_GROUP
			    ,ORGANIZATION_ID
			    ,ZIM.PROJECT_ID
			    ,ZIM.PROJECT_NO
			    ,PA.NAME AS PROJECT_NAME
			    ,TASK_ID
			    ,TASK_NUMBER
			    ,(SELECT PT.TASK_NAME FROM PA_TASKS PT WHERE PT.PROJECT_ID = ZIM.PROJECT_ID AND PT.TASK_ID = ZIM.TASK_ID) TASK_NAME
			    ,BATCH
			    ,OFFSHORE
			    ,PRIMAVERA_ID
			    ,TO_CHAR(MPS_PLAN_DATE, 'YYYY/MM/DD') AS MPS_PLAN_DATE
			    ,TO_CHAR(MPS_EXPECTED_DATE, 'YYYY/MM/DD') AS MPS_EXPECTED_DATE
			    ,TO_CHAR(MPS_ACTUAL_DATE, 'YYYY/MM/DD') AS MPS_ACTUAL_DATE
			    ,TO_CHAR(TE_PLAN_DATE, 'YYYY/MM/DD') AS TE_PLAN_DATE
			    ,TO_CHAR(TE_EXPECTED_DATE, 'YYYY/MM/DD') AS TE_EXPECTED_DATE
			    ,TO_CHAR(TE_ACTUAL_DATE, 'YYYY/MM/DD') AS TE_ACTUAL_DATE
			    ,PURCHASE_DURATION
			    ,TO_CHAR(PO_PLAN_DATE, 'YYYY/MM/DD') AS PO_PLAN_DATE
			    ,TO_CHAR(PO_EXPECTED_DATE, 'YYYY/MM/DD') AS PO_EXPECTED_DATE
			    ,TO_CHAR(PO_ATCUAL_DATE, 'YYYY/MM/DD') AS PO_ATCUAL_DATE
			    ,MAKE_DURATION
			    ,PROGRESS
			    ,TO_CHAR(CARGO_PLAN_DATE, 'YYYY/MM/DD') AS CARGO_PLAN_DATE
			    ,TO_CHAR(CARGO_EXPECTED_DATE, 'YYYY/MM/DD') AS CARGO_EXPECTED_DATE
			    ,TO_CHAR(CARGO_PROMISED_DATE, 'YYYY/MM/DD') AS CARGO_PROMISED_DATE
			    ,TO_CHAR(CARGO_ACTUAL_DATE, 'YYYY/MM/DD') AS CARGO_ACTUAL_DATE
			    ,SHIPMENT_DURATION
			    ,TO_CHAR(FOB_PLAN_DATE, 'YYYY/MM/DD') AS FOB_PLAN_DATE
			    ,TO_CHAR(FOB_EXPECTED_DATE, 'YYYY/MM/DD') AS FOB_EXPECTED_DATE
			    ,TO_CHAR(FOB_ACTUAL_DATE, 'YYYY/MM/DD') AS FOB_ACTUAL_DATE
			    ,TRANS_DURATION
			    ,TO_CHAR(ONSITE_PLAN_DATE, 'YYYY/MM/DD') AS ONSITE_PLAN_DATE
			    ,TO_CHAR(ONSITE_EXPECTED_DATE, 'YYYY/MM/DD') AS ONSITE_EXPECTED_DATE
			    ,TO_CHAR(ONSITE_ACTUAL_DATE, 'YYYY/MM/DD') AS ONSITE_ACTUAL_DATE
			    ,PAYMENT_MILESTONE
			    ,TRK_ITEM_DEFAULT
			    ,IAV.PM_AD
			    ,IAV.PM_NAME
			    ,IAV.EM_AD
			    ,IAV.EM_NAME
			    ,IAV.BUYER_AD
			    ,IAV.BUYER_NAME
			    ,IAV.QC_AD
			    ,IAV.QC_NAME
			    ,IAV.SM_AD
			    ,IAV.SM_NAME
			    ,CASE WHEN CARGO_PLAN_DATE <![CDATA[<]]> CARGO_EXPECTED_DATE THEN 'Y' ELSE 'N' END AS ISSUE_FLAG
			    ,ZIM.INVOICE_NUM
			    ,ZIM.ATTRIBUTE1
			    ,ZIM.ATTRIBUTE2
			    ,ZIM.ATTRIBUTE3
			    ,ZIM.ATTRIBUTE4
			    ,ZIM.ATTRIBUTE5
			    ,ZIM.ATTRIBUTE6
			    ,ZIM.ATTRIBUTE7
			    ,ZIM.ATTRIBUTE8
			    ,ZIM.ATTRIBUTE9
			    ,ZIM.ATTRIBUTE10
			    ,ZIM.LAST_UPDATE_DATE
			    ,ZIM.LAST_UPDATED_BY
			    ,ZIM.CREATION_DATE
			    ,ZIM.CREATED_BY
			    ,EMP_PM.ZORG_ID AS PM_DEPT_CODE
			    ,EMP_PM.ZORG_NM AS PM_DEPT_NAME
			    ,EMP_EM.ZORG_ID AS EM_DEPT_CODE
			    ,EMP_EM.ZORG_NM AS EM_DEPT_NAME
			    ,EMP_BUYER.ZORG_ID AS BUYER_DEPT_CODE
			    ,EMP_BUYER.ZORG_NM AS BUYER_DEPT_NAME
			    ,EMP_QC.ZORG_ID AS QC_DEPT_CODE
			    ,EMP_QC.ZORG_NM AS QC_DEPT_NAME
		          ,CASE WHEN CNT = 1 THEN AA.INVOICE_NUM
		                WHEN CNT > 1 THEN AA.INVOICE_NUM || ' 외 ' || AA.CALC_CNT  || '건'
		                      ELSE ''
		                      END  SEL_INVOICE_NUM
		         , ZDA.FILE_GRP_CD
		    FROM
	    		(SELECT * FROM ZVTS_ITEM_MASTER
	    		CONNECT BY PRIOR TRK_ITEM_SEQ = TRK_ITEM_GROUP
    			START WITH TRK_ITEM_SEQ =  #{TRK_ITEM_SEQ}
	    		) ZIM
			    ,PA_PROJECTS_ALL_INT PA
			    ,ZVTS_EMP EMP_PM
			    ,ZVTS_EMP EMP_EM
			    ,ZVTS_EMP EMP_BUYER
			    ,ZVTS_EMP EMP_QC
			    ,ZVTS_EMP EMP_SM
			    ,ZVTS_ITEM_ADMIN_V IAV
			    ,zvts_desm_attach zda
		          ,(select di.trk_item_seq,
		                    count(*) cnt,
		                    count(*)-1 calc_cnt,
		                    max(di.invoice_num) invoice_num
		               from ZVTS_DESM_INVOICE di
		               where 1=1
		            group by di.trk_item_seq ) aa
			 WHERE 1=1
			     AND ZIM.PROJECT_ID = PA.PROJECT_ID
			     AND ZIM.TRK_ITEM_SEQ = IAV.TRK_ITEM_SEQ(+)
			     AND IAV.PM_AD = EMP_PM.AD_USER_ID(+)
			     AND IAV.EM_AD = EMP_EM.AD_USER_ID(+)
			     AND IAV.BUYER_AD = EMP_BUYER.AD_USER_ID(+)
			     AND IAV.SM_AD = EMP_SM.AD_USER_ID(+)
			     AND IAV.QC_AD = EMP_QC.AD_USER_ID(+)
			     and ZIM.trk_item_seq = aa.trk_item_seq(+)
		           and zim.project_no = zda.project_no(+)
		           and zim.trk_item_name = zda.trk_item_name(+)
    		UNION
    		SELECT ZIM.TRK_ITEM_SEQ
			    ,ZIM.TRK_ITEM_NAME
			    ,TRK_ITEM_GROUP
			    ,ORGANIZATION_ID
			    ,ZIM.PROJECT_ID
			    ,ZIM.PROJECT_NO
			    ,PA.NAME AS PROJECT_NAME
			    ,TASK_ID
			    ,TASK_NUMBER
			    ,(SELECT PT.TASK_NAME FROM PA_TASKS PT WHERE PT.PROJECT_ID = ZIM.PROJECT_ID AND PT.TASK_ID = ZIM.TASK_ID) TASK_NAME
			    ,BATCH
			    ,OFFSHORE
			    ,PRIMAVERA_ID
			    ,TO_CHAR(MPS_PLAN_DATE, 'YYYY/MM/DD') AS MPS_PLAN_DATE
			    ,TO_CHAR(MPS_EXPECTED_DATE, 'YYYY/MM/DD') AS MPS_EXPECTED_DATE
			    ,TO_CHAR(MPS_ACTUAL_DATE, 'YYYY/MM/DD') AS MPS_ACTUAL_DATE
			    ,TO_CHAR(TE_PLAN_DATE, 'YYYY/MM/DD') AS TE_PLAN_DATE
			    ,TO_CHAR(TE_EXPECTED_DATE, 'YYYY/MM/DD') AS TE_EXPECTED_DATE
			    ,TO_CHAR(TE_ACTUAL_DATE, 'YYYY/MM/DD') AS TE_ACTUAL_DATE
			    ,PURCHASE_DURATION
			    ,TO_CHAR(PO_PLAN_DATE, 'YYYY/MM/DD') AS PO_PLAN_DATE
			    ,TO_CHAR(PO_EXPECTED_DATE, 'YYYY/MM/DD') AS PO_EXPECTED_DATE
			    ,TO_CHAR(PO_ATCUAL_DATE, 'YYYY/MM/DD') AS PO_ATCUAL_DATE
			    ,MAKE_DURATION
			    ,PROGRESS
			    ,TO_CHAR(CARGO_PLAN_DATE, 'YYYY/MM/DD') AS CARGO_PLAN_DATE
			    ,TO_CHAR(CARGO_EXPECTED_DATE, 'YYYY/MM/DD') AS CARGO_EXPECTED_DATE
			    ,TO_CHAR(CARGO_PROMISED_DATE, 'YYYY/MM/DD') AS CARGO_PROMISED_DATE
			    ,TO_CHAR(CARGO_ACTUAL_DATE, 'YYYY/MM/DD') AS CARGO_ACTUAL_DATE
			    ,SHIPMENT_DURATION
			    ,TO_CHAR(FOB_PLAN_DATE, 'YYYY/MM/DD') AS FOB_PLAN_DATE
			    ,TO_CHAR(FOB_EXPECTED_DATE, 'YYYY/MM/DD') AS FOB_EXPECTED_DATE
			    ,TO_CHAR(FOB_ACTUAL_DATE, 'YYYY/MM/DD') AS FOB_ACTUAL_DATE
			    ,TRANS_DURATION
			    ,TO_CHAR(ONSITE_PLAN_DATE, 'YYYY/MM/DD') AS ONSITE_PLAN_DATE
			    ,TO_CHAR(ONSITE_EXPECTED_DATE, 'YYYY/MM/DD') AS ONSITE_EXPECTED_DATE
			    ,TO_CHAR(ONSITE_ACTUAL_DATE, 'YYYY/MM/DD') AS ONSITE_ACTUAL_DATE
			    ,PAYMENT_MILESTONE
			    ,TRK_ITEM_DEFAULT
			    ,IAV.PM_AD
			    ,IAV.PM_NAME
			    ,IAV.EM_AD
			    ,IAV.EM_NAME
			    ,IAV.BUYER_AD
			    ,IAV.BUYER_NAME
			    ,IAV.QC_AD
			    ,IAV.QC_NAME
			    ,IAV.SM_AD
			    ,IAV.SM_NAME
			    ,CASE WHEN CARGO_PLAN_DATE <![CDATA[<]]> CARGO_EXPECTED_DATE THEN 'Y' ELSE 'N' END AS ISSUE_FLAG
			    ,ZIM.INVOICE_NUM
			    ,ZIM.ATTRIBUTE1
			    ,ZIM.ATTRIBUTE2
			    ,ZIM.ATTRIBUTE3
			    ,ZIM.ATTRIBUTE4
			    ,ZIM.ATTRIBUTE5
			    ,ZIM.ATTRIBUTE6
			    ,ZIM.ATTRIBUTE7
			    ,ZIM.ATTRIBUTE8
			    ,ZIM.ATTRIBUTE9
			    ,ZIM.ATTRIBUTE10
			    ,ZIM.LAST_UPDATE_DATE
			    ,ZIM.LAST_UPDATED_BY
			    ,ZIM.CREATION_DATE
			    ,ZIM.CREATED_BY
			    ,EMP_PM.ZORG_ID AS PM_DEPT_CODE
			    ,EMP_PM.ZORG_NM AS PM_DEPT_NAME
			    ,EMP_EM.ZORG_ID AS EM_DEPT_CODE
			    ,EMP_EM.ZORG_NM AS EM_DEPT_NAME
			    ,EMP_BUYER.ZORG_ID AS BUYER_DEPT_CODE
			    ,EMP_BUYER.ZORG_NM AS BUYER_DEPT_NAME
			    ,EMP_QC.ZORG_ID AS QC_DEPT_CODE
			    ,EMP_QC.ZORG_NM AS QC_DEPT_NAME
		          ,CASE WHEN CNT = 1 THEN AA.INVOICE_NUM
		                WHEN CNT > 1 THEN AA.INVOICE_NUM || ' 외 ' || AA.CALC_CNT  || '건'
		                      ELSE ''
		                      END  SEL_INVOICE_NUM
		         , ZDA.FILE_GRP_CD
		    FROM
	    		(SELECT * FROM ZVTS_ITEM_MASTER
	    		CONNECT BY TRK_ITEM_SEQ =  PRIOR TRK_ITEM_GROUP
    			START WITH TRK_ITEM_SEQ = #{TRK_ITEM_SEQ}
	    		) ZIM
			    ,PA_PROJECTS_ALL_INT PA
			    ,ZVTS_EMP EMP_PM
			    ,ZVTS_EMP EMP_EM
			    ,ZVTS_EMP EMP_BUYER
			    ,ZVTS_EMP EMP_QC
			    ,ZVTS_EMP EMP_SM
			    ,ZVTS_ITEM_ADMIN_V IAV
			    ,zvts_desm_attach zda
		          ,(select di.trk_item_seq,
		                    count(*) cnt,
		                    count(*)-1 calc_cnt,
		                    max(di.invoice_num) invoice_num
		               from ZVTS_DESM_INVOICE di
		               where 1=1
		            group by di.trk_item_seq ) aa
			 WHERE 1=1
			     AND ZIM.PROJECT_ID = PA.PROJECT_ID
			     AND ZIM.TRK_ITEM_SEQ = IAV.TRK_ITEM_SEQ(+)
			     AND IAV.PM_AD = EMP_PM.AD_USER_ID(+)
			     AND IAV.EM_AD = EMP_EM.AD_USER_ID(+)
			     AND IAV.BUYER_AD = EMP_BUYER.AD_USER_ID(+)
			     AND IAV.QC_AD = EMP_QC.AD_USER_ID(+)
			     AND IAV.SM_AD = EMP_SM.AD_USER_ID(+)
			     and ZIM.trk_item_seq = aa.trk_item_seq(+)
		           and zim.project_no = zda.project_no(+)
		           and zim.trk_item_name = zda.trk_item_name(+)
	</select>

	<update id="saveIdsmSetupDlgItemScheduleItemEdit" parameterType="java.util.Map">
    	UPDATE
			ZVTS_ITEM_MASTER
		SET
			TRK_ITEM_NAME = #{TRK_ITEM_NAME}
			,OFFSHORE = #{OFFSHORE}
			,PRIMAVERA_ID = #{PRIMAVERA_ID}
			,PAYMENT_MILESTONE = #{PAYMENT_MILESTONE}
			,ATTRIBUTE3 = #{ATTRIBUTE3}
			,ATTRIBUTE7 = #{ATTRIBUTE7}
			,ATTRIBUTE10 = #{ATTRIBUTE10}
			,MPS_PLAN_DATE = TO_DATE(#{MPS_PLAN_DATE}, 'YYYY/MM/DD')
			,MPS_EXPECTED_DATE = TO_DATE(#{MPS_EXPECTED_DATE}, 'YYYY/MM/DD')
			,MPS_ACTUAL_DATE = TO_DATE(#{MPS_ACTUAL_DATE}, 'YYYY/MM/DD')

			,TE_PLAN_DATE = TO_DATE(#{TE_PLAN_DATE}, 'YYYY/MM/DD')
			,TE_EXPECTED_DATE = TO_DATE(#{TE_EXPECTED_DATE}, 'YYYY/MM/DD')
			,TE_ACTUAL_DATE = TO_DATE(#{TE_ACTUAL_DATE}, 'YYYY/MM/DD')

			,PURCHASE_DURATION = #{PURCHASE_DURATION}
			,PO_PLAN_DATE = TO_DATE(#{PO_PLAN_DATE}, 'YYYY/MM/DD')
			,PO_EXPECTED_DATE = TO_DATE(#{PO_EXPECTED_DATE}, 'YYYY/MM/DD')
			,PO_ATCUAL_DATE = TO_DATE(#{PO_ATCUAL_DATE}, 'YYYY/MM/DD')
			,MAKE_DURATION = #{MAKE_DURATION}
			,CARGO_PLAN_DATE = TO_DATE(#{CARGO_PLAN_DATE}, 'YYYY/MM/DD')
			,CARGO_EXPECTED_DATE = TO_DATE(#{CARGO_EXPECTED_DATE}, 'YYYY/MM/DD')
			,CARGO_ACTUAL_DATE = TO_DATE(#{CARGO_ACTUAL_DATE}, 'YYYY/MM/DD')
			,SHIPMENT_DURATION = #{SHIPMENT_DURATION}
			,FOB_PLAN_DATE = TO_DATE(#{FOB_PLAN_DATE}, 'YYYY/MM/DD')
			,FOB_EXPECTED_DATE = TO_DATE(#{FOB_EXPECTED_DATE}, 'YYYY/MM/DD')
			,FOB_ACTUAL_DATE = TO_DATE(#{FOB_ACTUAL_DATE}, 'YYYY/MM/DD')
			,TRANS_DURATION = #{TRANS_DURATION}
			,ONSITE_PLAN_DATE = TO_DATE(#{ONSITE_PLAN_DATE}, 'YYYY/MM/DD')
			,ONSITE_EXPECTED_DATE = TO_DATE(#{ONSITE_EXPECTED_DATE}, 'YYYY/MM/DD')
			,ONSITE_ACTUAL_DATE = TO_DATE(#{ONSITE_ACTUAL_DATE}, 'YYYY/MM/DD')


			,LAST_UPDATE_DATE = SYSDATE
			,LAST_UPDATED_BY = #{USER_AD}
		WHERE
			TRK_ITEM_SEQ = #{TRK_ITEM_SEQ}
	</update>

	<update id="saveIdsmSetupDlgItemScheduleAttach" parameterType="java.util.Map">
		MERGE INTO zvts_desm_attach
		USING DUAL
		ON (PROJECT_NO = #{PROJECT_NO} AND TRK_ITEM_NAME = #{TRK_ITEM_NAME})
		WHEN NOT MATCHED THEN
		INSERT
		(PROJECT_NO
		,TRK_ITEM_NAME
		,FILE_GRP_CD
		,LAST_UPDATE_DATE
		,LAST_UPDATED_BY
		,CREATION_DATE
		,CREATED_BY)
		VALUES
		(#{PROJECT_NO}
		,#{TRK_ITEM_NAME}
		,#{FILE_GRP_CD}
		,SYSDATE
		,#{USER_AD}
		,SYSDATE
		,#{USER_AD})
	</update>

	<select id="getIdsmSetupDlgItemScheduleAdmin" parameterType="java.util.Map" resultType="java.util.HashMap">
		  SELECT
		    IMA.*,EMP.ZORG_NM AS USER_DEPT_NAME,EMP.ZORG_ID AS USER_DEPT_CODE, IMA.USER_JOB AS OLD_USER_JOB
		    ,CASE WHEN IMA.AUTH_SCHEDULE = '관리' THEN 1 ELSE 0 END AS AUTH_SCHEDULE1
		    ,CASE WHEN IMA.AUTH_SCHEDULE = '조회' THEN 1 ELSE 0 END AS AUTH_SCHEDULE2
		  FROM
		    ZVTS_ITEM_MASTER_AUTH IMA
		    , ZVTS_EMP EMP
		  WHERE
		    TRK_ITEM_SEQ = #{TRK_ITEM_SEQ}
		    AND IMA.USER_AD = EMP.AD_USER_ID
    </select>

	<select id="getIdsmSetupDlgAdminAddList" parameterType="java.util.Map" resultType="java.util.HashMap">
		SELECT ZEMP_NM AS EMP_NAME
		      ,AD_USER_ID AS EMP_AD
		      ,ZORG_ID AS DEPT_CODE
		      ,ZORG_NM AS DEPT_NAME
		    FROM
		      ZVTS_EMP
		    WHERE (UPPER(ZEMP_NM) LIKE '%'||UPPER(#{keyword})||'%' OR UPPER(AD_USER_ID) LIKE '%'||UPPER(#{keyword})||'%')
		    AND ZSTATUS_TYPE = '재직'
    </select>
    
    <delete id="deleteIdsmSetupDlgItemScheduleAdmin" parameterType="java.util.Map">
    	DELETE
    	FROM
    		ZVTS_ITEM_MASTER_AUTH
 		WHERE
 			TRK_ITEM_SEQ = #{TRK_ITEM_SEQ}
		    AND USER_AD = #{T_USER_AD}
		    AND USER_JOB = #{OLD_USER_JOB}
	</delete>

	<delete id="deleteIdsmSetupDlgItemScheduleAdmin_backup20230316" parameterType="java.util.Map">
    	DELETE
    	FROM
    		ZVTS_ITEM_MASTER_AUTH
 		WHERE
 			TRK_ITEM_SEQ IN
		       (SELECT IN_ITEM.TRK_ITEM_SEQ FROM ZVTS_ITEM_MASTER IN_ITEM
		        CONNECT BY
		        	PRIOR IN_ITEM.TRK_ITEM_SEQ = IN_ITEM.TRK_ITEM_GROUP
		         START WITH
		         	IN_ITEM.TRK_ITEM_SEQ = #{TRK_ITEM_SEQ}
		       )
		    AND USER_AD = #{T_USER_AD}
		    AND USER_JOB = #{OLD_USER_JOB}
	</delete>

	<insert id="saveIdsmSetupDlgItemScheduleAdmin" parameterType="java.util.Map">
		INSERT INTO ZVTS_ITEM_MASTER_AUTH
		(TRK_ITEM_SEQ
		, USER_AD
		, USER_NAME
		, USER_JOB
		, AUTH_SCHEDULE
		, CREATED_BY
		, CREATION_DATE
		, LAST_UPDATED_BY
		, LAST_UPDATE_DATE)
		VALUES
		(#{TRK_ITEM_SEQ}
		, #{T_USER_AD}
		, #{USER_NAME}
		, #{USER_JOB}
		, #{AUTH_SCHEDULE}
		, #{USER_AD}
		, SYSDATE
		, #{USER_AD}
		, SYSDATE)
	</insert>

	<update id="updateIdsmSetupDlgItemScheduleAdmin" parameterType="java.util.Map">
		UPDATE ZVTS_ITEM_MASTER_AUTH
		   SET USER_JOB          = #{USER_JOB}
	           ,AUTH_SCHEDULE     = #{AUTH_SCHEDULE}
	           ,LAST_UPDATED_BY   = #{USER_AD}
	           ,LAST_UPDATE_DATE  = SYSDATE
        WHERE USER_AD = #{T_USER_AD}
          AND USER_JOB = #{OLD_USER_JOB}
          AND TRK_ITEM_SEQ = #{TRK_ITEM_SEQ}

	</update>

	<select id="getIdsmSetupDlgCreateItemMstSeq" parameterType="java.util.Map" resultType="java.util.HashMap">
		SELECT ZVTS_ITEM_MASTER_S.NEXTVAL AS SEQ
		    FROM DUAL
    </select>

	<insert id="saveIdsmSetupDlgCreateItemMst" parameterType="java.util.Map">
		INSERT INTO ZVTS_ITEM_MASTER
		(TRK_ITEM_SEQ
		,TRK_ITEM_NAME
		,TRK_ITEM_GROUP
		,PROJECT_ID
		,PROJECT_NO
		,TASK_NUMBER
		,BATCH
		,OFFSHORE
		,PRIMAVERA_ID
		,MPS_PLAN_DATE
		,MPS_EXPECTED_DATE
		,MPS_ACTUAL_DATE
		,TE_PLAN_DATE
		,TE_EXPECTED_DATE
		,TE_ACTUAL_DATE
		,PURCHASE_DURATION
		,PO_PLAN_DATE
		,PO_EXPECTED_DATE
		,PO_ATCUAL_DATE
		,MAKE_DURATION
		,CARGO_PLAN_DATE
		,CARGO_EXPECTED_DATE
		,CARGO_ACTUAL_DATE
		,SHIPMENT_DURATION
		,FOB_PLAN_DATE
		,FOB_EXPECTED_DATE
		,FOB_ACTUAL_DATE
		,TRANS_DURATION
		,ONSITE_PLAN_DATE
		,ONSITE_EXPECTED_DATE
		,ONSITE_ACTUAL_DATE
		,PAYMENT_MILESTONE
		,ATTRIBUTE10
		,LAST_UPDATE_DATE
		,LAST_UPDATED_BY
		,CREATION_DATE
		,CREATED_BY)
		VALUES
		(#{TRK_ITEM_SEQ}
		,#{TRK_ITEM_NAME}
		,''
		,(SELECT MAX(PROJECT_ID) FROM PA_PROJECTS_ALL_INT WHERE SEGMENT1 = UPPER(#{PROJECT_NO}))
		,UPPER(#{PROJECT_NO})
		,#{TASK_NUMBER}
		,''
		,#{OFFSHORE}
		,#{PRIMAVERA_ID}
		,TO_DATE(#{MPS_PLAN_DATE}, 'YYYY/MM/DD')
		,TO_DATE(#{MPS_EXPECTED_DATE}, 'YYYY/MM/DD')
		,TO_DATE(#{MPS_ACTUAL_DATE}, 'YYYY/MM/DD')
		,TO_DATE(#{TE_PLAN_DATE}, 'YYYY/MM/DD')
		,TO_DATE(#{TE_EXPECTED_DATE}, 'YYYY/MM/DD')
		,TO_DATE(#{TE_ACTUAL_DATE}, 'YYYY/MM/DD')
		,#{PURCHASE_DURATION}
		,TO_DATE(#{PO_PLAN_DATE}, 'YYYY/MM/DD')
		,TO_DATE(#{PO_EXPECTED_DATE}, 'YYYY/MM/DD')
		,TO_DATE(#{PO_ATCUAL_DATE}, 'YYYY/MM/DD')
		,#{MAKE_DURATION}
		,TO_DATE(#{CARGO_PLAN_DATE}, 'YYYY/MM/DD')
		,TO_DATE(#{CARGO_EXPECTED_DATE}, 'YYYY/MM/DD')
		,TO_DATE(#{CARGO_ACTUAL_DATE}, 'YYYY/MM/DD')
		,#{SHIPMENT_DURATION}
		,TO_DATE(#{FOB_PLAN_DATE}, 'YYYY/MM/DD')
		,TO_DATE(#{FOB_EXPECTED_DATE}, 'YYYY/MM/DD')
		,TO_DATE(#{FOB_ACTUAL_DATE}, 'YYYY/MM/DD')
		,#{TRANS_DURATION}
		,TO_DATE(#{ONSITE_PLAN_DATE}, 'YYYY/MM/DD')
		,TO_DATE(#{ONSITE_EXPECTED_DATE}, 'YYYY/MM/DD')
		,TO_DATE(#{ONSITE_ACTUAL_DATE}, 'YYYY/MM/DD')
		,#{PAYMENT_MILESTONE}
		,#{ATTRIBUTE10}
		,SYSDATE
		,#{USER_AD}
		,SYSDATE
		,#{USER_AD})
	</insert>

	<insert id="saveIdsmSetupDlgCreateItemMstBatch" parameterType="java.util.Map">
		INSERT INTO ZVTS_ITEM_MASTER
		(TRK_ITEM_SEQ
		,TRK_ITEM_NAME
		,TRK_ITEM_GROUP
		,PROJECT_ID
		,PROJECT_NO
		,TASK_NUMBER
		,BATCH
		,OFFSHORE
		,PRIMAVERA_ID
		,MPS_PLAN_DATE
		,MPS_EXPECTED_DATE
		,MPS_ACTUAL_DATE
		,TE_PLAN_DATE
		,TE_EXPECTED_DATE
		,TE_ACTUAL_DATE
		,PURCHASE_DURATION
		,PO_PLAN_DATE
		,PO_EXPECTED_DATE
		,PO_ATCUAL_DATE
		,MAKE_DURATION
		,CARGO_PLAN_DATE
		,CARGO_EXPECTED_DATE
		,CARGO_ACTUAL_DATE
		,SHIPMENT_DURATION
		,FOB_PLAN_DATE
		,FOB_EXPECTED_DATE
		,FOB_ACTUAL_DATE
		,TRANS_DURATION
		,ONSITE_PLAN_DATE
		,ONSITE_EXPECTED_DATE
		,ONSITE_ACTUAL_DATE
		,PAYMENT_MILESTONE
		,ATTRIBUTE10
		,LAST_UPDATE_DATE
		,LAST_UPDATED_BY
		,CREATION_DATE
		,CREATED_BY)
		VALUES
		(#{TRK_ITEM_SEQ}
		,#{TRK_ITEM_NAME}
		,(SELECT MAX(TRK_ITEM_SEQ) FROM ZVTS_ITEM_MASTER)
		,(SELECT MAX(PROJECT_ID) FROM PA_PROJECTS_ALL_INT WHERE SEGMENT1 = UPPER(#{PROJECT_NO}))
		,UPPER(#{PROJECT_NO})
		,#{TASK_NUMBER}
		,#{BATCH}
		,#{OFFSHORE}
		,#{PRIMAVERA_ID}
		,TO_DATE(#{MPS_PLAN_DATE}, 'YYYY/MM/DD')
		,TO_DATE(#{MPS_EXPECTED_DATE}, 'YYYY/MM/DD')
		,TO_DATE(#{MPS_ACTUAL_DATE}, 'YYYY/MM/DD')
		,TO_DATE(#{TE_PLAN_DATE}, 'YYYY/MM/DD')
		,TO_DATE(#{TE_EXPECTED_DATE}, 'YYYY/MM/DD')
		,TO_DATE(#{TE_ACTUAL_DATE}, 'YYYY/MM/DD')
		,#{PURCHASE_DURATION}
		,TO_DATE(#{PO_PLAN_DATE}, 'YYYY/MM/DD')
		,TO_DATE(#{PO_EXPECTED_DATE}, 'YYYY/MM/DD')
		,TO_DATE(#{PO_ATCUAL_DATE}, 'YYYY/MM/DD')
		,#{MAKE_DURATION}
		,TO_DATE(#{CARGO_PLAN_DATE}, 'YYYY/MM/DD')
		,TO_DATE(#{CARGO_EXPECTED_DATE}, 'YYYY/MM/DD')
		,TO_DATE(#{CARGO_ACTUAL_DATE}, 'YYYY/MM/DD')
		,#{SHIPMENT_DURATION}
		,TO_DATE(#{FOB_PLAN_DATE}, 'YYYY/MM/DD')
		,TO_DATE(#{FOB_EXPECTED_DATE}, 'YYYY/MM/DD')
		,TO_DATE(#{FOB_ACTUAL_DATE}, 'YYYY/MM/DD')
		,#{TRANS_DURATION}
		,TO_DATE(#{ONSITE_PLAN_DATE}, 'YYYY/MM/DD')
		,TO_DATE(#{ONSITE_EXPECTED_DATE}, 'YYYY/MM/DD')
		,TO_DATE(#{ONSITE_ACTUAL_DATE}, 'YYYY/MM/DD')
		,#{PAYMENT_MILESTONE}
		,#{ATTRIBUTE10}
		,SYSDATE
		,#{USER_AD}
		,SYSDATE
		,#{USER_AD})
	</insert>

	<delete id="deleteIdsmSetup" parameterType="java.util.Map">
    	DELETE
    	FROM
    		ZVTS_ITEM_MASTER
 		WHERE
 			TRK_ITEM_SEQ IN
		       (SELECT IN_ITEM.TRK_ITEM_SEQ FROM ZVTS_ITEM_MASTER IN_ITEM
		        CONNECT BY
		        	PRIOR IN_ITEM.TRK_ITEM_SEQ = IN_ITEM.TRK_ITEM_GROUP
		         START WITH
		         	IN_ITEM.TRK_ITEM_SEQ = #{TRK_ITEM_SEQ}
		       )
	</delete>

	<insert id="insertLogInfo" parameterType="java.util.Map">
    	INSERT INTO ZVTS_LOG_INFO
    		(
    		 ACTION_FRAME_NM
			,ACTION_LOCATE
			,ACTION_HOW
			,SUCCESS_YN
			,CONTENT
			,REG_ID
			,REG_DT
			)
    	VALUES(
    	     #{action_frame_nm}
	    	,#{action_locate}
	    	,#{action_how}
	    	,#{success_yn}
	    	,#{content}
	    	,#{USER_AD}
	    	,SYSDATE
    	)
	</insert>

	<select id="getIdsmSetupDlgExcelUploadDownload" parameterType="java.util.Map" resultType="java.util.HashMap">
    	select  tt.attribute8,
        tt.project_no,
        tt.task_number,
        tt.primavera_id,


        regexp_substr(sys_connect_by_path(trk_item_name, '★') , '[^★]+', 1, 1) trk_item_name1,
        regexp_substr(sys_connect_by_path(trk_item_name, '★') , '[^★]+', 1, 2) trk_item_name2,
        regexp_substr(sys_connect_by_path(trk_item_name, '★') , '[^★]+', 1, 3) trk_item_name3,
        regexp_substr(sys_connect_by_path(trk_item_name, '★') , '[^★]+', 1, 4) trk_item_name4,

        tt.attribute1,
        tt.attribute2,
        tt.attribute3,
        tt.attribute4,
        tt.attribute5,
        tt.attribute6,
        tt.attribute7,
        tt.attribute8,
        tt.attribute9,
        tt.attribute10,

        tt.invoice_num1,
        tt.invoice_num2,
        tt.invoice_num3,
        tt.offshore,
        tt.progress,
        TO_CHAR(tt.mps_plan_date, 'YYYY-MM-DD') AS mps_plan_date,
        TO_CHAR(tt.mps_expected_date, 'YYYY-MM-DD') AS mps_expected_date,
        TO_CHAR(tt.mps_actual_date, 'YYYY-MM-DD') AS mps_actual_date,

        TO_CHAR(tt.te_plan_date, 'YYYY-MM-DD') AS te_plan_date,
        TO_CHAR(tt.te_expected_date, 'YYYY-MM-DD') AS te_expected_date,
        TO_CHAR(tt.te_actual_date, 'YYYY-MM-DD') AS te_actual_date,

        tt.purchase_duration,
        TO_CHAR(tt.po_plan_date, 'YYYY-MM-DD') AS po_plan_date,
        TO_CHAR(tt.po_expected_date, 'YYYY-MM-DD') AS po_expected_date,
        TO_CHAR(tt.po_atcual_date, 'YYYY-MM-DD') AS po_atcual_date,

        tt.make_duration,
        TO_CHAR(tt.cargo_plan_date, 'YYYY-MM-DD') AS cargo_plan_date,
        TO_CHAR(tt.cargo_expected_date, 'YYYY-MM-DD') AS cargo_expected_date,
        TO_CHAR(tt.cargo_actual_date, 'YYYY-MM-DD') AS cargo_actual_date,

        tt.shipment_duration,
        TO_CHAR(tt.fob_plan_date, 'YYYY-MM-DD') AS fob_plan_date,
        TO_CHAR(tt.fob_expected_date, 'YYYY-MM-DD') AS fob_expected_date,
        TO_CHAR(tt.cargo_promised_date, 'YYYY-MM-DD') AS cargo_promised_date,
        TO_CHAR(tt.fob_actual_date, 'YYYY-MM-DD') AS fob_actual_date,
        tt.trans_duration,

        TO_CHAR(tt.onsite_plan_date, 'YYYY-MM-DD') AS onsite_plan_date,
        TO_CHAR(tt.onsite_expected_date, 'YYYY-MM-DD') AS onsite_expected_date,
        TO_CHAR(tt.onsite_actual_date, 'YYYY-MM-DD') AS onsite_actual_date,

        tt.payment_milestone,
        tt.remark,
        tt.pm_ad,
        tt.em_ad,
        tt.buyer_ad,
        tt.sm_ad,
        tt.qc_ad,
        --sys_connect_by_path(trk_item_name, '★') trk_path ,
        connect_by_isleaf  isleaf
        --tt.*
  from
(select distinct zim.trk_item_seq
          ,trk_item_name
          ,trk_item_group
          ,organization_id
          ,zim.project_id
          ,zim.project_no
          ,pa.name as project_name
          ,task_id
          ,task_number
          ,(select pt.task_name from pa_tasks pt where pt.project_id = zim.project_id and pt.task_id = zim.task_id) task_name
          ,batch
          ,offshore
          ,primavera_id
          ,mps_plan_date
          ,mps_expected_date
          ,mps_actual_date
          ,te_plan_date
          ,te_expected_date
          ,te_actual_date
          ,purchase_duration
          ,po_plan_date
          ,po_expected_date
          ,po_atcual_date
          ,make_duration
          ,progress
          ,cargo_plan_date
          ,cargo_expected_date
          ,cargo_promised_date
          ,cargo_actual_date
          ,shipment_duration
          ,fob_plan_date
          ,fob_expected_date
          ,fob_actual_date
          ,trans_duration
          ,onsite_plan_date
          ,onsite_expected_date
          ,onsite_actual_date
          ,payment_milestone
          ,trk_item_default
          ,iav.pm_ad
          ,iav.pm_name
          ,iav.em_ad
          ,iav.em_name
          ,iav.buyer_ad
          ,iav.buyer_name
          ,iav.qc_ad
          ,iav.qc_name
          ,iav.sm_ad
          ,iav.sm_name
          ,case when cargo_plan_date  <![CDATA[<]]>  cargo_expected_date then 'Y' else 'N' end as issue_flag
          ,zim.invoice_num
          ,zim.attribute1
          ,zim.attribute2
          ,zim.attribute3
          ,zim.attribute4
          ,zim.attribute5
          ,zim.attribute6
          ,zim.attribute7
          ,zim.attribute8
          ,zim.attribute9
          ,zim.attribute10
          ,zim.last_update_date
          ,zim.last_updated_by
          ,zim.creation_date
          ,zim.created_by
          ,emp_pm.zorg_id as pm_dept_code
          ,emp_pm.zorg_nm as pm_dept_name
          ,emp_em.zorg_id as em_dept_code
          ,emp_em.zorg_nm as em_dept_name
          ,emp_buyer.zorg_id as buyer_dept_code
          ,emp_buyer.zorg_nm as buyer_dept_name
          ,emp_qc.zorg_id as qc_dept_code
          ,emp_qc.zorg_nm as qc_dept_name
          ,aa.col1 invoice_num1
          ,aa.col2 invoice_num2
          ,aa.col3 invoice_num3
          ,zim.remark
        from
          (select * from zvts_item_master
          CONNECT BY trk_item_seq = PRIOR trk_item_group
          START WITH trk_item_seq in
        (
        select
           distinct zim_in.trk_item_seq
        from zvts_item_master zim_in
          ,pa_projects_all_INT pa
          ,pa_projects_all_INT pa_inter
          ,ZVTS_ITEM_MASTER_AUTH iav
          ,zvts_emp emp
       where 1=1
           and zim_in.project_id = pa.project_id
           and zim_in.trk_item_seq = iav.trk_item_seq(+)
           and zim_in.attribute8 = pa_inter.segment1(+)
           and iav.user_ad = emp.ad_user_id(+)

			<if test='VIEW_TYPE == "INTER"'>
				and zim_in.project_no like 'Z%'
				<if test='KEY1 == "project_name" 	and VALUE1 != null and VALUE1 != ""'> and upper(pa.name) like upper(#{VALUE1})||'%'</if>
		 		<if test='KEY1 == "project_no" 	and VALUE1 != null and VALUE1 != ""'> and zim_in.project_no = upper(#{VALUE1})</if>
		 		<if test='KEY4 == "project_name" 	and VALUE4 != null and VALUE4 != ""'> and upper(pa.name) like upper(#{VALUE4})||'%'</if>
		 		<if test='KEY4 == "project_no" 	and VALUE4 != null and VALUE4 != ""'> and zim_in.project_no = upper(#{VALUE4})</if>
			</if>

			<if test='VIEW_TYPE != "INTER"'>
				<if test='KEY1 == "project_name" 	and VALUE1 != null and VALUE1 != ""'> and upper(pa.name) like upper(#{VALUE1})||'%'</if>
		 		<if test='KEY1 == "project_no" 	and VALUE1 != null and VALUE1 != ""'> and zim_in.project_no = upper(#{VALUE1})</if>
				<if test='KEY4 == "project_name" 	and VALUE4 != null and VALUE4 != ""'> and upper(pa.name) like upper(#{VALUE4})||'%'</if>
		 		<if test='KEY4 == "project_no" 	and VALUE4 != null and VALUE4 != ""'> and zim_in.project_no = upper(#{VALUE4})</if>
			</if>


		 	<if test='KEY1 == "item" 			and VALUE1 != null and VALUE1 != ""'> and UPPER(trk_item_name) like '%' || UPPER(#{VALUE1})||'%'</if>
		 	<if test='KEY1 == "pm" 	and VALUE1 != null and VALUE1 != ""'> and user_job='PM' and UPPER(USER_NAME) like UPPER(#{VALUE1})||'%'</if>
		 	<if test='KEY1 == "em" 	and VALUE1 != null and VALUE1 != ""'> and user_job='EM' and UPPER(USER_NAME) like UPPER(#{VALUE1})||'%'</if>
		 	<if test='KEY1 == "buyer" and VALUE1 != null and VALUE1 != ""'> and user_job='BUYER' and UPPER(USER_NAME) like UPPER(#{VALUE1})||'%' </if>
		 	<if test='KEY1 == "qc" 	and VALUE1 != null and VALUE1 != ""'> and user_job='QC' and UPPER(USER_NAME) like UPPER(#{VALUE1})||'%'</if>
		 	<if test='KEY1 == "sm" 	and VALUE1 != null and VALUE1 != ""'> and user_job='SM' and UPPER(USER_NAME) like UPPER(#{VALUE1})||'%'</if>

		 	<if test='KEY1 == "attribute7" 			and VALUE1 != null and VALUE1 != ""'> and UPPER(zim_in.attribute7) like '%' || UPPER(#{VALUE1})||'%'</if>
		 	<if test='KEY1 == "attribute3" 			and VALUE1 != null and VALUE1 != ""'> and UPPER(zim_in.attribute3) like '%' || UPPER(#{VALUE1})||'%'</if>
		 	<if test='KEY1 == "attribute10" 			and VALUE1 != null and VALUE1 != ""'> and UPPER(zim_in.attribute10) like '%' || UPPER(#{VALUE1})||'%'</if>
		 	<if test='KEY1 == "attribute6" 			and VALUE1 != null and VALUE1 != ""'> and UPPER(zim_in.attribute6) like '%' || UPPER(#{VALUE1})||'%'</if>
		 	<if test='KEY1 == "invoice_num" 			and VALUE1 != null and VALUE1 != ""'> and UPPER(di.invoice_num) like '%' || UPPER(#{VALUE1})||'%'</if>


		 	<if test='KEY4 == "item" 			and VALUE4 != null and VALUE4 != ""'> and UPPER(trk_item_name) like '%' || UPPER(#{VALUE4})||'%'</if>
		 	<if test='KEY4 == "pm" 	and VALUE4 != null and VALUE4 != ""'> and user_job='PM' and UPPER(USER_NAME) like UPPER(#{VALUE4})||'%'</if>
		 	<if test='KEY4 == "em" 	and VALUE4 != null and VALUE4 != ""'> and user_job='EM' and UPPER(USER_NAME) like UPPER(#{VALUE4})||'%'</if>
		 	<if test='KEY4 == "buyer" and VALUE4 != null and VALUE4 != ""'> and user_job='BUYER' and UPPER(USER_NAME) like UPPER(#{VALUE4})||'%' </if>
		 	<if test='KEY4 == "qc" 	and VALUE4 != null and VALUE4 != ""'> and user_job='QC' and UPPER(USER_NAME) like UPPER(#{VALUE4})||'%'</if>
		 	<if test='KEY4 == "sm" 	and VALUE4 != null and VALUE4 != ""'> and user_job='SM' and UPPER(USER_NAME) like UPPER(#{VALUE4})||'%'</if>

		 	<if test='KEY4 == "attribute7" 			and VALUE4 != null and VALUE4 != ""'> and UPPER(zim_in.attribute7) like '%' || UPPER(#{VALUE4})||'%'</if>
		 	<if test='KEY4 == "attribute3" 			and VALUE4 != null and VALUE4 != ""'> and UPPER(zim_in.attribute3) like '%' || UPPER(#{VALUE4})||'%'</if>
		 	<if test='KEY4 == "attribute10" 			and VALUE4 != null and VALUE4 != ""'> and UPPER(zim_in.attribute10) like '%' || UPPER(#{VALUE4})||'%'</if>
		 	<if test='KEY4 == "attribute6" 			and VALUE4 != null and VALUE4 != ""'> and UPPER(zim_in.attribute6) like '%' || UPPER(#{VALUE4})||'%'</if>
		 	<if test='KEY4 == "invoice_num" 			and VALUE4 != null and VALUE4 != ""'> and UPPER(di.invoice_num) like '%' || UPPER(#{VALUE4})||'%'</if>


		 	<if test='KEY3 == "plan" '>
		 		<if test='(VALUE2 != null and VALUE2 !="") or (VALUE3 != null and VALUE3 !="")'>
		 			<if test='KEY2 == "mps" '> 	and mps_plan_date 	 between to_date(NVL(#{VALUE2},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE3},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY2 == "po" '> 	and po_plan_date 	 between to_date(NVL(#{VALUE2},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE3},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY2 == "cargo" '>  and cargo_plan_date  between to_date(NVL(#{VALUE2},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE3},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY2 == "fob" '> 	and fob_plan_date 	 between to_date(NVL(#{VALUE2},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE3},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY2 == "onsite" '> and onsite_plan_date between to_date(NVL(#{VALUE2},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE3},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 		</if>
		 	</if>
		 	<if test='KEY3 == "expected" '>
		 		<if test='(VALUE2 != null and VALUE2 !="") or (VALUE3 != null and VALUE3 !="")'>
		 			<if test='KEY2 == "mps" '> 	and mps_expected_date 	 between to_date(NVL(#{VALUE2},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE3},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY2 == "po" '>		and po_expected_date 	 between to_date(NVL(#{VALUE2},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE3},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY2 == "cargo" '>  and cargo_expected_date  between to_date(NVL(#{VALUE2},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE3},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY2 == "fob" '> 	and fob_expected_date 	 between to_date(NVL(#{VALUE2},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE3},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY2 == "onsite" '>	and onsite_expected_date between to_date(NVL(#{VALUE2},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE3},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 		</if>
		 	</if>
		 	<if test='KEY3 == "actual" '>
		 		<if test='(VALUE2 != null and VALUE2 !="") or (VALUE3 != null and VALUE3 !="")'>
		 			<if test='KEY2 == "mps" '> 	and mps_actual_date 	between to_date(NVL(#{VALUE2},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE3},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY2 == "po" '> 	and po_actual_date 		between to_date(NVL(#{VALUE2},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE3},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY2 == "cargo" '>  and cargo_actual_date 	between to_date(NVL(#{VALUE2},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE3},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY2 == "fob" '> 	and fob_actual_date		between to_date(NVL(#{VALUE2},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE3},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY2 == "onsite" '> and onsite_actual_date 	between to_date(NVL(#{VALUE2},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE3},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 		</if>
		 	</if>
		 	<if test='KEY6 == "plan" '>
		 		<if test='(VALUE5 != null and VALUE5 !="") or (VALUE6 != null and VALUE6 !="")'>
		 			<if test='KEY5 == "mps" '> 	and mps_plan_date 	 between to_date(NVL(#{VALUE5},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE6},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY5 == "po" '> 	and po_plan_date 	 between to_date(NVL(#{VALUE5},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE6},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY5 == "cargo" '>  and cargo_plan_date  between to_date(NVL(#{VALUE5},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE6},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY5 == "fob" '> 	and fob_plan_date 	 between to_date(NVL(#{VALUE5},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE6},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY5 == "onsite" '> and onsite_plan_date between to_date(NVL(#{VALUE5},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE6},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 		</if>
		 	</if>
		 	<if test='KEY6 == "expected" '>
		 		<if test='(VALUE5 != null and VALUE5 !="") or (VALUE6 != null and VALUE6 !="")'>
		 			<if test='KEY5 == "mps" '>	and mps_plan_date 		 between to_date(NVL(#{VALUE5},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE6},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY5 == "po" '>		and po_expected_date 	 between to_date(NVL(#{VALUE5},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE6},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY5 == "cargo" '>	and cargo_expected_date  between to_date(NVL(#{VALUE5},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE6},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY5 == "fob" '>	and fob_expected_date 	 between to_date(NVL(#{VALUE5},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE6},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY5 == "onsite" '>	and onsite_expected_date between to_date(NVL(#{VALUE5},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE6},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 		</if>
		 	</if>
		 	<if test='KEY6 == "actual" '>
		 		<if test='(VALUE5 != null and VALUE5 !="") or (VALUE6 != null and VALUE6 !="")'>
		 			<if test='KEY5 == "mps" '> 	and mps_actual_date    between to_date(NVL(#{VALUE5},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE6},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY5 == "po" '> 	and po_actual_date     between to_date(NVL(#{VALUE5},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE6},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY5 == "cargo" '>  and cargo_actual_date  between to_date(NVL(#{VALUE5},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE6},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY5 == "fob" '>	and fob_actual_date    between to_date(NVL(#{VALUE5},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE6},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY5 == "onsite" '> and onsite_actual_date between to_date(NVL(#{VALUE5},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE6},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 		</if>
		 	</if>
		    <if test='ISSUE_CHECK == "Y" '>
		    	and (cargo_actual_date IS NULL and cargo_plan_date <![CDATA[<]]> cargo_expected_date
		    		or (PO_ATCUAL_DATE IS NULL AND po_plan_date <![CDATA[<]]> po_expected_date   )
		    		or (MPS_ACTUAL_DATE IS NULL AND  mps_plan_date <![CDATA[<]]> mps_expected_date )
		    		or (fob_actual_date IS NULL AND  fob_plan_date <![CDATA[<]]> fob_expected_date )
		    		or (onsite_actual_date IS NULL AND  onsite_plan_date <![CDATA[<]]> onsite_expected_date )
		    		)
		    </if>
			<if test='OFFSHORE != null and OFFSHORE !=""'> and offshore = #{OFFSHORE}</if>
			<if test='PROJECT_NO != "" '> and zim_in.project_no = UPPER(#{PROJECT_NO})</if>

       )

          ) zim
          ,pa_projects_all_INT pa
          ,zvts_emp emp_pm
          ,zvts_emp emp_em
          ,zvts_emp emp_buyer
          ,zvts_emp emp_qc
          ,zvts_emp emp_sm
          ,zvts_item_admin_v iav
          ,(SELECT  trk_item_seq
                    ,max(CASE WHEN rank = 1 THEN invoice_num END)  col1
                    ,max(CASE WHEN rank = 2 THEN invoice_num END)  col2
                    ,max(CASE WHEN rank = 3 THEN invoice_num END)  col3
            FROM (
                    select invoice_num,
                           trk_item_seq,
                           RANK() OVER (PARTITION BY trk_item_seq  ORDER BY trk_item_seq , invoice_num) rank
                      from ZVTS_DESM_INVOICE) ww
            WHERE  ww.rank <![CDATA[<]]> 4
           group by  trk_item_seq ) aa
       where 1=1
           and zim.project_id = pa.project_id
           and zim.trk_item_seq = iav.trk_item_seq(+)
           and iav.pm_ad = emp_pm.ad_user_id(+)
           and iav.em_ad = emp_em.ad_user_id(+)
           and iav.buyer_ad = emp_buyer.ad_user_id(+)
           and iav.qc_ad = emp_qc.ad_user_id(+)
           and iav.sm_ad = emp_sm.ad_user_id(+)
           and zim.trk_item_seq = aa.trk_item_seq(+)

       union
       select
        distinct zim.trk_item_seq
          ,trk_item_name
          ,trk_item_group
          ,organization_id
          ,zim.project_id
          ,zim.project_no
          ,pa.name as project_name
          ,task_id
          ,task_number
          ,(select pt.task_name from pa_tasks pt where pt.project_id = zim.project_id and pt.task_id = zim.task_id) task_name
          ,batch
          ,offshore
          ,primavera_id
          ,mps_plan_date
          ,mps_expected_date
          ,mps_actual_date
          ,te_plan_date
          ,te_expected_date
          ,te_actual_date
          ,purchase_duration
          ,po_plan_date
          ,po_expected_date
          ,po_atcual_date
          ,make_duration
          ,progress
          ,cargo_plan_date
          ,cargo_expected_date
          ,cargo_promised_date
          ,cargo_actual_date
          ,shipment_duration
          ,fob_plan_date
          ,fob_expected_date
          ,fob_actual_date
          ,trans_duration
          ,onsite_plan_date
          ,onsite_expected_date
          ,onsite_actual_date
          ,payment_milestone
          ,trk_item_default
          ,iav.pm_ad
          ,iav.pm_name
          ,iav.em_ad
          ,iav.em_name
          ,iav.buyer_ad
          ,iav.buyer_name
          ,iav.qc_ad
          ,iav.qc_name
          ,iav.sm_ad
          ,iav.sm_name
          ,case when cargo_plan_date  <![CDATA[<]]>  cargo_expected_date then 'Y' else 'N' end as issue_flag
          ,zim.invoice_num
          ,zim.attribute1
          ,zim.attribute2
          ,zim.attribute3
          ,zim.attribute4
          ,zim.attribute5
          ,zim.attribute6
          ,zim.attribute7
          ,zim.attribute8
          ,zim.attribute9
          ,zim.attribute10
          ,zim.last_update_date
          ,zim.last_updated_by
          ,zim.creation_date
          ,zim.created_by
          ,emp_pm.zorg_id as pm_dept_code
          ,emp_pm.zorg_nm as pm_dept_name
          ,emp_em.zorg_id as em_dept_code
          ,emp_em.zorg_nm as em_dept_name
          ,emp_buyer.zorg_id as buyer_dept_code
          ,emp_buyer.zorg_nm as buyer_dept_name
          ,emp_qc.zorg_id as qc_dept_code
          ,emp_qc.zorg_nm as qc_dept_name
          ,aa.col1 invoice_num1
          ,aa.col2 invoice_num2
          ,aa.col3 invoice_num3
          ,zim.remark

      from
          (select * From zvts_item_master
           CONNECT BY PRIOR trk_item_seq = trk_item_group
          START WITH trk_item_seq in
        (
         select
           distinct zim_in.trk_item_seq
         from zvts_item_master zim_in
             ,ZVTS_ITEM_MASTER_AUTH iav
            ,pa_projects_all_INT pa
            ,pa_projects_all_INT pa_inter
            ,zvts_emp emp
          --,ZVTS_DESM_INVOICE di
       where 1=1
           and zim_in.project_id = pa.project_id
           and zim_in.trk_item_seq = iav.trk_item_seq(+)
           and zim_in.attribute8 = pa_inter.segment1(+)
           and iav.user_ad = emp.ad_user_id(+)

			<if test='VIEW_TYPE == "INTER"'>
				and zim_in.project_no like 'Z%'
				<if test='KEY1 == "project_name" 	and VALUE1 != null and VALUE1 != ""'> and upper(pa.name) like upper(#{VALUE1})||'%'</if>
		 		<if test='KEY1 == "project_no" 	and VALUE1 != null and VALUE1 != ""'> and zim_in.project_no = upper(#{VALUE1})</if>
		 		<if test='KEY4 == "project_name" 	and VALUE4 != null and VALUE4 != ""'> and upper(pa.name) like upper(#{VALUE4})||'%'</if>
		 		<if test='KEY4 == "project_no" 	and VALUE4 != null and VALUE4 != ""'> and zim_in.project_no = upper(#{VALUE4})</if>
			</if>

			<if test='VIEW_TYPE != "INTER"'>
				<if test='KEY1 == "project_name" 	and VALUE1 != null and VALUE1 != ""'> and upper(pa.name) like upper(#{VALUE1})||'%'</if>
		 		<if test='KEY1 == "project_no" 	and VALUE1 != null and VALUE1 != ""'> and zim_in.project_no = upper(#{VALUE1})</if>
				<if test='KEY4 == "project_name" 	and VALUE4 != null and VALUE4 != ""'> and upper(pa.name) like upper(#{VALUE4})||'%'</if>
		 		<if test='KEY4 == "project_no" 	and VALUE4 != null and VALUE4 != ""'> and zim_in.project_no = upper(#{VALUE4})</if>
			</if>


		 	<if test='KEY1 == "item" 			and VALUE1 != null and VALUE1 != ""'> and UPPER(trk_item_name) like '%' || UPPER(#{VALUE1})||'%'</if>
		 	<if test='KEY1 == "pm" 	and VALUE1 != null and VALUE1 != ""'> and user_job='PM' and UPPER(USER_NAME) like UPPER(#{VALUE1})||'%'</if>
		 	<if test='KEY1 == "em" 	and VALUE1 != null and VALUE1 != ""'> and user_job='EM' and UPPER(USER_NAME) like UPPER(#{VALUE1})||'%'</if>
		 	<if test='KEY1 == "buyer" and VALUE1 != null and VALUE1 != ""'> and user_job='BUYER' and UPPER(USER_NAME) like UPPER(#{VALUE1})||'%' </if>
		 	<if test='KEY1 == "qc" 	and VALUE1 != null and VALUE1 != ""'> and user_job='QC' and UPPER(USER_NAME) like UPPER(#{VALUE1})||'%'</if>
		 	<if test='KEY1 == "sm" 	and VALUE1 != null and VALUE1 != ""'> and user_job='SM' and UPPER(USER_NAME) like UPPER(#{VALUE1})||'%'</if>

		 	<if test='KEY1 == "attribute7" 			and VALUE1 != null and VALUE1 != ""'> and UPPER(zim_in.attribute7) like '%' || UPPER(#{VALUE1})||'%'</if>
		 	<if test='KEY1 == "attribute3" 			and VALUE1 != null and VALUE1 != ""'> and UPPER(zim_in.attribute3) like '%' || UPPER(#{VALUE1})||'%'</if>
		 	<if test='KEY1 == "attribute10" 			and VALUE1 != null and VALUE1 != ""'> and UPPER(zim_in.attribute10) like '%' || UPPER(#{VALUE1})||'%'</if>
		 	<if test='KEY1 == "attribute6" 			and VALUE1 != null and VALUE1 != ""'> and UPPER(zim_in.attribute6) like '%' || UPPER(#{VALUE1})||'%'</if>
		 	<if test='KEY1 == "invoice_num" 			and VALUE1 != null and VALUE1 != ""'> and UPPER(di.invoice_num) like '%' || UPPER(#{VALUE1})||'%'</if>


		 	<if test='KEY4 == "item" 			and VALUE4 != null and VALUE4 != ""'> and UPPER(trk_item_name) like '%' || UPPER(#{VALUE4})||'%'</if>
		 	<if test='KEY4 == "pm" 	and VALUE4 != null and VALUE4 != ""'> and user_job='PM' and UPPER(USER_NAME) like UPPER(#{VALUE4})||'%'</if>
		 	<if test='KEY4 == "em" 	and VALUE4 != null and VALUE4 != ""'> and user_job='EM' and UPPER(USER_NAME) like UPPER(#{VALUE4})||'%'</if>
		 	<if test='KEY4 == "buyer" and VALUE4 != null and VALUE4 != ""'> and user_job='BUYER' and UPPER(USER_NAME) like UPPER(#{VALUE4})||'%' </if>
		 	<if test='KEY4 == "qc" 	and VALUE4 != null and VALUE4 != ""'> and user_job='QC' and UPPER(USER_NAME) like UPPER(#{VALUE4})||'%'</if>
		 	<if test='KEY4 == "sm" 	and VALUE4 != null and VALUE4 != ""'> and user_job='SM' and UPPER(USER_NAME) like UPPER(#{VALUE4})||'%'</if>

		 	<if test='KEY4 == "attribute7" 			and VALUE4 != null and VALUE4 != ""'> and UPPER(zim_in.attribute7) like '%' || UPPER(#{VALUE4})||'%'</if>
		 	<if test='KEY4 == "attribute3" 			and VALUE4 != null and VALUE4 != ""'> and UPPER(zim_in.attribute3) like '%' || UPPER(#{VALUE4})||'%'</if>
		 	<if test='KEY4 == "attribute10" 			and VALUE4 != null and VALUE4 != ""'> and UPPER(zim_in.attribute10) like '%' || UPPER(#{VALUE4})||'%'</if>
		 	<if test='KEY4 == "attribute6" 			and VALUE4 != null and VALUE4 != ""'> and UPPER(zim_in.attribute6) like '%' || UPPER(#{VALUE4})||'%'</if>
		 	<if test='KEY4 == "invoice_num" 			and VALUE4 != null and VALUE4 != ""'> and UPPER(di.invoice_num) like '%' || UPPER(#{VALUE4})||'%'</if>


		 	<if test='KEY3 == "plan" '>
		 		<if test='(VALUE2 != null and VALUE2 !="") or (VALUE3 != null and VALUE3 !="")'>
		 			<if test='KEY2 == "mps" '> 	and mps_plan_date 	 between to_date(NVL(#{VALUE2},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE3},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY2 == "po" '> 	and po_plan_date 	 between to_date(NVL(#{VALUE2},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE3},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY2 == "cargo" '>  and cargo_plan_date  between to_date(NVL(#{VALUE2},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE3},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY2 == "fob" '> 	and fob_plan_date 	 between to_date(NVL(#{VALUE2},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE3},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY2 == "onsite" '> and onsite_plan_date between to_date(NVL(#{VALUE2},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE3},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 		</if>
		 	</if>
		 	<if test='KEY3 == "expected" '>
		 		<if test='(VALUE2 != null and VALUE2 !="") or (VALUE3 != null and VALUE3 !="")'>
		 			<if test='KEY2 == "mps" '> 	and mps_expected_date 	 between to_date(NVL(#{VALUE2},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE3},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY2 == "po" '>		and po_expected_date 	 between to_date(NVL(#{VALUE2},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE3},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY2 == "cargo" '>  and cargo_expected_date  between to_date(NVL(#{VALUE2},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE3},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY2 == "fob" '> 	and fob_expected_date 	 between to_date(NVL(#{VALUE2},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE3},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY2 == "onsite" '>	and onsite_expected_date between to_date(NVL(#{VALUE2},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE3},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 		</if>
		 	</if>
		 	<if test='KEY3 == "actual" '>
		 		<if test='(VALUE2 != null and VALUE2 !="") or (VALUE3 != null and VALUE3 !="")'>
		 			<if test='KEY2 == "mps" '> 	and mps_actual_date 	between to_date(NVL(#{VALUE2},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE3},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY2 == "po" '> 	and po_actual_date 		between to_date(NVL(#{VALUE2},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE3},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY2 == "cargo" '>  and cargo_actual_date 	between to_date(NVL(#{VALUE2},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE3},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY2 == "fob" '> 	and fob_actual_date		between to_date(NVL(#{VALUE2},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE3},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY2 == "onsite" '> and onsite_actual_date 	between to_date(NVL(#{VALUE2},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE3},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 		</if>
		 	</if>
		 	<if test='KEY6 == "plan" '>
		 		<if test='(VALUE5 != null and VALUE5 !="") or (VALUE6 != null and VALUE6 !="")'>
		 			<if test='KEY5 == "mps" '> 	and mps_plan_date 	 between to_date(NVL(#{VALUE5},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE6},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY5 == "po" '> 	and po_plan_date 	 between to_date(NVL(#{VALUE5},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE6},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY5 == "cargo" '>  and cargo_plan_date  between to_date(NVL(#{VALUE5},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE6},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY5 == "fob" '> 	and fob_plan_date 	 between to_date(NVL(#{VALUE5},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE6},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY5 == "onsite" '> and onsite_plan_date between to_date(NVL(#{VALUE5},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE6},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 		</if>
		 	</if>
		 	<if test='KEY6 == "expected" '>
		 		<if test='(VALUE5 != null and VALUE5 !="") or (VALUE6 != null and VALUE6 !="")'>
		 			<if test='KEY5 == "mps" '>	and mps_plan_date 		 between to_date(NVL(#{VALUE5},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE6},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY5 == "po" '>		and po_expected_date 	 between to_date(NVL(#{VALUE5},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE6},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY5 == "cargo" '>	and cargo_expected_date  between to_date(NVL(#{VALUE5},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE6},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY5 == "fob" '>	and fob_expected_date 	 between to_date(NVL(#{VALUE5},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE6},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY5 == "onsite" '>	and onsite_expected_date between to_date(NVL(#{VALUE5},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE6},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 		</if>
		 	</if>
		 	<if test='KEY6 == "actual" '>
		 		<if test='(VALUE5 != null and VALUE5 !="") or (VALUE6 != null and VALUE6 !="")'>
		 			<if test='KEY5 == "mps" '> 	and mps_actual_date    between to_date(NVL(#{VALUE5},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE6},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY5 == "po" '> 	and po_actual_date     between to_date(NVL(#{VALUE5},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE6},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY5 == "cargo" '>  and cargo_actual_date  between to_date(NVL(#{VALUE5},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE6},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY5 == "fob" '>	and fob_actual_date    between to_date(NVL(#{VALUE5},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE6},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY5 == "onsite" '> and onsite_actual_date between to_date(NVL(#{VALUE5},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE6},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 		</if>
		 	</if>
		    <if test='ISSUE_CHECK == "Y" '>
		    	and (cargo_actual_date IS NULL and cargo_plan_date <![CDATA[<]]> cargo_expected_date
		    		or (PO_ATCUAL_DATE IS NULL AND po_plan_date <![CDATA[<]]> po_expected_date   )
		    		or (MPS_ACTUAL_DATE IS NULL AND  mps_plan_date <![CDATA[<]]> mps_expected_date )
		    		or (fob_actual_date IS NULL AND  fob_plan_date <![CDATA[<]]> fob_expected_date )
		    		or (onsite_actual_date IS NULL AND  onsite_plan_date <![CDATA[<]]> onsite_expected_date )
		    		)
		    </if>
			<if test='OFFSHORE != null and OFFSHORE !=""'> and offshore = #{OFFSHORE}</if>
			<if test='PROJECT_NO != "" '> and zim_in.project_no = UPPER(#{PROJECT_NO})</if>
	 		)
          )zim
          ,zvts_item_admin_v iav
          ,pa_projects_all_INT pa
          ,zvts_emp emp_pm
          ,zvts_emp emp_em
          ,zvts_emp emp_buyer
          ,zvts_emp emp_qc
          ,zvts_emp emp_sm
           ,(SELECT  trk_item_seq
                    ,max(CASE WHEN rank = 1 THEN invoice_num END)  col1
                    ,max(CASE WHEN rank = 2 THEN invoice_num END)  col2
                    ,max(CASE WHEN rank = 3 THEN invoice_num END)  col3
            FROM (
                    select invoice_num,
                           trk_item_seq,
                           RANK() OVER (PARTITION BY trk_item_seq  ORDER BY trk_item_seq , invoice_num) rank
                      from ZVTS_DESM_INVOICE) ww
            WHERE  ww.rank <![CDATA[<]]> 4
           group by  trk_item_seq ) aa
       where 1=1
           and zim.project_id = pa.project_id
           and zim.trk_item_seq = iav.trk_item_seq(+)
           and iav.pm_ad = emp_pm.ad_user_id(+)
           and iav.em_ad = emp_em.ad_user_id(+)
           and iav.buyer_ad = emp_buyer.ad_user_id(+)
           and iav.qc_ad = emp_qc.ad_user_id(+)
           and iav.sm_ad = emp_sm.ad_user_id(+)
           and zim.trk_item_seq = aa.trk_item_seq(+)
       ) tt
    START WITH tt.trk_item_group is null
		CONNECT BY PRIOR tt.trk_item_seq = tt.trk_item_group
    </select>

	<select id="getIdsmSetupExceluploadSeq" parameterType="java.util.Map" resultType="java.util.HashMap">
		SELECT NVL((SELECT MAX(TRK_ITEM_SEQ)
             FROM (SELECT ZIM.TRK_ITEM_SEQ,
                          ZIM.TRK_ITEM_NAME,
                          ZIM.TRK_ITEM_GROUP,
                          PROJECT_NO,
                          LEVEL AS LEV,
                          SYS_CONNECT_BY_PATH(TRK_ITEM_NAME, ':') F_PATH
                     FROM ZVTS_ITEM_MASTER ZIM
                    WHERE PROJECT_NO = UPPER(#{PROJECT_NO})
                   CONNECT BY PRIOR ZIM.TRK_ITEM_SEQ = ZIM.TRK_ITEM_GROUP
                    START WITH ZIM.TRK_ITEM_SEQ
                               IN
                               (SELECT ZIM_IN.TRK_ITEM_SEQ
                                  FROM ZVTS_ITEM_MASTER ZIM_IN
                                 WHERE ZIM_IN.TRK_ITEM_NAME = #{TRK_ITEM_NAME1}
                                 AND ZIM_IN.PROJECT_NO = UPPER(#{PROJECT_NO}))

                   ) ZIM_LEVEL
            WHERE ZIM_LEVEL.LEV = #{LEVEL}

            <if test="LEVEL == 1"> AND F_PATH = ':'||#{TRK_ITEM_NAME1})</if>
            <if test="LEVEL == 2"> AND F_PATH = ':'||#{TRK_ITEM_NAME1}||':'||#{TRK_ITEM_NAME2})</if>
            <if test="LEVEL == 3"> AND F_PATH = ':'||#{TRK_ITEM_NAME1}||':'||#{TRK_ITEM_NAME2}||':'||#{TRK_ITEM_NAME3})</if>
            <if test="LEVEL == 4"> AND F_PATH = ':'||#{TRK_ITEM_NAME1}||':'||#{TRK_ITEM_NAME2}||':'||#{TRK_ITEM_NAME3}||':'||#{TRK_ITEM_NAME4})</if>

           ,ZVTS_ITEM_MASTER_S.NEXTVAL) AS SEQ_NEXTVAL
  		FROM DUAL
    </select>

	<update id="saveIdsmSetupExceluploadMst" parameterType="java.util.Map">
		MERGE INTO ZVTS_ITEM_MASTER
		USING DUAL
		ON(TRK_ITEM_NAME = #{TRK_ITEM_NAME} AND PROJECT_NO = #{PROJECT_NO})
		WHEN NOT MATCHED THEN
		INSERT
		(TRK_ITEM_SEQ
		,TRK_ITEM_NAME
		,TRK_ITEM_GROUP
		,PROJECT_ID
		,PROJECT_NO
		,TASK_NUMBER
		,OFFSHORE
		,PRIMAVERA_ID
		,MPS_PLAN_DATE
		,MPS_EXPECTED_DATE
		,MPS_ACTUAL_DATE

		,TE_PLAN_DATE
		,TE_EXPECTED_DATE
		,TE_ACTUAL_DATE

		,PURCHASE_DURATION
		,PO_PLAN_DATE
		,PO_EXPECTED_DATE
		,PO_ATCUAL_DATE
		,MAKE_DURATION
		,CARGO_PLAN_DATE
		,CARGO_EXPECTED_DATE
		,CARGO_ACTUAL_DATE
		,SHIPMENT_DURATION
		,FOB_PLAN_DATE
		,FOB_EXPECTED_DATE
		,FOB_ACTUAL_DATE
		,TRANS_DURATION
		,ONSITE_PLAN_DATE
		,ONSITE_EXPECTED_DATE
		,ONSITE_ACTUAL_DATE
		,PAYMENT_MILESTONE
		,REMARK
		,PM_AD
		,EM_AD
		,BUYER_AD
		,QC_AD
		,SM_AD
		,ATTRIBUTE3
		,ATTRIBUTE6
		,ATTRIBUTE7
		,ATTRIBUTE8
		,ATTRIBUTE9
		,ATTRIBUTE10
		,LAST_UPDATE_DATE
		,LAST_UPDATED_BY
		,CREATION_DATE
		,CREATED_BY)
		VALUES
		(#{TRK_ITEM_SEQ}
		,#{TRK_ITEM_NAME}
		,#{TRK_ITEM_GROUP}
		,(SELECT MAX(PROJECT_ID) FROM PA_PROJECTS_ALL_INT WHERE SEGMENT1 = UPPER(#{PROJECT_NO}))
		,UPPER(#{PROJECT_NO})
		,#{TASK_NUMBER}
		,#{OFFSHORE}
		,#{PRIMAVERA_ID}
		,TO_DATE(#{MPS_PLAN_DATE}, 'YYYY-MM-DD')
		,TO_DATE(#{MPS_EXPECTED_DATE}, 'YYYY-MM-DD')
		,TO_DATE(#{MPS_ACTUAL_DATE}, 'YYYY-MM-DD')

		,TO_DATE(#{TE_PLAN_DATE}, 'YYYY-MM-DD')
		,TO_DATE(#{TE_EXPECTED_DATE}, 'YYYY-MM-DD')
		,TO_DATE(#{TE_ACTUAL_DATE}, 'YYYY-MM-DD')

		,#{PURCHASE_DURATION}
		,TO_DATE(#{PO_PLAN_DATE}, 'YYYY-MM-DD')
		,TO_DATE(#{PO_EXPECTED_DATE}, 'YYYY-MM-DD')
		,TO_DATE(#{PO_ATCUAL_DATE}, 'YYYY-MM-DD')
		,#{MAKE_DURATION}
		,TO_DATE(#{CARGO_PLAN_DATE}, 'YYYY-MM-DD')
		,TO_DATE(#{CARGO_EXPECTED_DATE}, 'YYYY-MM-DD')
		,TO_DATE(#{CARGO_ACTUAL_DATE}, 'YYYY-MM-DD')
		,#{SHIPMENT_DURATION}
		,TO_DATE(#{FOB_PLAN_DATE}, 'YYYY-MM-DD')
		,TO_DATE(#{FOB_EXPECTED_DATE}, 'YYYY-MM-DD')
		,TO_DATE(#{FOB_ACTUAL_DATE}, 'YYYY-MM-DD')
		,#{TRANS_DURATION}
		,TO_DATE(#{ONSITE_PLAN_DATE}, 'YYYY-MM-DD')
		,TO_DATE(#{ONSITE_EXPECTED_DATE}, 'YYYY-MM-DD')
		,TO_DATE(#{ONSITE_ACTUAL_DATE}, 'YYYY-MM-DD')
		,#{PAYMENT_MILESTONE}
		,#{REMARK}
		,#{PM_AD}
		,#{EM_AD}
		,#{BUYER_AD}
		,#{QC_AD}
		,#{SM_AD}
		,#{ATTRIBUTE3}
		,#{ATTRIBUTE6}
		,#{ATTRIBUTE7}
		,#{ATTRIBUTE8}
		,#{ATTRIBUTE9}
		,#{ATTRIBUTE10}
		,SYSDATE
		,#{USER_AD}
		,SYSDATE
		,#{USER_AD})
	</update>

	<delete id="deleteIdsmSetupExceluploadAdmin" parameterType="java.util.Map">
    	DELETE
    	FROM
    		ZVTS_ITEM_MASTER_AUTH
 		WHERE
 			TRK_ITEM_SEQ IN (
			SELECT BB.TRK_ITEM_SEQ FROM ZVTS_ITEM_MASTER BB WHERE BB.PROJECT_NO = UPPER(#{PROJECT_NO}))
	</delete>

	<insert id="svaeIdsmSetupExceluploadAdmin" parameterType="java.util.Map">
		INSERT INTO  ZVTS_ITEM_MASTER_AUTH (TRK_ITEM_SEQ ,USER_AD , USER_JOB, AUTH_SCHEDULE,USER_NAME )
		SELECT A.*,B.ZEMP_NM FROM (
		SELECT AA.TRK_ITEM_SEQ,UPPER(AA.PM_AD) AS USER_AD,'PM','관리' FROM ZVTS_ITEM_MASTER AA WHERE AA.PM_AD IS NOT NULL AND PROJECT_NO = UPPER(#{PROJECT_NO})
		UNION ALL
		SELECT AA.TRK_ITEM_SEQ,UPPER(AA.BUYER_AD),'BUYER','관리' FROM ZVTS_ITEM_MASTER AA WHERE AA.BUYER_AD IS NOT NULL AND PROJECT_NO = UPPER(#{PROJECT_NO})
		UNION ALL
		SELECT AA.TRK_ITEM_SEQ,UPPER(AA.QC_AD),'QC','관리' FROM ZVTS_ITEM_MASTER AA WHERE AA.QC_AD IS NOT NULL AND PROJECT_NO = UPPER(#{PROJECT_NO})
		UNION ALL
		SELECT AA.TRK_ITEM_SEQ,UPPER(AA.EM_AD),'EM','관리' FROM ZVTS_ITEM_MASTER AA WHERE AA.EM_AD IS NOT NULL AND PROJECT_NO = UPPER(#{PROJECT_NO})
		UNION ALL
		SELECT AA.TRK_ITEM_SEQ,UPPER(AA.SM_AD),'SM','관리' FROM ZVTS_ITEM_MASTER AA WHERE AA.SM_AD IS NOT NULL AND PROJECT_NO = UPPER(#{PROJECT_NO})
		) A
		,ZVTS_EMP B
		WHERE A.USER_AD = B.AD_USER_ID
	</insert>

	<delete id="deleteIdsmSetupExceluploadInv" parameterType="java.util.Map">
    	DELETE FROM ZVTS_DESM_INVOICE DI
		WHERE DI.TRK_ITEM_SEQ IN ( SELECT IM.TRK_ITEM_SEQ
		                             FROM ZVTS_ITEM_MASTER IM
		                            WHERE IM.PROJECT_NO = UPPER(#{PROJECT_NO}))
	</delete>

	<insert id="saveIdsmSetupExceluploadInv" parameterType="java.util.Map">
   		INSERT INTO ZVTS_DESM_INVOICE (   TRK_ITEM_SEQ      ,
										  PROJECT_NO    	,
										  INVOICE_NUM       ,
										  LAST_UPDATE_DATE  ,
										  LAST_UPDATED_BY   ,
										  CREATION_DATE     ,
										  CREATED_BY
								       )
			    VALUES (
			       		 #{TRK_ITEM_SEQ},
				         #{PROJECT_NO},
				         #{INVOICE_NUM},
				         SYSDATE,
				         #{USER_AD},
				         SYSDATE,
				         #{USER_AD} )
	</insert>

	<delete id="deleteIdsmSetupExceluploadExcelData" parameterType="java.util.Map">
    	DELETE FROM ZVTS_ITEM_MASTER_XLSX
	</delete>

	<delete id="deleteIdsmSetupExceluploadItemMst" parameterType="java.util.Map">
    	DELETE
    	FROM
    		ZVTS_ITEM_MASTER
 		WHERE
 			PROJECT_NO = UPPER(#{PROJECT_NO})
	</delete>

	<insert id="saveIdsmSetupExceluploadExcelData" parameterType="java.util.Map">
    	INSERT INTO ZVTS_ITEM_MASTER_XLSX
	    	(TRK_ITEM_NAME1
	    	,TRK_ITEM_NAME2
	    	,TRK_ITEM_NAME3


			,PROJECT_ID
			,PROJECT_NO

			,TASK_NUMBER

			,OFFSHORE
			,PRIMAVERA_ID
			,MPS_PLAN_DATE
			,MPS_EXPECTED_DATE
			,MPS_ACTUAL_DATE
			,TE_PLAN_DATE
			,TE_EXPECTED_DATE
			,TE_ACTUAL_DATE

			,PURCHASE_DURATION
			,PO_PLAN_DATE
			,PO_EXPECTED_DATE
			,PO_ATCUAL_DATE
			,MAKE_DURATION

			,CARGO_PLAN_DATE
			,CARGO_EXPECTED_DATE
			,CARGO_ACTUAL_DATE
			,SHIPMENT_DURATION
			,FOB_PLAN_DATE
			,FOB_EXPECTED_DATE
			,FOB_ACTUAL_DATE
			,TRANS_DURATION
			,ONSITE_PLAN_DATE
			,ONSITE_EXPECTED_DATE
			,ONSITE_ACTUAL_DATE
			,PAYMENT_MILESTONE

			,PM_AD

			,EM_AD

			,BUYER_AD

			,QC_AD

			,SM_AD



			,ATTRIBUTE3
			,ATTRIBUTE4

			,ATTRIBUTE6
			,ATTRIBUTE7
			,ATTRIBUTE8

			,ATTRIBUTE10
			,LAST_UPDATE_DATE
			,LAST_UPDATED_BY
			,CREATION_DATE
			,CREATED_BY)
    	VALUES(
			 #{TRK_ITEM_NAME1}
			,#{TRK_ITEM_NAME2}
			,#{TRK_ITEM_NAME3}
			,(SELECT MAX(PROJECT_ID) FROM PA_PROJECTS_ALL_INT WHERE SEGMENT1 = UPPER(#{PROJECT_NO}))
			,UPPER(#{PROJECT_NO})

			,#{TASK_NUMBER}

			,#{OFFSHORE}
			,#{PRIMAVERA_ID}
			,TO_DATE (#{MPS_PLAN_DATE},'YYYY-MM-DD')
			,TO_DATE(#{MPS_EXPECTED_DATE},'YYYY-MM-DD')
			,TO_DATE(#{MPS_ACTUAL_DATE},'YYYY-MM-DD')

			,TO_DATE (#{TE_PLAN_DATE},'YYYY-MM-DD')
			,TO_DATE(#{TE_EXPECTED_DATE},'YYYY-MM-DD')
			,TO_DATE(#{TE_ACTUAL_DATE},'YYYY-MM-DD')

			,#{PURCHASE_DURATION}
			,TO_DATE(#{PO_PLAN_DATE},'YYYY-MM-DD')
			,TO_DATE(#{PO_EXPECTED_DATE},'YYYY-MM-DD')
			,TO_DATE(#{PO_ATCUAL_DATE},'YYYY-MM-DD')
			,#{MAKE_DURATION}
			,TO_DATE(#{CARGO_PLAN_DATE},'YYYY-MM-DD')
			,TO_DATE(#{CARGO_EXPECTED_DATE},'YYYY-MM-DD')
			,TO_DATE(#{CARGO_ACTUAL_DATE},'YYYY-MM-DD')
			,#{SHIPMENT_DURATION}
			,TO_DATE(#{FOB_PLAN_DATE},'YYYY-MM-DD')
			,TO_DATE(#{FOB_EXPECTED_DATE},'YYYY-MM-DD')
			,TO_DATE(#{FOB_ACTUAL_DATE},'YYYY-MM-DD')
			,#{TRANS_DURATION}
			,TO_DATE(#{ONSITE_PLAN_DATE},'YYYY-MM-DD')
			,TO_DATE(#{ONSITE_EXPECTED_DATE},'YYYY-MM-DD')
			,TO_DATE(#{ONSITE_ACTUAL_DATE},'YYYY-MM-DD')
			,#{PAYMENT_MILESTONE}
			,#{PM_AD}
			,#{EM_AD}
			,#{BUYER_AD}
			,#{QC_AD}
			,#{SM_AD}

			,#{ATTRIBUTE3}
			,#{TRK_ITEM_NAME4}

			,#{ATTRIBUTE6}
			,#{ATTRIBUTE7}
			,#{ATTRIBUTE8}

			,#{ATTRIBUTE10}
			,SYSDATE
			,#{USER_AD}
			,SYSDATE
			,#{USER_AD}
    	)
	</insert>

	<select id="getIdsmScheduleEtc" parameterType="java.util.Map" resultType="java.util.HashMap">
    	select CASE WHEN ZIM.PROJECT_NO = 'T19020' THEN 'N' ELSE 'Y' END AS SEQUENCE_YN
    	        ,ZIM.TRK_ITEM_SEQ
			    ,ZIM.TRK_ITEM_NAME
			    ,NVL(TRK_ITEM_GROUP, -1) AS TRK_ITEM_GROUP
			    ,ORGANIZATION_ID
			    ,ZIM.PROJECT_ID
			    ,ZIM.PROJECT_NO
			    ,ZIM.REMARK
			    ,PA.NAME AS PROJECT_NAME
			    ,TASK_ID
			    ,TASK_NUMBER
			    ,(SELECT PT.TASK_NAME FROM PA_TASKS PT WHERE PT.PROJECT_ID = ZIM.PROJECT_ID AND PT.TASK_ID = ZIM.TASK_ID) TASK_NAME
			    ,BATCH
			    ,OFFSHORE
			    ,PRIMAVERA_ID
			    ,TO_CHAR(MPS_PLAN_DATE, 'YYYY/MM/DD') AS MPS_PLAN_DATE
			    ,TO_CHAR(MPS_EXPECTED_DATE, 'YYYY/MM/DD') AS MPS_EXPECTED_DATE
			    ,TO_CHAR(MPS_ACTUAL_DATE, 'YYYY/MM/DD') AS MPS_ACTUAL_DATE
			    ,TO_CHAR(TE_PLAN_DATE, 'YYYY/MM/DD') AS TE_PLAN_DATE
			    ,TO_CHAR(TE_EXPECTED_DATE, 'YYYY/MM/DD') AS TE_EXPECTED_DATE
			    ,TO_CHAR(TE_ACTUAL_DATE, 'YYYY/MM/DD') AS TE_ACTUAL_DATE
			    ,PURCHASE_DURATION
			    ,TO_CHAR(PO_PLAN_DATE, 'YYYY/MM/DD') AS PO_PLAN_DATE
			    ,TO_CHAR(PO_EXPECTED_DATE, 'YYYY/MM/DD') AS PO_EXPECTED_DATE
			    ,TO_CHAR(PO_ATCUAL_DATE, 'YYYY/MM/DD') AS PO_ATCUAL_DATE
			    ,MAKE_DURATION
			    ,PROGRESS
			    ,TO_CHAR(CARGO_PLAN_DATE, 'YYYY/MM/DD') AS CARGO_PLAN_DATE
			    ,TO_CHAR(CARGO_EXPECTED_DATE, 'YYYY/MM/DD') AS CARGO_EXPECTED_DATE
			    ,TO_CHAR(CARGO_PROMISED_DATE, 'YYYY/MM/DD') AS CARGO_PROMISED_DATE
			    ,TO_CHAR(CARGO_ACTUAL_DATE, 'YYYY/MM/DD') AS CARGO_ACTUAL_DATE
			    ,SHIPMENT_DURATION
			    ,TO_CHAR(FOB_PLAN_DATE, 'YYYY/MM/DD') AS FOB_PLAN_DATE
			    ,TO_CHAR(FOB_EXPECTED_DATE, 'YYYY/MM/DD') AS FOB_EXPECTED_DATE
			    ,TO_CHAR(FOB_ACTUAL_DATE, 'YYYY/MM/DD') AS FOB_ACTUAL_DATE
			    ,TRANS_DURATION
			    ,TO_CHAR(ONSITE_PLAN_DATE, 'YYYY/MM/DD') AS ONSITE_PLAN_DATE
			    ,TO_CHAR(ONSITE_EXPECTED_DATE, 'YYYY/MM/DD') AS ONSITE_EXPECTED_DATE
			    ,TO_CHAR(ONSITE_ACTUAL_DATE, 'YYYY/MM/DD') AS ONSITE_ACTUAL_DATE
			    ,PAYMENT_MILESTONE
			    ,TRK_ITEM_DEFAULT
			    ,IAV.PM_AD
			    ,IAV.PM_NAME
			    ,IAV.EM_AD
			    ,IAV.EM_NAME
			    ,IAV.BUYER_AD
			    ,IAV.BUYER_NAME
			    ,IAV.QC_AD
			    ,IAV.QC_NAME
			    ,IAV.SM_AD
			    ,IAV.SM_NAME
			    ,CASE WHEN CARGO_PLAN_DATE <![CDATA[<]]> CARGO_EXPECTED_DATE THEN 'Y' ELSE 'N' END AS ISSUE_FLAG
			    ,ZIM.INVOICE_NUM
			    ,ZIM.ATTRIBUTE1
			    ,ZIM.ATTRIBUTE2
			    ,ZIM.ATTRIBUTE3
			    ,ZIM.ATTRIBUTE4
			    ,ZIM.ATTRIBUTE5
			    ,ZIM.ATTRIBUTE6
			    ,ZIM.ATTRIBUTE7
			    ,ZIM.ATTRIBUTE8
			    ,ZIM.ATTRIBUTE9
			    ,ZIM.ATTRIBUTE10
			    ,ZIM.LAST_UPDATE_DATE
			    ,ZIM.LAST_UPDATED_BY
			    ,ZIM.CREATION_DATE
			    ,ZIM.CREATED_BY
			    ,EMP_PM.ZORG_ID AS PM_DEPT_CODE
			    ,EMP_PM.ZORG_NM AS PM_DEPT_NAME
			    ,EMP_EM.ZORG_ID AS EM_DEPT_CODE
			    ,EMP_EM.ZORG_NM AS EM_DEPT_NAME
			    ,EMP_BUYER.ZORG_ID AS BUYER_DEPT_CODE
			    ,EMP_BUYER.ZORG_NM AS BUYER_DEPT_NAME
			    ,EMP_QC.ZORG_ID AS QC_DEPT_CODE
			    ,EMP_QC.ZORG_NM AS QC_DEPT_NAME
			    ,CASE WHEN CNT = 1 THEN AA.INVOICE_NUM
			          WHEN CNT > 1 THEN AA.INVOICE_NUM || ' 외 ' || AA.CALC_CNT  || '건'
                      ELSE ''
                      END  SEL_INVOICE_NUM
                 , (SELECT CASE WHEN COUNT(*) = 0 THEN NULL ELSE COUNT(*) END
		              FROM ESAATTH ATT
		             WHERE 1=1
		               AND ATT.GRP_CD  = ZDA.FILE_GRP_CD
		               AND ATT.STS <![CDATA[<>]]> 'D'
		                )  ATTH_CNT
		         , ZDA.FILE_GRP_CD
		         ,(SELECT COUNT(*)
		             FROM DESM_PACKING_MST
		            WHERE PROJECT_NO = ZIM.PROJECT_NO
		              AND TRK_ITEM_NAME = ZIM.TRK_ITEM_NAME ) AS PL_CNT
		    from
	    		zvts_item_master zim
			    ,pa_projects_all_INT pa
			    ,zvts_emp emp_pm
			    ,zvts_emp emp_em
			    ,zvts_emp emp_buyer
			    ,zvts_emp emp_qc
			    ,zvts_emp emp_sm
			    ,zvts_item_admin_v iav
			    ,zvts_desm_attach zda
			    ,(select di.trk_item_seq,
		                    count(*) cnt,
		                    count(*)-1 calc_cnt,
		                    max(di.invoice_num) invoice_num
		               from ZVTS_DESM_INVOICE di
		              where 1=1 --di.trk_item_seq = zim.trk_item_seq
		             group by di.trk_item_seq ) aa
			 where 1=1
			     and zim.project_id = pa.project_id
			     and zim.trk_item_seq = iav.trk_item_seq(+)
			     and iav.pm_ad = emp_pm.ad_user_id(+)
			     and iav.em_ad = emp_em.ad_user_id(+)
			     and iav.buyer_ad = emp_buyer.ad_user_id(+)
			     and iav.qc_ad = emp_qc.ad_user_id(+)
			     and iav.sm_ad = emp_sm.ad_user_id(+)
			     and zim.trk_item_seq = aa.trk_item_seq(+)
			     and zim.project_no = zda.project_no(+)
		         and zim.trk_item_name = zda.trk_item_name(+)

    		CONNECT BY zim.trk_item_seq = PRIOR zim.trk_item_group
    			START WITH zim.trk_item_seq in
    		(
	    	select
		     	distinct zim_in.trk_item_seq
		    from zvts_item_master zim_in
			    ,pa_projects_all_INT pa
			    ,pa_projects_all_INT pa_inter
			    ,ZVTS_ITEM_MASTER_AUTH iav
			    ,zvts_emp emp
			    ,ZVTS_DESM_INVOICE di
			 where 1=1
			     and zim_in.project_id = pa.project_id
			     and zim_in.trk_item_seq = iav.trk_item_seq(+)
			     and zim_in.attribute8 = pa_inter.segment1(+)
			     and iav.user_ad = emp.ad_user_id(+)
			     and zim_in.trk_item_seq = di.trk_item_seq(+)
			     AND UPPER(ZIM_IN.ATTRIBUTE6) = UPPER(#{SCOPE})
			<if test='VIEW_TYPE == "INTER"'>
				and zim_in.project_no like 'Z%'
				<if test='KEY1 == "project_name" 	and VALUE1 != null and VALUE1 != ""'> and upper(pa.name) like upper(#{VALUE1})||'%'</if>
		 		<if test='KEY1 == "project_no" 	and VALUE1 != null and VALUE1 != ""'> and zim_in.project_no = upper(#{VALUE1})</if>
		 		<if test='KEY4 == "project_name" 	and VALUE4 != null and VALUE4 != ""'> and upper(pa.name) like upper(#{VALUE4})||'%'</if>
		 		<if test='KEY4 == "project_no" 	and VALUE4 != null and VALUE4 != ""'> and zim_in.project_no = upper(#{VALUE4})</if>
			</if>

			<if test='VIEW_TYPE != "INTER"'>
				<if test='KEY1 == "project_name" 	and VALUE1 != null and VALUE1 != ""'> and upper(pa.name) like upper(#{VALUE1})||'%'</if>
		 		<if test='KEY1 == "project_no" 	and VALUE1 != null and VALUE1 != ""'> and zim_in.project_no = upper(#{VALUE1})</if>
				<if test='KEY4 == "project_name" 	and VALUE4 != null and VALUE4 != ""'> and upper(pa.name) like upper(#{VALUE4})||'%'</if>
		 		<if test='KEY4 == "project_no" 	and VALUE4 != null and VALUE4 != ""'> and zim_in.project_no = upper(#{VALUE4})</if>
			</if>


		 	<if test='KEY1 == "item" 			and VALUE1 != null and VALUE1 != ""'> and UPPER(trk_item_name) like '%' || UPPER(#{VALUE1})||'%'</if>
		 	<if test='KEY1 == "pm" 	and VALUE1 != null and VALUE1 != ""'> and user_job='PM' and UPPER(USER_NAME) like UPPER(#{VALUE1})||'%'</if>
		 	<if test='KEY1 == "em" 	and VALUE1 != null and VALUE1 != ""'> and user_job='EM' and UPPER(USER_NAME) like UPPER(#{VALUE1})||'%'</if>
		 	<if test='KEY1 == "buyer" and VALUE1 != null and VALUE1 != ""'> and user_job='BUYER' and UPPER(USER_NAME) like UPPER(#{VALUE1})||'%' </if>
		 	<if test='KEY1 == "qc" 	and VALUE1 != null and VALUE1 != ""'> and user_job='QC' and UPPER(USER_NAME) like UPPER(#{VALUE1})||'%'</if>
		 	<if test='KEY1 == "sm" 	and VALUE1 != null and VALUE1 != ""'> and user_job='SM' and UPPER(USER_NAME) like UPPER(#{VALUE1})||'%'</if>

		 	<if test='KEY1 == "attribute7" 			and VALUE1 != null and VALUE1 != ""'> and UPPER(zim_in.attribute7) like '%' || UPPER(#{VALUE1})||'%'</if>
		 	<if test='KEY1 == "attribute3" 			and VALUE1 != null and VALUE1 != ""'> and UPPER(zim_in.attribute3) like '%' || UPPER(#{VALUE1})||'%'</if>
		 	<if test='KEY1 == "attribute10" 			and VALUE1 != null and VALUE1 != ""'> and UPPER(zim_in.attribute10) like '%' || UPPER(#{VALUE1})||'%'</if>
		 	<if test='KEY1 == "attribute6" 			and VALUE1 != null and VALUE1 != ""'> and UPPER(zim_in.attribute6) like '%' || UPPER(#{VALUE1})||'%'</if>
		 	<if test='KEY1 == "invoice_num" 			and VALUE1 != null and VALUE1 != ""'> and UPPER(di.invoice_num) like '%' || UPPER(#{VALUE1})||'%'</if>


		 	<if test='KEY4 == "item" 			and VALUE4 != null and VALUE4 != ""'> and UPPER(trk_item_name) like '%' || UPPER(#{VALUE4})||'%'</if>
		 	<if test='KEY4 == "pm" 	and VALUE4 != null and VALUE4 != ""'> and user_job='PM' and UPPER(USER_NAME) like UPPER(#{VALUE4})||'%'</if>
		 	<if test='KEY4 == "em" 	and VALUE4 != null and VALUE4 != ""'> and user_job='EM' and UPPER(USER_NAME) like UPPER(#{VALUE4})||'%'</if>
		 	<if test='KEY4 == "buyer" and VALUE4 != null and VALUE4 != ""'> and user_job='BUYER' and UPPER(USER_NAME) like UPPER(#{VALUE4})||'%' </if>
		 	<if test='KEY4 == "qc" 	and VALUE4 != null and VALUE4 != ""'> and user_job='QC' and UPPER(USER_NAME) like UPPER(#{VALUE4})||'%'</if>
		 	<if test='KEY4 == "sm" 	and VALUE4 != null and VALUE4 != ""'> and user_job='SM' and UPPER(USER_NAME) like UPPER(#{VALUE4})||'%'</if>

		 	<if test='KEY4 == "attribute7" 			and VALUE4 != null and VALUE4 != ""'> and UPPER(zim_in.attribute7) like '%' || UPPER(#{VALUE4})||'%'</if>
		 	<if test='KEY4 == "attribute3" 			and VALUE4 != null and VALUE4 != ""'> and UPPER(zim_in.attribute3) like '%' || UPPER(#{VALUE4})||'%'</if>
		 	<if test='KEY4 == "attribute10" 			and VALUE4 != null and VALUE4 != ""'> and UPPER(zim_in.attribute10) like '%' || UPPER(#{VALUE4})||'%'</if>
		 	<if test='KEY4 == "attribute6" 			and VALUE4 != null and VALUE4 != ""'> and UPPER(zim_in.attribute6) like '%' || UPPER(#{VALUE4})||'%'</if>
		 	<if test='KEY4 == "invoice_num" 			and VALUE4 != null and VALUE4 != ""'> and UPPER(di.invoice_num) like '%' || UPPER(#{VALUE4})||'%'</if>


		 	<if test='KEY3 == "plan" '>
		 		<if test='(VALUE2 != null and VALUE2 !="") or (VALUE3 != null and VALUE3 !="")'>
		 			<if test='KEY2 == "mps" '> 	and mps_plan_date 	 between to_date(NVL(#{VALUE2},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE3},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY2 == "po" '> 	and po_plan_date 	 between to_date(NVL(#{VALUE2},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE3},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY2 == "cargo" '>  and cargo_plan_date  between to_date(NVL(#{VALUE2},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE3},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY2 == "fob" '> 	and fob_plan_date 	 between to_date(NVL(#{VALUE2},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE3},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY2 == "onsite" '> and onsite_plan_date between to_date(NVL(#{VALUE2},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE3},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 		</if>
		 	</if>
		 	<if test='KEY3 == "expected" '>
		 		<if test='(VALUE2 != null and VALUE2 !="") or (VALUE3 != null and VALUE3 !="")'>
		 			<if test='KEY2 == "mps" '> 	and mps_expected_date 	 between to_date(NVL(#{VALUE2},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE3},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY2 == "po" '>		and po_expected_date 	 between to_date(NVL(#{VALUE2},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE3},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY2 == "cargo" '>  and cargo_expected_date  between to_date(NVL(#{VALUE2},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE3},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY2 == "fob" '> 	and fob_expected_date 	 between to_date(NVL(#{VALUE2},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE3},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY2 == "onsite" '>	and onsite_expected_date between to_date(NVL(#{VALUE2},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE3},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 		</if>
		 	</if>
		 	<if test='KEY3 == "actual" '>
		 		<if test='(VALUE2 != null and VALUE2 !="") or (VALUE3 != null and VALUE3 !="")'>
		 			<if test='KEY2 == "mps" '> 	and mps_actual_date 	between to_date(NVL(#{VALUE2},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE3},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY2 == "po" '> 	and po_actual_date 		between to_date(NVL(#{VALUE2},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE3},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY2 == "cargo" '>  and cargo_actual_date 	between to_date(NVL(#{VALUE2},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE3},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY2 == "fob" '> 	and fob_actual_date		between to_date(NVL(#{VALUE2},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE3},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY2 == "onsite" '> and onsite_actual_date 	between to_date(NVL(#{VALUE2},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE3},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 		</if>
		 	</if>
		 	<if test='KEY6 == "plan" '>
		 		<if test='(VALUE5 != null and VALUE5 !="") or (VALUE6 != null and VALUE6 !="")'>
		 			<if test='KEY5 == "mps" '> 	and mps_plan_date 	 between to_date(NVL(#{VALUE5},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE6},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY5 == "po" '> 	and po_plan_date 	 between to_date(NVL(#{VALUE5},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE6},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY5 == "cargo" '>  and cargo_plan_date  between to_date(NVL(#{VALUE5},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE6},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY5 == "fob" '> 	and fob_plan_date 	 between to_date(NVL(#{VALUE5},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE6},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY5 == "onsite" '> and onsite_plan_date between to_date(NVL(#{VALUE5},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE6},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 		</if>
		 	</if>
		 	<if test='KEY6 == "expected" '>
		 		<if test='(VALUE5 != null and VALUE5 !="") or (VALUE6 != null and VALUE6 !="")'>
		 			<if test='KEY5 == "mps" '>	and mps_plan_date 		 between to_date(NVL(#{VALUE5},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE6},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY5 == "po" '>		and po_expected_date 	 between to_date(NVL(#{VALUE5},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE6},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY5 == "cargo" '>	and cargo_expected_date  between to_date(NVL(#{VALUE5},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE6},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY5 == "fob" '>	and fob_expected_date 	 between to_date(NVL(#{VALUE5},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE6},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY5 == "onsite" '>	and onsite_expected_date between to_date(NVL(#{VALUE5},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE6},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 		</if>
		 	</if>
		 	<if test='KEY6 == "actual" '>
		 		<if test='(VALUE5 != null and VALUE5 !="") or (VALUE6 != null and VALUE6 !="")'>
		 			<if test='KEY5 == "mps" '> 	and mps_actual_date    between to_date(NVL(#{VALUE5},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE6},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY5 == "po" '> 	and po_actual_date     between to_date(NVL(#{VALUE5},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE6},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY5 == "cargo" '>  and cargo_actual_date  between to_date(NVL(#{VALUE5},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE6},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY5 == "fob" '>	and fob_actual_date    between to_date(NVL(#{VALUE5},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE6},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY5 == "onsite" '> and onsite_actual_date between to_date(NVL(#{VALUE5},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE6},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 		</if>
		 	</if>
		    <if test='ISSUE_CHECK == "Y" '>
		    	and (cargo_actual_date IS NULL and cargo_plan_date <![CDATA[<]]> cargo_expected_date
		    		or (PO_ATCUAL_DATE IS NULL AND po_plan_date <![CDATA[<]]> po_expected_date   )
		    		or (MPS_ACTUAL_DATE IS NULL AND  mps_plan_date <![CDATA[<]]> mps_expected_date )
		    		or (fob_actual_date IS NULL AND  fob_plan_date <![CDATA[<]]> fob_expected_date )
		    		or (onsite_actual_date IS NULL AND  onsite_plan_date <![CDATA[<]]> onsite_expected_date )
		    		)
		    </if>
			<if test='OFFSHORE != null and OFFSHORE !=""'> and offshore = #{OFFSHORE}</if>
			<if test='PROJECT_NO != "" '> and zim_in.project_no = UPPER(#{PROJECT_NO})</if>

	 		)

	 		union
	 		select CASE WHEN ZIM.PROJECT_NO = 'T19020' THEN 'N' ELSE 'Y' END AS SEQUENCE_YN
				,ZIM.TRK_ITEM_SEQ
			    ,ZIM.TRK_ITEM_NAME
			    ,NVL(TRK_ITEM_GROUP, -1) AS TRK_ITEM_GROUP
			    ,ORGANIZATION_ID
			    ,ZIM.PROJECT_ID
			    ,ZIM.PROJECT_NO
			    ,ZIM.REMARK
			    ,PA.NAME AS PROJECT_NAME
			    ,TASK_ID
			    ,TASK_NUMBER
			    ,(SELECT PT.TASK_NAME FROM PA_TASKS PT WHERE PT.PROJECT_ID = ZIM.PROJECT_ID AND PT.TASK_ID = ZIM.TASK_ID) TASK_NAME
			    ,BATCH
			    ,OFFSHORE
			    ,PRIMAVERA_ID
			    ,TO_CHAR(MPS_PLAN_DATE, 'YYYY/MM/DD') AS MPS_PLAN_DATE
			    ,TO_CHAR(MPS_EXPECTED_DATE, 'YYYY/MM/DD') AS MPS_EXPECTED_DATE
			    ,TO_CHAR(MPS_ACTUAL_DATE, 'YYYY/MM/DD') AS MPS_ACTUAL_DATE
			    ,TO_CHAR(TE_PLAN_DATE, 'YYYY/MM/DD') AS TE_PLAN_DATE
			    ,TO_CHAR(TE_EXPECTED_DATE, 'YYYY/MM/DD') AS TE_EXPECTED_DATE
			    ,TO_CHAR(TE_ACTUAL_DATE, 'YYYY/MM/DD') AS TE_ACTUAL_DATE
			    ,PURCHASE_DURATION
			    ,TO_CHAR(PO_PLAN_DATE, 'YYYY/MM/DD') AS PO_PLAN_DATE
			    ,TO_CHAR(PO_EXPECTED_DATE, 'YYYY/MM/DD') AS PO_EXPECTED_DATE
			    ,TO_CHAR(PO_ATCUAL_DATE, 'YYYY/MM/DD') AS PO_ATCUAL_DATE
			    ,MAKE_DURATION
			    ,PROGRESS
			    ,TO_CHAR(CARGO_PLAN_DATE, 'YYYY/MM/DD') AS CARGO_PLAN_DATE
			    ,TO_CHAR(CARGO_EXPECTED_DATE, 'YYYY/MM/DD') AS CARGO_EXPECTED_DATE
			    ,TO_CHAR(CARGO_PROMISED_DATE, 'YYYY/MM/DD') AS CARGO_PROMISED_DATE
			    ,TO_CHAR(CARGO_ACTUAL_DATE, 'YYYY/MM/DD') AS CARGO_ACTUAL_DATE
			    ,SHIPMENT_DURATION
			    ,TO_CHAR(FOB_PLAN_DATE, 'YYYY/MM/DD') AS FOB_PLAN_DATE
			    ,TO_CHAR(FOB_EXPECTED_DATE, 'YYYY/MM/DD') AS FOB_EXPECTED_DATE
			    ,TO_CHAR(FOB_ACTUAL_DATE, 'YYYY/MM/DD') AS FOB_ACTUAL_DATE
			    ,TRANS_DURATION
			    ,TO_CHAR(ONSITE_PLAN_DATE, 'YYYY/MM/DD') AS ONSITE_PLAN_DATE
			    ,TO_CHAR(ONSITE_EXPECTED_DATE, 'YYYY/MM/DD') AS ONSITE_EXPECTED_DATE
			    ,TO_CHAR(ONSITE_ACTUAL_DATE, 'YYYY/MM/DD') AS ONSITE_ACTUAL_DATE
			    ,PAYMENT_MILESTONE
			    ,TRK_ITEM_DEFAULT
			    ,IAV.PM_AD
			    ,IAV.PM_NAME
			    ,IAV.EM_AD
			    ,IAV.EM_NAME
			    ,IAV.BUYER_AD
			    ,IAV.BUYER_NAME
			    ,IAV.QC_AD
			    ,IAV.QC_NAME
			    ,IAV.SM_AD
			    ,IAV.SM_NAME
			    ,CASE WHEN CARGO_PLAN_DATE <![CDATA[<]]> CARGO_EXPECTED_DATE THEN 'Y' ELSE 'N' END AS ISSUE_FLAG
			    ,ZIM.INVOICE_NUM
			    ,ZIM.ATTRIBUTE1
			    ,ZIM.ATTRIBUTE2
			    ,ZIM.ATTRIBUTE3
			    ,ZIM.ATTRIBUTE4
			    ,ZIM.ATTRIBUTE5
			    ,ZIM.ATTRIBUTE6
			    ,ZIM.ATTRIBUTE7
			    ,ZIM.ATTRIBUTE8
			    ,ZIM.ATTRIBUTE9
			    ,ZIM.ATTRIBUTE10
			    ,ZIM.LAST_UPDATE_DATE
			    ,ZIM.LAST_UPDATED_BY
			    ,ZIM.CREATION_DATE
			    ,ZIM.CREATED_BY
			    ,EMP_PM.ZORG_ID AS PM_DEPT_CODE
			    ,EMP_PM.ZORG_NM AS PM_DEPT_NAME
			    ,EMP_EM.ZORG_ID AS EM_DEPT_CODE
			    ,EMP_EM.ZORG_NM AS EM_DEPT_NAME
			    ,EMP_BUYER.ZORG_ID AS BUYER_DEPT_CODE
			    ,EMP_BUYER.ZORG_NM AS BUYER_DEPT_NAME
			    ,EMP_QC.ZORG_ID AS QC_DEPT_CODE
			    ,EMP_QC.ZORG_NM AS QC_DEPT_NAME
			    ,CASE WHEN CNT = 1 THEN AA.INVOICE_NUM
			          WHEN CNT > 1 THEN AA.INVOICE_NUM || ' 외 ' || AA.CALC_CNT  || '건'
                      END  SEL_INVOICE_NUM
                 , (SELECT CASE WHEN COUNT(*) = 0 THEN NULL ELSE COUNT(*) END
		              FROM ESAATTH ATT
		             WHERE 1=1
		               AND ATT.GRP_CD  = ZDA.FILE_GRP_CD
		               AND ATT.STS <![CDATA[<>]]> 'D'
		                )  ATTH_CNT
		         , ZDA.FILE_GRP_CD
		         ,(SELECT COUNT(*)
		             FROM DESM_PACKING_MST
		            WHERE PROJECT_NO = ZIM.PROJECT_NO
		              AND TRK_ITEM_NAME = ZIM.TRK_ITEM_NAME ) AS PL_CNT
			from
	    		zvts_item_master zim
	    		,zvts_item_admin_v iav
			    ,pa_projects_all_INT pa
			    ,zvts_emp emp_pm
			    ,zvts_emp emp_em
			    ,zvts_emp emp_buyer
			    ,zvts_emp emp_qc
			    ,zvts_emp emp_sm
			    ,zvts_desm_attach zda
			    ,(select di.trk_item_seq,
		                    count(*) cnt,
		                    count(*)-1 calc_cnt,
		                    max(di.invoice_num) invoice_num
		               from ZVTS_DESM_INVOICE di
		              where 1=1 --di.trk_item_seq = zim.trk_item_seq
		             group by di.trk_item_seq ) aa
			 where 1=1
			     and zim.project_id = pa.project_id
			     and zim.trk_item_seq = iav.trk_item_seq(+)
			     and iav.pm_ad = emp_pm.ad_user_id(+)
			     and iav.em_ad = emp_em.ad_user_id(+)
			     and iav.buyer_ad = emp_buyer.ad_user_id(+)
			     and iav.qc_ad = emp_qc.ad_user_id(+)
			     and iav.sm_ad = emp_sm.ad_user_id(+)
		     	 and zim.trk_item_seq = aa.trk_item_seq(+)
		     	 and zim.project_no = zda.project_no(+)
				 and zim.trk_item_name = zda.trk_item_name(+)

    		CONNECT BY PRIOR zim.trk_item_seq = zim.trk_item_group
    			START WITH zim.trk_item_seq in
    		(
	    	 select
		     	distinct zim_in.trk_item_seq
		     from zvts_item_master zim_in
		     	,ZVTS_ITEM_MASTER_AUTH iav
			    ,pa_projects_all_INT pa
			    ,pa_projects_all_INT pa_inter
			    ,zvts_emp emp
			    ,ZVTS_DESM_INVOICE di
			 where 1=1
			     and zim_in.project_id = pa.project_id
			     and zim_in.trk_item_seq = iav.trk_item_seq(+)
			     and zim_in.attribute8 = pa_inter.segment1(+)
			     and iav.user_ad = emp.ad_user_id(+)
			     and zim_in.trk_item_seq = di.trk_item_seq(+)
		        AND UPPER(ZIM_IN.ATTRIBUTE6) = UPPER(#{SCOPE})
		    <if test='VIEW_TYPE == "INTER"'>
				and zim_in.project_no like 'Z%'
				<if test='KEY1 == "project_name" 	and VALUE1 != null and VALUE1 != ""'> and upper(pa.name) like upper(#{VALUE1})||'%'</if>
		 		<if test='KEY1 == "project_no" 	and VALUE1 != null and VALUE1 != ""'> and zim_in.project_no = upper(#{VALUE1})</if>
		 		<if test='KEY4 == "project_name" 	and VALUE4 != null and VALUE4 != ""'> and upper(pa.name) like upper(#{VALUE4})||'%'</if>
		 		<if test='KEY4 == "project_no" 	and VALUE4 != null and VALUE4 != ""'> and zim_in.project_no = upper(#{VALUE4})</if>
			</if>

			<if test='VIEW_TYPE != "INTER"'>
				<if test='KEY1 == "project_name" 	and VALUE1 != null and VALUE1 != ""'> and upper(pa.name) like upper(#{VALUE1})||'%'</if>
		 		<if test='KEY1 == "project_no" 	and VALUE1 != null and VALUE1 != ""'> and zim_in.project_no = upper(#{VALUE1})</if>
				<if test='KEY4 == "project_name" 	and VALUE4 != null and VALUE4 != ""'> and upper(pa.name) like upper(#{VALUE4})||'%'</if>
		 		<if test='KEY4 == "project_no" 	and VALUE4 != null and VALUE4 != ""'> and zim_in.project_no = upper(#{VALUE4})</if>
			</if>


		    <if test='KEY1 == "item" 			and VALUE1 != null and VALUE1 != ""'> and UPPER(trk_item_name) like '%' || UPPER(#{VALUE1})||'%'</if>
		 	<if test='KEY1 == "pm" 	and VALUE1 != null and VALUE1 != ""'> and user_job='PM' and UPPER(USER_NAME) like UPPER(#{VALUE1})||'%' </if>
		 	<if test='KEY1 == "em" 	and VALUE1 != null and VALUE1 != ""'> and user_job='EM' and UPPER(USER_NAME) like UPPER(#{VALUE1})||'%' </if>
		 	<if test='KEY1 == "buyer" and VALUE1 != null and VALUE1 != ""'> and user_job='BUYER' and UPPER(USER_NAME) like UPPER(#{VALUE1})||'%' </if>
		 	<if test='KEY1 == "qc" 	and VALUE1 != null and VALUE1 != ""'> and user_job='QC' and UPPER(USER_NAME) like UPPER(#{VALUE1})||'%' </if>
		 	<if test='KEY1 == "sm" 	and VALUE1 != null and VALUE1 != ""'> and user_job='SM' and UPPER(USER_NAME) like UPPER(#{VALUE1})||'%' </if>

		 	<if test='KEY1 == "attribute7" 			and VALUE1 != null and VALUE1 != ""'> and UPPER(zim_in.attribute7) like '%' || UPPER(#{VALUE1})||'%'</if>
		 	<if test='KEY1 == "attribute3" 			and VALUE1 != null and VALUE1 != ""'> and UPPER(zim_in.attribute3) like '%' || UPPER(#{VALUE1})||'%'</if>
		 	<if test='KEY1 == "attribute10" 			and VALUE1 != null and VALUE1 != ""'> and UPPER(zim_in.attribute10) like '%' || UPPER(#{VALUE1})||'%'</if>
		 	<if test='KEY1 == "attribute6" 			and VALUE1 != null and VALUE1 != ""'> and UPPER(zim_in.attribute6) like '%' || UPPER(#{VALUE1})||'%'</if>
		 	<if test='KEY1 == "invoice_num" 			and VALUE1 != null and VALUE1 != ""'> and UPPER(di.invoice_num) like '%' || UPPER(#{VALUE1})||'%'</if>


		 	<if test='KEY4 == "item" 			and VALUE4 != null and VALUE4 != ""'> and UPPER(trk_item_name) like '%' || UPPER(#{VALUE4})||'%'</if>
		 	<if test='KEY4 == "pm" 	and VALUE4 != null and VALUE4 != ""'>  and user_job='PM' and UPPER(USER_NAME) like UPPER(#{VALUE4})||'%'</if>
		 	<if test='KEY4 == "em" 	and VALUE4 != null and VALUE4 != ""'>  and user_job='EM' and UPPER(USER_NAME) like UPPER(#{VALUE4})||'%'</if>
		 	<if test='KEY4 == "buyer" and VALUE4 != null and VALUE4 != ""'>  and user_job='BUYER' and UPPER(USER_NAME) like UPPER(#{VALUE4})||'%'  </if>
		 	<if test='KEY4 == "qc" 	and VALUE4 != null and VALUE4 != ""'>  and user_job='QC' and UPPER(USER_NAME) like UPPER(#{VALUE4})||'%'</if>
		 	<if test='KEY4 == "sm" 	and VALUE4 != null and VALUE4 != ""'>  and user_job='SM' and UPPER(USER_NAME) like UPPER(#{VALUE4})||'%'</if>

		 	<if test='KEY4 == "attribute7" 			and VALUE4 != null and VALUE4 != ""'> and UPPER(zim_in.attribute7) like '%' || UPPER(#{VALUE4})||'%'</if>
		 	<if test='KEY4 == "attribute3" 			and VALUE4 != null and VALUE4 != ""'> and UPPER(zim_in.attribute3) like '%' || UPPER(#{VALUE4})||'%'</if>
		 	<if test='KEY4 == "attribute10" 			and VALUE4 != null and VALUE4 != ""'> and UPPER(zim_in.attribute10) like '%' || UPPER(#{VALUE4})||'%'</if>
		 	<if test='KEY4 == "attribute6" 			and VALUE4 != null and VALUE4 != ""'> and UPPER(zim_in.attribute6) like '%' || UPPER(#{VALUE4})||'%'</if>
		 	<if test='KEY4 == "invoice_num" 			and VALUE4 != null and VALUE4 != ""'> and UPPER(di.invoice_num) like '%' || UPPER(#{VALUE4})||'%'</if>

		 	<if test='KEY3 == "plan" '>
		 		<if test='(VALUE2 != null and VALUE2 !="") or (VALUE3 != null and VALUE3 !="")'>
		 			<if test='KEY2 == "mps" '> 	and mps_plan_date 	 between to_date(NVL(#{VALUE2},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE3},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY2 == "po" '> 	and po_plan_date 	 between to_date(NVL(#{VALUE2},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE3},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY2 == "cargo" '>  and cargo_plan_date  between to_date(NVL(#{VALUE2},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE3},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY2 == "fob" '> 	and fob_plan_date 	 between to_date(NVL(#{VALUE2},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE3},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY2 == "onsite" '> and onsite_plan_date between to_date(NVL(#{VALUE2},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE3},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 		</if>
		 	</if>
		 	<if test='KEY3 == "expected" '>
		 		<if test='(VALUE2 != null and VALUE2 !="") or (VALUE3 != null and VALUE3 !="")'>
		 			<if test='KEY2 == "mps" '> 	and mps_expected_date 	 between to_date(NVL(#{VALUE2},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE3},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY2 == "po" '>		and po_expected_date 	 between to_date(NVL(#{VALUE2},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE3},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY2 == "cargo" '>  and cargo_expected_date  between to_date(NVL(#{VALUE2},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE3},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY2 == "fob" '> 	and fob_expected_date 	 between to_date(NVL(#{VALUE2},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE3},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY2 == "onsite" '>	and onsite_expected_date between to_date(NVL(#{VALUE2},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE3},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 		</if>
		 	</if>
		 	<if test='KEY3 == "actual" '>
		 		<if test='(VALUE2 != null and VALUE2 !="") or (VALUE3 != null and VALUE3 !="")'>
		 			<if test='KEY2 == "mps" '> 	and mps_actual_date 	between to_date(NVL(#{VALUE2},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE3},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY2 == "po" '> 	and po_actual_date 		between to_date(NVL(#{VALUE2},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE3},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY2 == "cargo" '>  and cargo_actual_date 	between to_date(NVL(#{VALUE2},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE3},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY2 == "fob" '> 	and fob_actual_date		between to_date(NVL(#{VALUE2},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE3},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY2 == "onsite" '> and onsite_actual_date 	between to_date(NVL(#{VALUE2},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE3},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 		</if>
		 	</if>
		 	<if test='KEY6 == "plan" '>
		 		<if test='(VALUE5 != null and VALUE5 !="") or (VALUE6 != null and VALUE6 !="")'>
		 			<if test='KEY5 == "mps" '> 	and mps_plan_date 	 between to_date(NVL(#{VALUE5},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE6},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY5 == "po" '> 	and po_plan_date 	 between to_date(NVL(#{VALUE5},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE6},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY5 == "cargo" '>  and cargo_plan_date  between to_date(NVL(#{VALUE5},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE6},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY5 == "fob" '> 	and fob_plan_date 	 between to_date(NVL(#{VALUE5},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE6},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY5 == "onsite" '> and onsite_plan_date between to_date(NVL(#{VALUE5},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE6},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 		</if>
		 	</if>
		 	<if test='KEY6 == "expected" '>
		 		<if test='(VALUE5 != null and VALUE5 !="") or (VALUE6 != null and VALUE6 !="")'>
		 			<if test='KEY5 == "mps" '>	and mps_plan_date 		 between to_date(NVL(#{VALUE5},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE6},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY5 == "po" '>		and po_expected_date 	 between to_date(NVL(#{VALUE5},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE6},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY5 == "cargo" '>	and cargo_expected_date  between to_date(NVL(#{VALUE5},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE6},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY5 == "fob" '>	and fob_expected_date 	 between to_date(NVL(#{VALUE5},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE6},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY5 == "onsite" '>	and onsite_expected_date between to_date(NVL(#{VALUE5},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE6},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 		</if>
		 	</if>
		 	<if test='KEY6 == "actual" '>
		 		<if test='(VALUE5 != null and VALUE5 !="") or (VALUE6 != null and VALUE6 !="")'>
		 			<if test='KEY5 == "mps" '> 	and mps_actual_date    between to_date(NVL(#{VALUE5},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE6},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY5 == "po" '> 	and po_actual_date     between to_date(NVL(#{VALUE5},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE6},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY5 == "cargo" '>  and cargo_actual_date  between to_date(NVL(#{VALUE5},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE6},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY5 == "fob" '>	and fob_actual_date    between to_date(NVL(#{VALUE5},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE6},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 			<if test='KEY5 == "onsite" '> and onsite_actual_date between to_date(NVL(#{VALUE5},'1970/01/01'),'yyyy/mm/dd') and to_date(NVL(#{VALUE6},'9999/12/31'),'yyyy/mm/dd')+0.99999</if>
		 		</if>
		 	</if>
		    <if test='ISSUE_CHECK == "Y" '>
		    	and (cargo_actual_date IS NULL and cargo_plan_date <![CDATA[<]]> cargo_expected_date
		    		or (PO_ATCUAL_DATE IS NULL AND po_plan_date <![CDATA[<]]> po_expected_date   )
		    		or (MPS_ACTUAL_DATE IS NULL AND  mps_plan_date <![CDATA[<]]> mps_expected_date )
		    		or (fob_actual_date IS NULL AND  fob_plan_date <![CDATA[<]]> fob_expected_date )
		    		or (onsite_actual_date IS NULL AND  onsite_plan_date <![CDATA[<]]> onsite_expected_date )
		    		)
		    </if>
			<if test='OFFSHORE != null and OFFSHORE !=""'> and offshore = #{OFFSHORE}</if>
			<if test='PROJECT_NO != "" '> and zim_in.project_no = UPPER(#{PROJECT_NO})</if>
	 		)
	</select>

	<select id="getIdsmSetupExceluploadUpdateSeq" parameterType="java.util.Map" resultType="java.util.HashMap">
			/* idsmMapper.xml -> getIdsmSetupExceluploadUpdateSeq : 기자재 일정관리 엑셀 업로드 TRK ITEM NAME 일치하는지 확인 */
		     SELECT NVL(
			          (SELECT ZIM.TRK_ITEM_SEQ
	                     FROM ZVTS_ITEM_MASTER ZIM
	                    WHERE PROJECT_NO = UPPER(#{PROJECT_NO})
	                     AND  ZIM.TRK_ITEM_NAME = #{TRK_CHECK_ITEM_NAME} )

                      ,0) AS SEQ_NEXTVAL
  		      FROM DUAL
	</select>

	<select id="getIdsmSetupExceluploadUpdateSeq_back" parameterType="java.util.Map" resultType="java.util.HashMap">
			/* idsmMapper.xml -> getIdsmSetupExceluploadUpdateSeq : 기자재 일정관리 엑셀 업로드 TRK ITEM NAME 일치하는지 확인 */
		     SELECT NVL(
			          (SELECT ZIM.TRK_ITEM_SEQ
	                     FROM ZVTS_ITEM_MASTER ZIM
	                    WHERE PROJECT_NO = UPPER(#{PROJECT_NO})
	                     AND  TRIM(ZIM.TRK_ITEM_NAME) = #{TRK_CHECK_ITEM_NAME} )

                      ,0) AS SEQ_NEXTVAL
  		      FROM DUAL
	</select>

	<update id="saveIdsmSetupExceluploadMstUpdate" parameterType="java.util.Map">
		MERGE INTO ZVTS_ITEM_MASTER A
		USING DUAL
		ON(TRK_ITEM_NAME = #{TRK_ITEM_NAME} AND PROJECT_NO = #{PROJECT_NO})
		WHEN MATCHED THEN
		UPDATE SET
             A.TASK_NUMBER       	= #{TASK_NUMBER}
            ,A.OFFSHORE         	= #{OFFSHORE}
            ,A.PRIMAVERA_ID       = #{PRIMAVERA_ID}
            ,A.MPS_PLAN_DATE         	= TO_DATE(#{MPS_PLAN_DATE}, 'YYYY-MM-DD')
            ,A.MPS_EXPECTED_DATE         	= TO_DATE(#{MPS_EXPECTED_DATE}, 'YYYY-MM-DD')
            ,A.MPS_ACTUAL_DATE         	= TO_DATE(#{MPS_ACTUAL_DATE}, 'YYYY-MM-DD')

            ,A.TE_PLAN_DATE         	= TO_DATE(#{TE_PLAN_DATE}, 'YYYY-MM-DD')
            ,A.TE_EXPECTED_DATE         	= TO_DATE(#{TE_EXPECTED_DATE}, 'YYYY-MM-DD')
            ,A.TE_ACTUAL_DATE         	= TO_DATE(#{TE_ACTUAL_DATE}, 'YYYY-MM-DD')

            ,A.PURCHASE_DURATION         	= #{PURCHASE_DURATION}
            ,A.PO_PLAN_DATE         	= TO_DATE(#{PO_PLAN_DATE}, 'YYYY-MM-DD')
            ,A.PO_EXPECTED_DATE         	= TO_DATE(#{PO_EXPECTED_DATE}, 'YYYY-MM-DD')
            ,A.PO_ATCUAL_DATE         	= TO_DATE(#{PO_ATCUAL_DATE}, 'YYYY-MM-DD')
            ,A.MAKE_DURATION         	= #{MAKE_DURATION}
            ,A.CARGO_PLAN_DATE         	= TO_DATE(#{CARGO_PLAN_DATE}, 'YYYY-MM-DD')
            ,A.CARGO_EXPECTED_DATE         	= TO_DATE(#{CARGO_EXPECTED_DATE}, 'YYYY-MM-DD')
            ,A.CARGO_ACTUAL_DATE         	= TO_DATE(#{CARGO_ACTUAL_DATE}, 'YYYY-MM-DD')
            ,A.SHIPMENT_DURATION         	= #{SHIPMENT_DURATION}
            ,A.FOB_PLAN_DATE         	= TO_DATE(#{FOB_PLAN_DATE}, 'YYYY-MM-DD')
            ,A.FOB_EXPECTED_DATE         	= TO_DATE(#{FOB_EXPECTED_DATE}, 'YYYY-MM-DD')
            ,A.FOB_ACTUAL_DATE         	= TO_DATE(#{FOB_ACTUAL_DATE}, 'YYYY-MM-DD')
            ,A.TRANS_DURATION         	= #{TRANS_DURATION}
            ,A.ONSITE_PLAN_DATE         	= TO_DATE(#{ONSITE_PLAN_DATE}, 'YYYY-MM-DD')
            ,A.ONSITE_EXPECTED_DATE         	= TO_DATE(#{ONSITE_EXPECTED_DATE}, 'YYYY-MM-DD')
            ,A.ONSITE_ACTUAL_DATE         	= TO_DATE(#{ONSITE_ACTUAL_DATE}, 'YYYY-MM-DD')
            ,A.PAYMENT_MILESTONE		= #{PAYMENT_MILESTONE}
            ,A.REMARK		= #{REMARK}
			,A.PM_AD				= #{PM_AD}
			,A.EM_AD				= #{EM_AD}
			,A.BUYER_AD			= #{BUYER_AD}
			,A.QC_AD				= #{QC_AD}
			,A.SM_AD				= #{SM_AD}
			,A.ATTRIBUTE3			= #{ATTRIBUTE3}
			,A.ATTRIBUTE6			= #{ATTRIBUTE6}
			,A.ATTRIBUTE7			= #{ATTRIBUTE7}
			,A.ATTRIBUTE8			= #{ATTRIBUTE8}
			,A.LAST_UPDATE_DATE = SYSDATE
			,A.LAST_UPDATED_BY  = #{USER_AD}
	</update>

	<delete id="deleteIdsmSetupExceluploadAdminUpdate" parameterType="java.util.Map">
    	DELETE
    	FROM
    		ZVTS_ITEM_MASTER_AUTH
 		WHERE
 			TRK_ITEM_SEQ = #{TRK_ITEM_SEQ}
	</delete>

	<insert id="svaeIdsmSetupExceluploadAdminUpdate" parameterType="java.util.Map">
		INSERT INTO  ZVTS_ITEM_MASTER_AUTH (TRK_ITEM_SEQ ,USER_AD , USER_JOB, AUTH_SCHEDULE,USER_NAME )
		SELECT A.*,B.ZEMP_NM FROM (
		SELECT AA.TRK_ITEM_SEQ,UPPER(AA.PM_AD) AS USER_AD,'PM','관리' FROM ZVTS_ITEM_MASTER AA WHERE AA.PM_AD IS NOT NULL AND PROJECT_NO = UPPER(#{PROJECT_NO}) AND AA.TRK_ITEM_SEQ = #{TRK_ITEM_SEQ}
		UNION ALL
		SELECT AA.TRK_ITEM_SEQ,UPPER(AA.BUYER_AD),'BUYER','관리' FROM ZVTS_ITEM_MASTER AA WHERE AA.BUYER_AD IS NOT NULL AND PROJECT_NO = UPPER(#{PROJECT_NO}) AND AA.TRK_ITEM_SEQ = #{TRK_ITEM_SEQ}
		UNION ALL
		SELECT AA.TRK_ITEM_SEQ,UPPER(AA.QC_AD),'QC','관리' FROM ZVTS_ITEM_MASTER AA WHERE AA.QC_AD IS NOT NULL AND PROJECT_NO = UPPER(#{PROJECT_NO}) AND AA.TRK_ITEM_SEQ = #{TRK_ITEM_SEQ}
		UNION ALL
		SELECT AA.TRK_ITEM_SEQ,UPPER(AA.EM_AD),'EM','관리' FROM ZVTS_ITEM_MASTER AA WHERE AA.EM_AD IS NOT NULL AND PROJECT_NO = UPPER(#{PROJECT_NO}) AND AA.TRK_ITEM_SEQ = #{TRK_ITEM_SEQ}
		UNION ALL
		SELECT AA.TRK_ITEM_SEQ,UPPER(AA.SM_AD),'SM','관리' FROM ZVTS_ITEM_MASTER AA WHERE AA.SM_AD IS NOT NULL AND PROJECT_NO = UPPER(#{PROJECT_NO}) AND AA.TRK_ITEM_SEQ = #{TRK_ITEM_SEQ}
		) A
		,ZVTS_EMP B
		WHERE A.USER_AD = B.AD_USER_ID
	</insert>

	<delete id="deleteIdsmSetupExceluploadInvUpdate" parameterType="java.util.Map">
    	DELETE FROM ZVTS_DESM_INVOICE DI
		WHERE DI.TRK_ITEM_SEQ = #{TRK_ITEM_SEQ}
	</delete>

	<select id="getIdsmSetupDlgItemScheduleItemEditCheck" parameterType="java.util.Map" resultType="java.util.HashMap">

		SELECT *
		  FROM ZVTS_ITEM_MASTER
		 WHERE TRK_ITEM_NAME = #{TRK_ITEM_NAME}
		   AND PROJECT_NO = #{PROJECT_NO}
		   AND TRK_ITEM_SEQ != #{TRK_ITEM_SEQ}
	</select>

	<select id="getIdsmSetupDlgInoviceSeqList" parameterType="java.util.Map" resultType="java.util.HashMap">
		SELECT DPIS.PROJECT_CODE,
		       PPA.NAME AS PROJECT_DESC,
		       DPIS.START_SEQ,
		       DPIS.END_SEQ,
		       DPIS.EXPRESSION
		  FROM DESM_PROJECT_INVOICE_SEQ DPIS,
		       PA_PROJECTS_ALL_INT PPA
		 WHERE DPIS.PROJECT_CODE = PPA.SEGMENT1
	</select>

	<update id="saveIdsmSetupDlgInoviceSeqList" parameterType="java.util.Map">
		MERGE INTO DESM_PROJECT_INVOICE_SEQ A
		USING DUAL
		ON (A.PROJECT_CODE = #{PROJECT_CODE})
		WHEN MATCHED THEN
		     UPDATE SET A.START_SEQ = #{START_SEQ},
		                A.END_SEQ = #{END_SEQ},
		                A.EXPRESSION = #{EXPRESSION},
		                A.LAST_UPDATED_BY = #{USER_AD},
		                A.LAST_UPDATE_DATE = SYSDATE
		WHEN NOT MATCHED THEN
		     INSERT
		     (A.PROJECT_CODE
		     ,A.START_SEQ
		     ,A.END_SEQ
		     ,A.EXPRESSION
		     ,A.CREATED_BY
		     ,A.CREATION_DATE
		     ,A.LAST_UPDATED_BY
		     ,A.LAST_UPDATE_DATE)
		     VALUES
		     (#{PROJECT_CODE}
		     ,#{START_SEQ}
		     ,#{END_SEQ}
		     ,#{EXPRESSION}
		     ,#{USER_AD}
		     ,SYSDATE
		     ,#{USER_AD}
		     ,SYSDATE)
    </update>

	<delete id="deleteIdsmSetupDlgInoviceSeqList" parameterType="java.util.Map">
    	DELETE FROM DESM_PROJECT_INVOICE_SEQ
		WHERE PROJECT_CODE = #{PROJECT_CODE}
	</delete>

	<select id="getIdsmSetupDlgInvEditInvInfoList" parameterType="java.util.Map" resultType="java.util.HashMap">
		SELECT PROJECT_CODE,
		       START_SEQ,
		       END_SEQ,
		       EXPRESSION,
		       LENGTH(END_SEQ) AS LENG
		  FROM DESM_PROJECT_INVOICE_SEQ
		 WHERE PROJECT_CODE = #{PROJECT_CODE}
	</select>

	<select id="getIdsmSetupDlgInvEditInvSeqList" parameterType="java.util.Map" resultType="java.util.HashMap">
		SELECT #{EXPRESSION} || LPAD(MIN(S.LV), #{LENG}, '0') AS SEQ
		  FROM (SELECT TO_NUMBER(LV) AS LV
		          FROM (SELECT LEVEL AS LV
		                  FROM DUAL
		                 CONNECT BY LEVEL <![CDATA[ <= ]]> #{END_SEQ})
		         WHERE LV >= #{START_SEQ}) S,
		        (SELECT INVOICE_NUM,
		                TO_NUMBER(REPLACE(INVOICE_NUM, #{EXPRESSION}, '')) AS RN
		           FROM (SELECT ZDI.INVOICE_NUM
	                      FROM ZVTS_ITEM_MASTER ZIM,
	                           ZVTS_DESM_INVOICE ZDI
	                     WHERE ZIM.PROJECT_NO = ZDI.PROJECT_NO
	                       AND ZIM.TRK_ITEM_SEQ = ZDI.TRK_ITEM_SEQ
	                       AND ZIM.PROJECT_NO = #{PROJECT_CODE}
					   <foreach collection="list" item="item" separator="" open="" close="">
		                 UNION ALL
		                 SELECT #{item.INVOICE_NUM} AS INVOICE_NUM
		                   FROM DUAL
					    </foreach>
		                )
		          WHERE REGEXP_INSTR(REPLACE(INVOICE_NUM, #{EXPRESSION}, ''),'[^0-9]') = 0 ) I
		 WHERE S.LV = I.RN(+)
		   AND I.INVOICE_NUM IS NULL
		ORDER BY LV
	</select>

    <select id="getIdsmBlrSchmapList" parameterType="java.util.Map" resultType="java.util.HashMap">

		   SELECT BI.DETAIL_ITEM_SEQ            ,
				  BI.DETAIL_ITEM_DESCRIPTION    ,
				  BI.LOCAL_ACTIVITY_ID          ,
				  BI.LOCAL_ACTIVITY_DESCRIPTION ,
				  BI.PROJECT_NO                 ,
				  BI.MAP_TASK_NUMBER            ,
				  BI.ATTRIBUTE1                 ,
				  BI.ATTRIBUTE2                 ,
				  BI.ATTRIBUTE3                 ,
				  BI.ATTRIBUTE4                 ,
				  BI.ATTRIBUTE5                 ,
				  BI.ATTRIBUTE6                 ,
				  BI.ATTRIBUTE7                 ,
				  BI.ATTRIBUTE8                 ,
				  BI.ATTRIBUTE9                 ,
				  BI.ATTRIBUTE10                ,
				  BI.LAST_UPDATE_DATE           ,
				  BI.LAST_UPDATED_BY            ,
				  BI.CREATION_DATE              ,
				  BI.CREATED_BY                 ,
				  (SELECT CASE WHEN COUNT(*) > 0 THEN 'Y' ELSE 'N' END
				     FROM ZVTS_MAP_BLR_ITEM BII
				    WHERE BII.PROJECT_NO = BI.PROJECT_NO) DATA_YN
		  FROM ZVTS_MAP_BLR_ITEM BI
		 WHERE 1=1
		   AND BI.PROJECT_NO = #{PROJECT_NO}
		    <if test='LOCAL_ACTIVITY_DESCRIPTION != null and LOCAL_ACTIVITY_DESCRIPTION != ""'>
		   		AND UPPER(BI.LOCAL_ACTIVITY_DESCRIPTION) LIKE '%'||UPPER(#{LOCAL_ACTIVITY_DESCRIPTION})||'%'
			</if>
		    <if test='DETAIL_ITEM_DESCRIPTION != null and DETAIL_ITEM_DESCRIPTION != ""'>
		   		AND UPPER(BI.DETAIL_ITEM_DESCRIPTION) LIKE '%'||UPPER(#{DETAIL_ITEM_DESCRIPTION})||'%'
			</if>
			<if test='MAP_TASK_NUMBER != null and MAP_TASK_NUMBER != ""'>
				AND UPPER(MAP_TASK_NUMBER) LIKE '%'||UPPER(#{MAP_TASK_NUMBER})||'%'
			</if>

			<if test='NOT_MAP_FLAG == "Y"'>
					AND  BI.MAP_TASK_NUMBER IS  NULL
			</if>
		ORDER BY BI.LOCAL_ACTIVITY_DESCRIPTION, BI.DETAIL_ITEM_DESCRIPTION
	</select>

 	<select id="getIdsmBlrSchmapInfo" parameterType="java.util.Map" resultType="java.util.HashMap">
 		   SELECT  (SELECT CASE WHEN COUNT(*) > 0 THEN 'Y' ELSE 'N' END
		              FROM ZVTS_MAP_BLR_ITEM
		       		 WHERE 1=1
		               AND PROJECT_NO = #{PROJECT_NO} ) DATA_YN,

		 		    ( SELECT COUNT(*)
		                FROM ZVTS_MAP_BLR_ITEM MII
		               WHERE 1=1
		                 AND MII.PROJECT_NO = #{PROJECT_NO}
		                 AND NOT EXISTS(SELECT 1
		                                  FROM PA_PROJECTS_INFO_V PPI,
		                                       ZVTS_ACTIVITY_LOCAL@LN_PROD_ZSHPIF  ZAL,
		                                       ZVTS_ITEM_MASTER_DETAIL_INT IMD
		                                 WHERE IMD.PROJECT_CODE      = PPI.PROJECT_NUMBER
		                                   AND IMD.LOCAL_ACTIVITY_ID = ZAL.LOCAL_ACTIVITY_ID
		                                   AND IMD.PROJECT_CODE      = MII.PROJECT_NO
		                                   AND ZAL.LOCAL_ACTIVITY_DESCRIPTION = MII.LOCAL_ACTIVITY_DESCRIPTION
		                                   AND IMD.DETAIL_ITEM_DESCRIPTION = MII.DETAIL_ITEM_DESCRIPTION )
		             )  DEL_CNT,

			         ( SELECT COUNT(*)
		                 FROM PA_PROJECTS_INFO_V PPI,
		                      ZVTS_ACTIVITY_LOCAL@LN_PROD_ZSHPIF  ZAL,
		                      ZVTS_ITEM_MASTER_DETAIL_INT IMD
		                WHERE IMD.PROJECT_CODE      = PPI.PROJECT_NUMBER
		                  AND IMD.LOCAL_ACTIVITY_ID = ZAL.LOCAL_ACTIVITY_ID
		                  AND IMD.PROJECT_CODE      = #{PROJECT_NO}
		                  AND NOT EXISTS ( SELECT 1
		                                     FROM ZVTS_MAP_BLR_ITEM MII
		                                    WHERE MII.PROJECT_NO = IMD.PROJECT_CODE
		                                      AND MII.LOCAL_ACTIVITY_DESCRIPTION = ZAL.LOCAL_ACTIVITY_DESCRIPTION
		                                      AND MII.DETAIL_ITEM_DESCRIPTION = IMD.DETAIL_ITEM_DESCRIPTION )
		             )  INS_CNT
		        FROM DUAL

 	</select>

	<select id="getIdsmSchmapList" parameterType="java.util.Map" resultType="java.util.HashMap">

    	SELECT ZIM.TRK_ITEM_NAME1          ,
               ZIM.TRK_ITEM_NAME2         ,
               ZIM.TRK_ITEM_NAME3         ,
               ZIM.TRK_ITEM_NAME4         ,
               ZIM.PROJECT_ID             ,
               ZIM.PROJECT_NO             ,
               ZIM.MAP_TASK_NUMBER        ,
               ZIM.TRK_PATH				  ,
               ZIM.LAST_UPDATE_DATE       ,
               ZIM.LAST_UPDATED_BY        ,
               ZIM.CREATION_DATE          ,
               ZIM.CREATED_BY
    	  FROM ZVTS_MAP_IDSM_ITEM ZIM
    	  WHERE 1=1
                AND ZIM.PROJECT_NO = #{PROJECT_NO}

              <if test='TRK_ITEM_NAME1 != null and TRK_ITEM_NAME1 != ""'>
                AND UPPER(TRK_ITEM_NAME1) LIKE '%'||UPPER(#{TRK_ITEM_NAME1})||'%'
			  </if>

			  <if test='TRK_ITEM_NAME2 != null and TRK_ITEM_NAME2 != ""'>
				AND UPPER(TRK_ITEM_NAME2) LIKE '%'||UPPER(#{TRK_ITEM_NAME2})||'%'
			  </if>
			  <if test='TRK_ITEM_NAME3 != null and TRK_ITEM_NAME3 != ""'>
				AND UPPER(TRK_ITEM_NAME3) LIKE '%'||UPPER(#{TRK_ITEM_NAME3})||'%'
			  </if>
			  <if test='TRK_ITEM_NAME4 != null and TRK_ITEM_NAME4 != ""'>
				AND UPPER(TRK_ITEM_NAME4) LIKE '%'||UPPER(#{TRK_ITEM_NAME4})||'%'
			  </if>
			  <if test='MAP_TASK_NUMBER != null and MAP_TASK_NUMBER != ""'>
			     AND UPPER(MAP_TASK_NUMBER) LIKE '%'||UPPER(#{MAP_TASK_NUMBER})||'%'
			  </if>

			  <if test='NOT_MAP_FLAG == "Y"'>
				AND  ZIM.MAP_TASK_NUMBER IS  NULL
			  </if>
         ORDER BY ZIM.TRK_ITEM_NAME1          ,
               ZIM.TRK_ITEM_NAME2         ,
               ZIM.TRK_ITEM_NAME3         ,
               ZIM.TRK_ITEM_NAME4

	</select>

	<select id="getIdsmSchmapInfo" parameterType="java.util.Map" resultType="java.util.HashMap">
 		   SELECT  (SELECT CASE WHEN COUNT(*) > 0 THEN 'Y' ELSE 'N' END
            FROM ZVTS_MAP_IDSM_ITEM
       WHERE 1=1
          AND PROJECT_NO = #{PROJECT_NO} ) DATA_YN,

 		            (SELECT COUNT(RR.TRK_PATH) CNT
			             FROM
			                (SELECT MII.TRK_PATH
			                          FROM ZVTS_MAP_IDSM_ITEM MII
			                         WHERE 1=1
			                           AND MII.PROJECT_NO = #{PROJECT_NO}
			                        MINUS
			                        SELECT TT.TRK_PATH
			                          FROM
			                        (SELECT SYS_CONNECT_BY_PATH(TRK_ITEM_NAME, '★') TRK_PATH ,
			                                CONNECT_BY_ISLEAF  ISLEAF
			                            FROM ZVTS_ITEM_MASTER MI
			                            WHERE 1=1
			                            CONNECT BY PRIOR MI.TRK_ITEM_SEQ = MI.TRK_ITEM_GROUP
			                            START WITH MI.TRK_ITEM_GROUP IS NULL
			                                  AND MI.PROJECT_NO = #{PROJECT_NO} ) TT
			                        WHERE TT.ISLEAF = 1) RR )  DEL_CNT,

	               (SELECT COUNT(*) CNT
	                  FROM
	                    ( SELECT TRK_ITEM_NAME1,
                             TRK_ITEM_NAME2,
                             TRK_ITEM_NAME3,
                             TRK_ITEM_NAME4,
                             TRK_PATH,
                             PROJECT_ID,
                             PROJECT_NO
                          FROM
                                (SELECT REGEXP_SUBSTR(SYS_CONNECT_BY_PATH(TRK_ITEM_NAME, '★') , '[^★]+', 1, 1) TRK_ITEM_NAME1,
                                                 REGEXP_SUBSTR(SYS_CONNECT_BY_PATH(TRK_ITEM_NAME, '★') , '[^★]+', 1, 2) TRK_ITEM_NAME2,
                                                 REGEXP_SUBSTR(SYS_CONNECT_BY_PATH(TRK_ITEM_NAME, '★') , '[^★]+', 1, 3) TRK_ITEM_NAME3,
                                                 REGEXP_SUBSTR(SYS_CONNECT_BY_PATH(TRK_ITEM_NAME, '★') , '[^★]+', 1, 4) TRK_ITEM_NAME4,
                                                 SYS_CONNECT_BY_PATH(TRK_ITEM_NAME, '★') TRK_PATH ,
                                                 MI.PROJECT_ID,
                                                 MI.PROJECT_NO,

                                        CONNECT_BY_ISLEAF  ISLEAF
                                    FROM ZVTS_ITEM_MASTER MI
                                    WHERE 1=1
                                    CONNECT BY PRIOR MI.TRK_ITEM_SEQ = MI.TRK_ITEM_GROUP
                                    START WITH MI.TRK_ITEM_GROUP IS NULL
                                          AND MI.PROJECT_NO =#{PROJECT_NO} ) TT
                      WHERE TT.ISLEAF = 1
                      MINUS
                      SELECT TRK_ITEM_NAME1,
                             TRK_ITEM_NAME2,
                             TRK_ITEM_NAME3,
                             TRK_ITEM_NAME4,
                             MII.TRK_PATH,
                             PROJECT_ID,
                             PROJECT_NO
                        FROM ZVTS_MAP_IDSM_ITEM MII
                       WHERE 1=1
                         AND MII.PROJECT_NO = #{PROJECT_NO} ) TT
                         )  INS_CNT
        FROM DUAL
	</select>

	<insert id="createIdsmSchmapList" parameterType="java.util.Map">
   		INSERT INTO ZVTS_MAP_IDSM_ITEM (  TRK_ITEM_NAME1		,
							              TRK_ITEM_NAME2		,
							              TRK_ITEM_NAME3		,
							              TRK_ITEM_NAME4		,
										  PROJECT_ID             ,
										  PROJECT_NO             ,
										  MAP_TASK_NUMBER        ,
										  TRK_PATH               ,
										  LAST_UPDATE_DATE       ,
										  LAST_UPDATED_BY        ,
										  CREATION_DATE          ,
										  CREATED_BY
								       )

			        SELECT TRK_ITEM_NAME1,
					       TRK_ITEM_NAME2,
					       TRK_ITEM_NAME3,
					       TRK_ITEM_NAME4,

					       PROJECT_ID,
					       PROJECT_NO,
					       '',
					       TRK_PATH,
					       SYSDATE,
					       #{USER_AD},
					       SYSDATE,
					       #{USER_AD}

					  FROM
					       ( SELECT REGEXP_SUBSTR(SYS_CONNECT_BY_PATH(TRK_ITEM_NAME, '★') , '[^★]+', 1, 1) TRK_ITEM_NAME1,
						       		REGEXP_SUBSTR(SYS_CONNECT_BY_PATH(TRK_ITEM_NAME, '★') , '[^★]+', 1, 2) TRK_ITEM_NAME2,
						       		REGEXP_SUBSTR(SYS_CONNECT_BY_PATH(TRK_ITEM_NAME, '★') , '[^★]+', 1, 3) TRK_ITEM_NAME3,
						       		REGEXP_SUBSTR(SYS_CONNECT_BY_PATH(TRK_ITEM_NAME, '★') , '[^★]+', 1, 4) TRK_ITEM_NAME4,
					                SYS_CONNECT_BY_PATH(TRK_ITEM_NAME, '★') TRK_PATH ,
					                MI.PROJECT_ID,
									MI.PROJECT_NO,
					                CONNECT_BY_ISLEAF  ISLEAF
						    FROM ZVTS_ITEM_MASTER MI
						    WHERE 1=1
						    CONNECT BY PRIOR MI.TRK_ITEM_SEQ = MI.TRK_ITEM_GROUP
						    START WITH MI.TRK_ITEM_GROUP IS NULL
						          AND MI.PROJECT_NO = #{PROJECT_NO} ) TT
						WHERE TT.ISLEAF = 1
	</insert>

	<update id="syncIdsmSchmapList" parameterType="java.util.Map">
		BEGIN
		    --신규건 INSERT
	   		INSERT INTO ZVTS_MAP_IDSM_ITEM (
								              TRK_ITEM_NAME1		,
								              TRK_ITEM_NAME2		,
								              TRK_ITEM_NAME3		,
								              TRK_ITEM_NAME4		,
											  PROJECT_ID             ,
											  PROJECT_NO             ,
											  MAP_TASK_NUMBER        ,
											  TRK_PATH               ,
											  LAST_UPDATE_DATE       ,
											  LAST_UPDATED_BY        ,
											  CREATION_DATE          ,
											  CREATED_BY
									       )

				     SELECT TRK_ITEM_NAME1,
			                 TRK_ITEM_NAME2,
			                 TRK_ITEM_NAME3,
			                 TRK_ITEM_NAME4,

			                 PROJECT_ID,
			                 PROJECT_NO,
			                 '',
			                 TRK_PATH,
			                 SYSDATE,
			                 #{USER_AD},
			                 SYSDATE,
			                 #{USER_AD}

			            FROM
					          ( SELECT TRK_ITEM_NAME1,
					                 TRK_ITEM_NAME2,
					                 TRK_ITEM_NAME3,
					                 TRK_ITEM_NAME4,
					                 TRK_PATH,
					                 PROJECT_ID,
					                 PROJECT_NO
					              FROM
					                    (SELECT REGEXP_SUBSTR(SYS_CONNECT_BY_PATH(TRK_ITEM_NAME, '★') , '[^★]+', 1, 1) TRK_ITEM_NAME1,
					                                     REGEXP_SUBSTR(SYS_CONNECT_BY_PATH(TRK_ITEM_NAME, '★') , '[^★]+', 1, 2) TRK_ITEM_NAME2,
					                                     REGEXP_SUBSTR(SYS_CONNECT_BY_PATH(TRK_ITEM_NAME, '★') , '[^★]+', 1, 3) TRK_ITEM_NAME3,
					                                     REGEXP_SUBSTR(SYS_CONNECT_BY_PATH(TRK_ITEM_NAME, '★') , '[^★]+', 1, 4) TRK_ITEM_NAME4,
					                                     SYS_CONNECT_BY_PATH(TRK_ITEM_NAME, '★') TRK_PATH ,
					                                     MI.PROJECT_ID,
					                                     MI.PROJECT_NO,

					                            CONNECT_BY_ISLEAF  ISLEAF
					                        FROM ZVTS_ITEM_MASTER MI
					                        WHERE 1=1
					                        CONNECT BY PRIOR MI.TRK_ITEM_SEQ = MI.TRK_ITEM_GROUP
					                        START WITH MI.TRK_ITEM_GROUP IS NULL
					                              AND MI.PROJECT_NO = #{PROJECT_NO} ) TT
					          WHERE TT.ISLEAF = 1
					          MINUS
					          SELECT TRK_ITEM_NAME1,
					                 TRK_ITEM_NAME2,
					                 TRK_ITEM_NAME3,
					                 TRK_ITEM_NAME4,
					                 MII.TRK_PATH,
					                 PROJECT_ID,
					                 PROJECT_NO
					            FROM ZVTS_MAP_IDSM_ITEM MII
					           WHERE 1=1
					             AND MII.PROJECT_NO = #{PROJECT_NO} ) TT;

				 --DELETE
				 DELETE FROM ZVTS_MAP_IDSM_ITEM MII
				  WHERE 1=1
					AND MII.TRK_PATH IN (
											SELECT MII.TRK_PATH
											  FROM ZVTS_MAP_IDSM_ITEM MII
											 WHERE 1=1
											   AND MII.PROJECT_NO = #{PROJECT_NO}
											MINUS
											SELECT TT.TRK_PATH
											  FROM
											(SELECT SYS_CONNECT_BY_PATH(TRK_ITEM_NAME, '★') TRK_PATH ,
											        CONNECT_BY_ISLEAF  ISLEAF
											    FROM ZVTS_ITEM_MASTER MI
											    WHERE 1=1
											    CONNECT BY PRIOR MI.TRK_ITEM_SEQ = MI.TRK_ITEM_GROUP
											    START WITH MI.TRK_ITEM_GROUP IS NULL
											          AND MI.PROJECT_NO = #{PROJECT_NO} ) TT
											WHERE TT.ISLEAF = 1
										);



           END;
    </update>

	<update id="saveIdsmSchmap" parameterType="java.util.Map">
 		UPDATE ZVTS_MAP_IDSM_ITEM MII
 		   SET MAP_TASK_NUMBER        = #{MAP_TASK_NUMBER},
			   LAST_UPDATE_DATE = SYSDATE,
			   LAST_UPDATED_BY = #{USER_AD}
		WHERE MII.TRK_PATH = #{TRK_PATH}
		  AND MII.PROJECT_NO = #{PROJECT_NO}
    </update>

	<update id="saveIdsmSchmapExcelUpload" parameterType="java.util.Map">
 		UPDATE ZVTS_MAP_IDSM_ITEM MII
 		   SET MAP_TASK_NUMBER        = #{MAP_TASK_NUMBER},
			   LAST_UPDATE_DATE = SYSDATE,
			   LAST_UPDATED_BY = #{USER_AD}
		WHERE 1=1
		  AND MII.PROJECT_NO = #{PROJECT_NO}

			AND TRK_ITEM_NAME1 = #{TRK_ITEM_NAME1}
			AND TRK_ITEM_NAME2 = #{TRK_ITEM_NAME2}
		  <if test='TRK_ITEM_NAME3 != null and TRK_ITEM_NAME3 != ""'>
			AND TRK_ITEM_NAME3 = #{TRK_ITEM_NAME3}
		  </if>
		  <if test='TRK_ITEM_NAME4 != null and TRK_ITEM_NAME4 != ""'>
			AND TRK_ITEM_NAME4 = #{TRK_ITEM_NAME4}
		  </if>
    </update>

	<update id="createIdsmBlrSchmapList" parameterType="java.util.Map">
   		INSERT INTO ZVTS_MAP_BLR_ITEM (   DETAIL_ITEM_SEQ            ,
										  DETAIL_ITEM_DESCRIPTION    ,
										  LOCAL_ACTIVITY_ID          ,
										  LOCAL_ACTIVITY_DESCRIPTION ,
										  PROJECT_NO                 ,
										  MAP_TASK_NUMBER        	 ,
										  LAST_UPDATE_DATE       	 ,
										  LAST_UPDATED_BY        	 ,
										  CREATION_DATE          	 ,
										  CREATED_BY
								       )

			      SELECT IMD.DETAIL_ITEM_SEQ,
				         IMD.DETAIL_ITEM_DESCRIPTION,
				         IMD.LOCAL_ACTIVITY_ID,
				         ZAL.LOCAL_ACTIVITY_DESCRIPTION,
				         IMD.PROJECT_CODE,
				         '',
				         SYSDATE,
				         #{USER_AD},
				         SYSDATE,
				         #{USER_AD}
				    FROM PA_PROJECTS_INFO_V PPI,
				         ZVTS_ACTIVITY_LOCAL@LN_PROD_ZSHPIF  ZAL,
				         ZVTS_ITEM_MASTER_DETAIL_INT IMD
				   WHERE IMD.PROJECT_CODE 	   = PPI.PROJECT_NUMBER
				     AND IMD.LOCAL_ACTIVITY_ID = ZAL.LOCAL_ACTIVITY_ID
			         AND IMD.PROJECT_CODE 	   = #{PROJECT_NO}
    </update>

    <update id="syncIdsmBlrSchmapList" parameterType="java.util.Map">
		BEGIN
		    --신규건 INSERT
	   		INSERT INTO ZVTS_MAP_BLR_ITEM (
								              DETAIL_ITEM_SEQ            ,
											  DETAIL_ITEM_DESCRIPTION    ,
											  LOCAL_ACTIVITY_ID          ,
											  LOCAL_ACTIVITY_DESCRIPTION ,
											  PROJECT_NO                 ,
											  MAP_TASK_NUMBER        	 ,
											  LAST_UPDATE_DATE       	 ,
											  LAST_UPDATED_BY        	 ,
											  CREATION_DATE          	 ,
											  CREATED_BY
									       )
				      SELECT IMD.DETAIL_ITEM_SEQ,
					         IMD.DETAIL_ITEM_DESCRIPTION,
					         IMD.LOCAL_ACTIVITY_ID,
					         ZAL.LOCAL_ACTIVITY_DESCRIPTION,
					         IMD.PROJECT_CODE,
					         '',
					         SYSDATE,
					         #{USER_AD},
					         SYSDATE,
					         #{USER_AD}
					    FROM PA_PROJECTS_INFO_V PPI,
					         ZVTS_ACTIVITY_LOCAL@LN_PROD_ZSHPIF  ZAL,
					         ZVTS_ITEM_MASTER_DETAIL_INT IMD
					   WHERE IMD.PROJECT_CODE 	   = PPI.PROJECT_NUMBER
					     AND IMD.LOCAL_ACTIVITY_ID = ZAL.LOCAL_ACTIVITY_ID
				         AND IMD.PROJECT_CODE 	   = #{PROJECT_NO}
						 AND NOT EXISTS ( SELECT 1
						    		        FROM ZVTS_MAP_BLR_ITEM MII
						    			   WHERE MII.PROJECT_NO = IMD.PROJECT_CODE
						    			     AND MII.LOCAL_ACTIVITY_DESCRIPTION = ZAL.LOCAL_ACTIVITY_DESCRIPTION
						    			     AND MII.DETAIL_ITEM_DESCRIPTION = IMD.DETAIL_ITEM_DESCRIPTION
						                 );
				 --DELETE
				 DELETE FROM ZVTS_MAP_BLR_ITEM MII
				  WHERE 1=1
					AND MII.PROJECT_NO = #{PROJECT_NO}
					AND NOT EXISTS (  SELECT 1
					    			    FROM PA_PROJECTS_INFO_V PPI,
									         ZVTS_ACTIVITY_LOCAL@LN_PROD_ZSHPIF  ZAL,
									         ZVTS_ITEM_MASTER_DETAIL_INT IMD
									   WHERE IMD.PROJECT_CODE 	   = PPI.PROJECT_NUMBER
									     AND IMD.LOCAL_ACTIVITY_ID = ZAL.LOCAL_ACTIVITY_ID
								         AND IMD.PROJECT_CODE 	   = MII.PROJECT_NO
								         AND ZAL.LOCAL_ACTIVITY_DESCRIPTION = MII.LOCAL_ACTIVITY_DESCRIPTION
					    			     AND IMD.DETAIL_ITEM_DESCRIPTION = 	MII.DETAIL_ITEM_DESCRIPTION
					                );
           END;
    </update>


	<update id="saveIdsmBlrSchmap" parameterType="java.util.Map">
 		UPDATE ZVTS_MAP_BLR_ITEM MII
 		   SET MAP_TASK_NUMBER        = #{MAP_TASK_NUMBER},
			   LAST_UPDATE_DATE = SYSDATE,
			   LAST_UPDATED_BY = #{USER_AD}
		WHERE MII.DETAIL_ITEM_SEQ = #{DETAIL_ITEM_SEQ}
		  AND MII.PROJECT_NO = #{PROJECT_NO}
	</update>

	<update id="saveIdsmBlrSchmapExcelUpload" parameterType="java.util.Map">
 		UPDATE ZVTS_MAP_BLR_ITEM MII
 		   SET MAP_TASK_NUMBER        = #{MAP_TASK_NUMBER},
			   LAST_UPDATE_DATE = SYSDATE,
			   LAST_UPDATED_BY = #{USER_AD}
		WHERE MII.LOCAL_ACTIVITY_DESCRIPTION = #{LOCAL_ACTIVITY_DESCRIPTION}
		  AND MII.DETAIL_ITEM_DESCRIPTION = #{DETAIL_ITEM_DESCRIPTION}
		  AND MII.PROJECT_NO = #{PROJECT_NO}
	</update>

	<select id="getIdsmSchmapViewList" parameterType="java.util.Map" resultType="java.util.HashMap">

	          SELECT ZIM.TRK_ITEM_NAME1          ,
		             ZIM.TRK_ITEM_NAME2         ,
		             ZIM.TRK_ITEM_NAME3         ,
		             ZIM.TRK_ITEM_NAME4         ,
		             ZIM.PROJECT_ID             ,
		             ZIM.PROJECT_NO             ,
		             ZIM.MAP_TASK_NUMBER        ,
			     (SELECT LISTAGG('[' || ZMV.PROJECT_NO || '★' || ZMV.LOCAL_ACTIVITY_DESCRIPTION || '★' || ZMV.DETAIL_ITEM_DESCRIPTION || ']' , ',' ) WITHIN GROUP (ORDER BY ZMV.PROJECT_NO, ZMV.LOCAL_ACTIVITY_DESCRIPTION, ZMV.DETAIL_ITEM_DESCRIPTION)
			       FROM    ZVTS_MAP_BLR_ITEM  ZMV
			       ,      (SELECT  ZP1.SEGMENT1      AS D_PROJECT_NO
			                      , ZP1.SEGMENT1      AS V_PROJECT_NO
			                      FROM PA_PROJECTS_ALL_INT ZP1
			                      UNION ALL
			                      SELECT PPA1.SEGMENT1                          AS D_PROJECT_NO
			                      ,      PPA.SEGMENT1                           AS V_PROJECT_NO
			                      FROM   PA_TASKS@LN_PROD_ZSHPIF                PT
			                      ,      PA_PROJECTS_ALL_INT                    PPA
			                      ,      PA_PROJECTS_ALL_INT                    PPA1
			                      ,      PA_PROJECT_CUSTOMERS@LN_PROD_ZSHPIF    PPC
			                      WHERE  PPA.PROJECT_ID                         = PPC.PROJECT_ID
			                      AND    PT.PROJECT_ID                          = PPA1.PROJECT_ID
			                      AND    PPC.RECEIVER_TASK_ID                   = PT.TASK_ID
			                      AND    PPA.SEGMENT1                           <![CDATA[<>]]> 'ZZ0001'
			                      UNION ALL
			                      SELECT PPA1.SEGMENT1                          AS D_PROJECT_NO
			                      ,      PPA.SEGMENT1                           AS V_PROJECT_NO
			                      FROM   PA_TASKS@LN_PROD_ZSHPIF                PT
			                      ,      PA_PROJECTS_ALL_INT                    PPA
			                      ,      PA_PROJECTS_ALL_INT                    PPA1
			                      WHERE  PPA.PROJECT_ID                         = PT.PROJECT_ID
			                      AND    PT.ATTRIBUTE6                          = PPA1.SEGMENT1
			                      AND    NVL(PT.ATTRIBUTE_CATEGORY,'A')         <![CDATA[<> 'INTERNAL PJT(C' || '&' || 'F)' ]]>
			                      AND    PPA.SEGMENT1                           <![CDATA[<>]]> 'ZZ0001'
			                      ) ZPI
			        WHERE ZMV.PROJECT_NO = ZPI.V_PROJECT_NO
			        AND   ZMV.MAP_TASK_NUMBER = ZIM.MAP_TASK_NUMBER
			        AND   ZPI.D_PROJECT_NO = ZIM.PROJECT_NO
			        ) AS BLR_INFO
			FROM ZVTS_MAP_IDSM_ITEM ZIM
			WHERE 1=1
			AND   ZIM.PROJECT_NO = #{PROJECT_NO}
	        <if test='TRK_ITEM_NAME1 != null and TRK_ITEM_NAME1 != ""'>
			   	   AND  UPPER(ZIM.TRK_ITEM_NAME1) LIKE '%'||UPPER(#{TRK_ITEM_NAME1})||'%'
			</if>
			<if test='TRK_ITEM_NAME2 != null and TRK_ITEM_NAME2 != ""'>
			   	   AND  UPPER(ZIM.TRK_ITEM_NAME2) LIKE '%'||UPPER(#{TRK_ITEM_NAME2})||'%'
			</if>
			<if test='TRK_ITEM_NAME3 != null and TRK_ITEM_NAME3 != ""'>
			   	   AND  UPPER(ZIM.TRK_ITEM_NAME3) LIKE '%'||UPPER(#{TRK_ITEM_NAME3})||'%'
			</if>
			<if test='TRK_ITEM_NAME4 != null and TRK_ITEM_NAME4 != ""'>
			   	   AND  UPPER(ZIM.TRK_ITEM_NAME4) LIKE '%'||UPPER(#{TRK_ITEM_NAME4})||'%'
			</if>

			<if test='MAP_TASK_NUMBER != null and MAP_TASK_NUMBER != ""'>
				  AND  UPPER(ZIM.MAP_TASK_NUMBER) LIKE '%'||UPPER(#{MAP_TASK_NUMBER})||'%'
			</if>

	  ORDER BY ZIM.TRK_ITEM_NAME1               ,
	                 ZIM.TRK_ITEM_NAME2         ,
	                 ZIM.TRK_ITEM_NAME3         ,
	                 ZIM.TRK_ITEM_NAME4

    </select>


	<select id="getIdsmProjectMgtUserList" parameterType="java.util.Map" resultType="java.util.HashMap">
		SELECT DU.USER_AD,
		       DU.USER_NAME,
		       CASE WHEN DUPA.USER_AD IS NOT NULL THEN 1 ELSE 0 END AS ALL_FLAG
		  FROM DESM_USER DU,
		       DESM_USER_PROJECT_ALL DUPA
		 WHERE DU.USER_AD = DUPA.USER_AD(+)
		   AND DU.DELEGATE_FLAG = 'N'
		<if test='USER_NAME != null and USER_NAME != ""'>
		   AND UPPER(DU.USER_NAME) LIKE '%' || UPPER(#{USER_NAME}) || '%'
		</if>
		<if test='PROJECT_NO != null and PROJECT_NO != ""'>
		   AND (DUPA.USER_AD IS NOT NULL OR
		       (EXISTS (SELECT 1 FROM DESM_USER_PROJECT DUP
		        WHERE DUP.PROJECT_CODE = #{PROJECT_NO} AND DUP.USER_AD = DU.USER_AD)))
		</if>
		ORDER BY DU.USER_NAME
    </select>

	<select id="getIdsmProjectMgtProjectList" parameterType="java.util.Map" resultType="java.util.HashMap">
		SELECT TO_CHAR(PPA.PROJECT_ID) AS PROJECT_ID,
		           PPA.SEGMENT1,
		           PPA.NAME,
		           DUP.USER_AD
		      FROM DESM_USER_PROJECT DUP,
		           PA_PROJECTS_ALL_INT PPA
		     WHERE DUP.PROJECT_CODE = PPA.SEGMENT1
		       AND DUP.USER_AD = #{USER_AD}
		ORDER BY PROJECT_ID,
		         SEGMENT1,
		         NAME
    </select>

	<select id="getIdsmSchmapViewDlgDetail" parameterType="java.util.Map" resultType="java.util.HashMap">


			      SELECT   ZMV.PROJECT_NO,
			               ZMV.LOCAL_ACTIVITY_DESCRIPTION,
			               ZMV.DETAIL_ITEM_DESCRIPTION
			       FROM    ZVTS_MAP_BLR_ITEM  ZMV
			       ,      (SELECT  ZP1.SEGMENT1      AS D_PROJECT_NO
			                      , ZP1.SEGMENT1      AS V_PROJECT_NO
			                      FROM PA_PROJECTS_ALL_INT ZP1
			                      UNION ALL
			                      SELECT PPA1.SEGMENT1                          AS D_PROJECT_NO
			                      ,      PPA.SEGMENT1                           AS V_PROJECT_NO
			                      FROM   PA_TASKS@LN_PROD_ZSHPIF                PT
			                      ,      PA_PROJECTS_ALL_INT                    PPA
			                      ,      PA_PROJECTS_ALL_INT                    PPA1
			                      ,      PA_PROJECT_CUSTOMERS@LN_PROD_ZSHPIF    PPC
			                      WHERE  PPA.PROJECT_ID                         = PPC.PROJECT_ID
			                      AND    PT.PROJECT_ID                          = PPA1.PROJECT_ID
			                      AND    PPC.RECEIVER_TASK_ID                   = PT.TASK_ID
			                      AND    PPA.SEGMENT1                           <![CDATA[<>]]> 'ZZ0001'
			                      UNION ALL
			                      SELECT PPA1.SEGMENT1                          AS D_PROJECT_NO
			                      ,      PPA.SEGMENT1                           AS V_PROJECT_NO
			                      FROM   PA_TASKS@LN_PROD_ZSHPIF                PT
			                      ,      PA_PROJECTS_ALL_INT                    PPA
			                      ,      PA_PROJECTS_ALL_INT                    PPA1
			                      WHERE  PPA.PROJECT_ID                         = PT.PROJECT_ID
			                      AND    PT.ATTRIBUTE6                          = PPA1.SEGMENT1
			                      AND    NVL(PT.ATTRIBUTE_CATEGORY,'A')         <![CDATA[<> 'INTERNAL PJT(C' || '&' || 'F)' ]]>
			                      AND    PPA.SEGMENT1                           <![CDATA[<>]]> 'ZZ0001'
			                      ) ZPI
			        WHERE ZMV.PROJECT_NO = ZPI.V_PROJECT_NO
			        AND   ZPI.D_PROJECT_NO = #{PROJECT_NO}
			        AND   ZMV.MAP_TASK_NUMBER = #{MAP_TASK_NUMBER}
			        ORDER BY ZMV.PROJECT_NO,
	                         ZMV.LOCAL_ACTIVITY_DESCRIPTION,
	                         ZMV.DETAIL_ITEM_DESCRIPTION


    </select>

    <select id="syncIdsmSchmapView" parameterType="java.util.Map"  resultType="java.util.HashMap" statementType="CALLABLE">
		 {CALL ZVTS_MAPPING_SYNC_PKG.DESM_UPDATE( #{L_ERRBUF,mode=OUT,jdbcType=VARCHAR},
		 										       #{PROJECT_NO,mode=IN,jdbcType=VARCHAR},
		 										        #{USER_AD,mode=IN,jdbcType=VARCHAR}
		 									          )
         }
	</select>

	<delete id="deleteIdsmProjectMgtUserList" parameterType="java.util.Map">
		DELETE FROM DESM_USER_PROJECT_ALL
		 WHERE USER_AD = #{P_USER_AD}
	</delete>

	<update id="updateIdsmProjectMgtUserList" parameterType="java.util.Map">
		MERGE INTO DESM_USER_PROJECT_ALL
		USING DUAL
		ON (USER_AD = #{P_USER_AD})
		WHEN NOT MATCHED THEN
		INSERT
		(USER_AD
		,CREATED_BY
		,CREATION_DATE
		,LAST_UPDATED_BY
		,LAST_UPDATE_DATE)
		VALUES
		(#{P_USER_AD}
		,#{USER_AD}
		,SYSDATE
		,#{USER_AD}
		,SYSDATE)
	</update>

	<update id="updateIdsmProjectMgtProjectList" parameterType="java.util.Map">
		MERGE INTO DESM_USER_PROJECT
		USING DUAL
		ON (USER_AD = #{P_USER_AD} AND PROJECT_CODE = #{PROJECT_CODE})
		WHEN NOT MATCHED THEN
		INSERT
		(USER_AD
		,PROJECT_ID
		,PROJECT_CODE
		,CREATED_BY
		,CREATION_DATE
		,LAST_UPDATED_BY
		,LAST_UPDATE_DATE)
		VALUES
		(#{P_USER_AD}
		,#{PROJECT_ID}
		,#{PROJECT_CODE}
		,#{USER_AD}
		,SYSDATE
		,#{USER_AD}
		,SYSDATE)
	</update>

	<delete id="deleteIdsmProjectMgt" parameterType="java.util.Map">
		DELETE FROM DESM_USER_PROJECT
		 WHERE USER_AD = #{P_USER_AD}
		   AND PROJECT_CODE = #{PROJECT_CODE}
	</delete>

	<update id="saveIdsmSetupDlgMemo" parameterType="java.util.Map">
		UPDATE ZVTS_ITEM_MASTER
		   SET REMARK = #{REMARK}
		 WHERE TRK_ITEM_SEQ = #{TRK_ITEM_SEQ}
	</update>

	<select id="getIdsmSetupDlgMemo" parameterType="java.util.Map" resultType="java.util.HashMap">
		SELECT REMARK
		  FROM ZVTS_ITEM_MASTER
		 WHERE TRK_ITEM_SEQ = #{TRK_ITEM_SEQ}
	</select>

	<select id="getIdsmSetupDlgItemScheduleInvCheck" parameterType="java.util.Map" resultType="java.util.HashMap">
		SELECT COUNT(*) AS CNT
		  FROM ZVTS_DESM_INVOICE
		 WHERE TRK_ITEM_SEQ = #{TRK_ITEM_SEQ}
	</select>

	<update id="updateIdsmProjectMgtProjectDefault" parameterType="java.util.Map">
		MERGE INTO DESM_USER_DEFAULT_PROJECT DUDP
		USING DUAL
		ON (DUDP.USER_AD = #{P_USER_AD}  AND DUDP.PROJECT_CODE = #{PROJECT_CODE})
		WHEN NOT MATCHED THEN
		INSERT
		(USER_AD
		,PROJECT_CODE
		,CREATED_BY
		,CREATION_DATE
		,LAST_UPDATED_BY
		,LAST_UPDATE_DATE)
		VALUES
		(#{P_USER_AD}
		,#{PROJECT_CODE}
		,#{USER_AD}
		,SYSDATE
		,#{USER_AD}
		,SYSDATE)
	</update>

	<select id="getIdsmProjectMgtSiteProjectList" parameterType="java.util.Map" resultType="java.util.HashMap">
		SELECT *
		  FROM (SELECT PROJECT_CODE,
		               USER_AD,
		               ROW_NUMBER() OVER(ORDER BY LAST_UPDATE_DATE) AS RN
		          FROM DESM_USER_PROJECT
		         WHERE USER_AD = #{P_USER_AD})
		 WHERE RN = 1
    </select>

	<delete id="deleteIdsmProjectMgtProjectDefault" parameterType="java.util.Map">
		DELETE FROM DESM_USER_DEFAULT_PROJECT
		 WHERE USER_AD = #{P_USER_AD}
	</delete>

	<select id="getIdsmSetupDlgItemScheduleItemPL" parameterType="java.util.Map" resultType="java.util.HashMap">
		SELECT SUM(CASE WHEN DPM.PROJECT_NO IS NULL THEN 0 ELSE 1 END) AS CNT
		  FROM ZVTS_ITEM_MASTER ZIM,
		       DESM_PACKING_MST DPM
		 WHERE ZIM.PROJECT_NO = DPM.PROJECT_NO(+)
		   AND ZIM.TRK_ITEM_NAME = DPM.TRK_ITEM_NAME(+)
		   AND ZIM.TRK_ITEM_SEQ = #{TRK_ITEM_SEQ}
    </select>

	<select id="getIdsmSetupSeq" parameterType="java.util.Map" resultType="java.util.HashMap">
		SELECT ZVTS_ITEM_MASTER_S.NEXTVAL AS SEQ
		  FROM DUAL
    </select>

    <insert id="saveIdsmSetupAuth" parameterType="java.util.Map">
		MERGE INTO ZVTS_ITEM_MASTER_AUTH
		USING DUAL
		ON (TRK_ITEM_SEQ = #{TRK_ITEM_SEQ} AND USER_AD = #{USER_AD} AND USER_JOB = #{USER_JOB})
		WHEN NOT MATCHED THEN
		INSERT
		(TRK_ITEM_SEQ
    	,USER_AD
    	,USER_NAME
    	,USER_JOB
    	,AUTH_SCHEDULE
    	,LAST_UPDATE_DATE
    	,LAST_UPDATED_BY
    	,CREATION_DATE
    	,CREATED_BY)
    	VALUES
    	(#{TRK_ITEM_SEQ}
    	,#{USER_AD}
    	,#{USER_NAME}
    	,#{USER_JOB}
    	,#{AUTH_SCHEDULE}
    	,SYSDATE
    	,#{P_USER_AD}
    	,SYSDATE
    	,#{P_USER_AD})
    </insert>

	<select id="getIdsmSetupPlCheckList" parameterType="java.util.Map" resultType="java.util.HashMap">
		SELECT *
		  FROM (SELECT ZIM.TRK_ITEM_NAME,
		              (SELECT COUNT(*)
		                 FROM DESM_PACKING_MST
		                WHERE PROJECT_NO = ZIM.PROJECT_NO
		                  AND TRK_ITEM_NAME = ZIM.TRK_ITEM_NAME ) AS PL_CNT
		          FROM ZVTS_ITEM_MASTER ZIM
		         WHERE TRK_ITEM_SEQ IN
		               (SELECT IN_ITEM.TRK_ITEM_SEQ FROM ZVTS_ITEM_MASTER IN_ITEM
		                CONNECT BY
		                  PRIOR IN_ITEM.TRK_ITEM_SEQ = IN_ITEM.TRK_ITEM_GROUP
		                 START WITH
		                  IN_ITEM.TRK_ITEM_SEQ = #{TRK_ITEM_SEQ}))
		 WHERE PL_CNT > 0
    </select>

	<select id="getIdsmSetupDlgItemScheduleItemEditSequenceCheck" parameterType="java.util.Map" resultType="java.util.HashMap">
		SELECT *
	      FROM ZVTS_ITEM_MASTER A
	     WHERE A.TRK_ITEM_NAME != #{TRK_ITEM_NAME}
	       AND A.PROJECT_NO = #{PROJECT_NO}
	       AND A.ATTRIBUTE9 = #{ATTRIBUTE9}
	</select>

	<select id="getIdsmSetupDlgItemSequenceCheckList" parameterType="java.util.Map" resultType="java.util.HashMap">
		SELECT ZIM.TRK_ITEM_SEQ,
		       ZIM.PROJECT_NO,
		       ZIM.TRK_ITEM_NAME,
		       ZIM.ATTRIBUTE10,
		       ATT.ORGN_FILE_NM,
		       (SELECT COUNT(*)
		          FROM DESM_PACKING_MST
		         WHERE PROJECT_NO = ZIM.PROJECT_NO
		           AND TRK_ITEM_NAME = ZIM.TRK_ITEM_NAME) AS PL_CNT
		  FROM ZVTS_ITEM_MASTER ZIM,
		       ZVTS_DESM_ATTACH ZDA,
		       ESAATTH ATT
		 WHERE ZIM.PROJECT_NO = ZDA.PROJECT_NO(+)
		   AND ZIM.TRK_ITEM_NAME = ZDA.TRK_ITEM_NAME(+)
		   AND ZDA.FILE_GRP_CD = ATT.GRP_CD(+)
		   AND ZIM.PROJECT_NO = #{PROJECT_NO}
		   AND ZIM.TRK_ITEM_NAME = #{TRK_ITEM_NAME}
		   AND ATT.SYS_ID(+) = 'EMRO'
		   AND ATT.STS(+) != 'D'
    </select>

	<select id="getIdsmSetupDlgItemSequenceList" parameterType="java.util.Map" resultType="java.util.HashMap">
		SELECT NVL(MAX(ATTRIBUTE9), 0) + 1 AS ATTRIBUTE9,
		       NVL(MAX(FILE_YN), 'N') AS FILE_YN
		  FROM (SELECT ZIM.TRK_ITEM_SEQ,
		               ZIM.PROJECT_NO,
		               ZIM.TRK_ITEM_NAME,
		               TO_NUMBER(ZIM.ATTRIBUTE9) AS ATTRIBUTE9,
		               ATT.ORGN_FILE_NM,
		               CASE WHEN ATT.ORGN_FILE_NM = #{ORGN_FILE_NM} THEN 'Y' ELSE 'N' END AS FILE_YN
		          FROM ZVTS_ITEM_MASTER ZIM,
		               ZVTS_DESM_ATTACH ZDA,
		               ESAATTH ATT
		         WHERE ZIM.PROJECT_NO = ZDA.PROJECT_NO(+)
		           AND ZIM.TRK_ITEM_NAME = ZDA.TRK_ITEM_NAME(+)
		           AND ZDA.FILE_GRP_CD = ATT.GRP_CD(+)
		           AND ZIM.PROJECT_NO = #{PROJECT_NO}
		           AND ZIM.ATTRIBUTE10 = #{ATTRIBUTE10}
		           AND ZIM.TRK_ITEM_SEQ != #{TRK_ITEM_SEQ}
		           AND ATT.SYS_ID(+) = 'EMRO'
		           AND ATT.STS(+) != 'D')
    </select>

	<update id="saveIdsmSetupDlgItemSequence" parameterType="java.util.Map">
		UPDATE ZVTS_ITEM_MASTER
		   SET ATTRIBUTE9 = #{ATTRIBUTE9}
		 WHERE TRK_ITEM_SEQ = #{TRK_ITEM_SEQ}
	</update>

	<delete id="deleteIdsmSetupDifferentName">
		DELETE FROM ZVTS_DESM_ATTACH
		WHERE (PROJECT_NO, TRK_ITEM_NAME, FILE_GRP_CD) IN ( SELECT
		A.PROJECT_NO ,A.TRK_ITEM_NAME , A.FILE_GRP_CD
		FROM ZVTS_DESM_ATTACH A
		LEFT OUTER JOIN ZVTS_ITEM_MASTER B ON A.TRK_ITEM_NAME = B.TRK_ITEM_NAME
		WHERE B.TRK_ITEM_NAME IS NULL)
	</delete>
	
	<select id="getIdsmTaskListBck230620" parameterType="java.util.Map" resultType="java.util.HashMap">
		/* IdsmMapper.getIdsmTaskList : PJT Task(ERP Activity) 조회 */
    	SELECT DISTINCT DPPII.PROJECT_NO
        ,      DPPII.PROJECT_NAME
        ,      DPPII.TASK_NUMBER
        ,      NVL((SELECT DESCRIPTION FROM PA_TASKS_INT WHERE PROJECT_ID = DPPII.PROJECT_ID AND TASK_NUMBER = DPPII.TASK_NUMBER), DPPII.TASK_NAME) AS TASK_NAME
        FROM DESM_PR_PO_INFO_INT DPPII
        WHERE 1=1
        AND (DPPII.PROJECT_NO = #{PROJECT_NO} OR DPPII.PROJECT_NO IN (SELECT T.INTERNAL_PROJECT_NUMBER FROM ZSHP_INTERNAL_PROJECT_INT T WHERE T.MAIN_PROJECT_NUMBER = #{PROJECT_NO}))
        <if test='SEARCH_PARAM != null and SEARCH_PARAM != ""'>
        	AND (UPPER(DPPII.TASK_NAME) LIKE '%' || UPPER(#{SEARCH_PARAM}) || '%' OR UPPER(DPPII.TASK_NUMBER) LIKE '%' || UPPER(#{SEARCH_PARAM}) || '%')
        </if>
        ORDER BY PROJECT_NO, TASK_NUMBER
    </select>
	
	<select id="getIdsmTaskList" parameterType="java.util.Map" resultType="java.util.HashMap">
		/* IdsmMapper.getIdsmTaskList : PJT Task(ERP Activity) 조회 */
    	SELECT PPAI.SEGMENT1 AS PROJECT_NO
        ,      PPAI.NAME AS PROJECT_NAME
        ,      PTI.TASK_NUMBER
        ,      NVL(PTI.DESCRIPTION, PTI.TASK_NAME) AS TASK_NAME
        FROM PA_PROJECTS_ALL_INT PPAI
        ,    PA_TASKS_INT PTI
        WHERE 1=1
        AND PPAI.PROJECT_ID = PTI.PROJECT_ID
        AND PPAI.SEGMENT1 IN (SELECT T.INTERNAL_PROJECT_NUMBER AS TT FROM ZSHP_INTERNAL_PROJECT_INT T WHERE T.MAIN_PROJECT_NUMBER = #{PROJECT_NO} UNION SELECT #{PROJECT_NO} AS TT FROM DUAL)
        <if test='SEARCH_PARAM != null and SEARCH_PARAM != ""'>
        	AND (UPPER(PTI.TASK_NUMBER) LIKE '%' || UPPER(#{SEARCH_PARAM}) || '%' OR UPPER(PTI.DESCRIPTION) LIKE '%' || UPPER(#{SEARCH_PARAM}) || '%' OR UPPER(PTI.TASK_NUMBER) LIKE '%' || UPPER(#{SEARCH_PARAM}) || '%')
        </if>
        ORDER BY PPAI.SEGMENT1, PTI.TASK_NUMBER
    </select>
    
    <select id="getIdsmPrNoList" parameterType="java.util.Map" resultType="java.util.HashMap">
		/* IdsmMapper.getIdsmPrNoList : PJT PR No. 조회 */
    	SELECT DPPII.PROJECT_NO
        ,      DPPII.PROJECT_NAME
        ,      DPPII.TASK_NUMBER
        ,      NVL((SELECT DESCRIPTION FROM PA_TASKS_INT WHERE PROJECT_ID = DPPII.PROJECT_ID AND TASK_NUMBER = DPPII.TASK_NUMBER), DPPII.TASK_NAME) AS TASK_NAME
        ,      DPPII.REQUISITION_NUM
        ,      PRHA.DESCRIPTION
        ,      DPPII.PR_STATUS
        ,      DPPII.REQUISITION_LINE_NUM
        ,      DPPII.ITEM
        ,      DPPII.ITEM_DESCRIPTION
        ,      DPPII.CATEGORY
        ,      DPPII.CATEGORY_NAME
        ,      DPPII.PR_UOM
        ,      DPPII.PR_QUANTITY
        ,      DPPII.ORGANIZATION_NAME
        ,      DPPII.REQUEST_TEAM
        ,      DPPII.REQUESTOR_NAME
        ----,      TCO.DESCRIPTION AS TCO_ITEM_CLASS
        FROM DESM_PR_PO_INFO_INT DPPII
        ,    PO_REQUISITION_HEADERS_ALL@LN_PROD_ZSHPIF PRHA
        ----,    PO_REQUISITION_LINES_ALL@LN_PROD_ZSHPIF PRLA
        ----,    (SELECT LOOKUP_CODE, MEANING, DESCRIPTION
        ----      FROM FND_LOOKUP_VALUES@LN_PROD_ZSHPIF
        ----      WHERE LOOKUP_TYPE = 'ZMFG_TCO_ITEM_CLASS'
        ----     ) TCO
        WHERE 1=1
        AND (DPPII.PROJECT_NO = #{PROJECT_NO} OR DPPII.PROJECT_NO IN (SELECT T.INTERNAL_PROJECT_NUMBER FROM ZSHP_INTERNAL_PROJECT_INT T WHERE T.MAIN_PROJECT_NUMBER = #{PROJECT_NO}))
        AND DPPII.REQUISITION_NUM = PRHA.SEGMENT1
        ----AND DPPII.REQUISITION_LINE_NUM = PRLA.LINE_NUM
        --AND DPPII.PR_STATUS NOT IN ('CANCELLED', 'INCOMPLETE', 'RETURNED')
        AND DPPII.PR_STATUS = 'APPROVED'
        ----AND PRHA.REQUISITION_HEADER_ID = PRLA.REQUISITION_HEADER_ID
        ----AND PRLA.ATTRIBUTE10 = TCO.LOOKUP_CODE(+)
        <if test='S_TASK_PARAM != null and S_TASK_PARAM != ""'>
        	AND (UPPER(DPPII.TASK_NAME) LIKE '%' || UPPER(#{S_TASK_PARAM}) || '%' OR UPPER(DPPII.TASK_NUMBER) LIKE '%' || UPPER(#{S_TASK_PARAM}) || '%')
        </if>
        <if test='S_PR_PARAM != null and S_PR_PARAM != ""'>
        	AND (UPPER(DPPII.REQUISITION_NUM) LIKE '%' || UPPER(#{S_PR_PARAM}) || '%' OR UPPER(PRHA.DESCRIPTION) LIKE '%' || UPPER(#{S_PR_PARAM}) || '%')
        </if>
        <if test='S_ITEM_PARAM != null and S_ITEM_PARAM != ""'>
        	AND (UPPER(DPPII.ITEM) LIKE '%' || UPPER(#{S_ITEM_PARAM}) || '%' OR UPPER(DPPII.ITEM_DESCRIPTION) LIKE '%' || UPPER(#{S_ITEM_PARAM}) || '%')
        </if>
        ORDER BY PROJECT_NO, TASK_NUMBER, REQUISITION_NUM, REQUISITION_LINE_NUM
    </select>
    
    <select id="getIdsmMprList" parameterType="java.util.Map" resultType="java.util.HashMap">
		/* IdsmMapper.getIdsmMprList : PJT MPR No. 조회 */
    	SELECT DMSD.MPR_NO
        ,      DMSD.PO_NO
        ,      NVL(DMP.PO_DESCRIPTION, DPI.PO_DESCRIPTION) AS PO_DESCRIPTION
        ,      NVL(DMP.PROJECT_CODE, DPI.PROJECT_CODE) AS PROJECT_NO
        ,      NVL(DMP.PROJECT_NAME, DPI.PROJECT_NAME) AS PROJECT_NAME
        ,      NVL(DMP.SUPPLIER_NUMBER, DPI.SUPPLIER_NUMBER) AS SUPPLIER_NUMBER
        ,      NVL(DMP.SUPPLIER_NAME, DPI.SUPPLIER_NAME) AS SUPPLIER_NAME
        ,      DMSD.PRODUCT_NAME
        ,      DMSD.STATUS
        ,      NVL(DMSD.MPR_SUBMISSION, 1) AS MPR_SUBMISSION
        ,      DMSM.USER_AD AS MANAGER
        FROM DESM_MPR_SETUP_DATE DMSD
        ,    DESM_MPR_SETUP_MAIL DMSM
        ,    DESM_PO_HEADER_INT DPI
        ,    DESM_MANUAL_PO DMP
        WHERE 1=1
        AND DMSD.MPR_NO = DMSM.MPR_NO
        AND DMSM.EXPEDITER_YN = 'Y'
        AND DMSD.PO_NO = DPI.PO_NO(+)
        AND DMSD.PO_NO = DMP.PO_NO(+)
        AND ( (DPI.PROJECT_CODE = #{PROJECT_NO} OR DPI.PROJECT_CODE IN (SELECT T.INTERNAL_PROJECT_NUMBER FROM ZSHP_INTERNAL_PROJECT_INT T WHERE T.MAIN_PROJECT_NUMBER = #{PROJECT_NO}))
        OR    (DMP.PROJECT_CODE = #{PROJECT_NO} OR DMP.PROJECT_CODE IN (SELECT T.INTERNAL_PROJECT_NUMBER FROM ZSHP_INTERNAL_PROJECT_INT T WHERE T.MAIN_PROJECT_NUMBER = #{PROJECT_NO})) )
        <if test='S_PO_PARAM != null and S_PO_PARAM != ""'>
        	AND (UPPER(DMSD.PO_NO) LIKE '%' || UPPER(#{S_PO_PARAM}) || '%' OR UPPER(NVL(DMP.PO_DESCRIPTION, DPI.PO_DESCRIPTION)) LIKE '%' || UPPER(#{S_PO_PARAM}) || '%')
        </if>
        <if test='S_MPR_PARAM != null and S_MPR_PARAM != ""'>
        	AND UPPER(DMSD.MPR_NO) LIKE '%%' || UPPER(#{S_MPR_PARAM}) || '%'
        </if>
        <if test='S_SUPPLIER_PARAM != null and S_SUPPLIER_PARAM != ""'>
        	AND (UPPER(NVL(DMP.SUPPLIER_NUMBER, DPI.SUPPLIER_NUMBER)) LIKE '%' || UPPER(#{S_SUPPLIER_PARAM}) || '%' OR UPPER(NVL(DMP.SUPPLIER_NAME, DPI.SUPPLIER_NAME)) LIKE '%' || UPPER (#{S_SUPPLIER_PARAM}) || '%')
        </if>
        ORDER BY PO_NO, MPR_NO
    </select>
    
    <select id="getIdsmSetupT" parameterType="java.util.Map" resultType="java.util.HashMap">
    	/* IdsmMapper.getIdsmSetupT : 기자재 일정관리 Main Grid 조회  */
		WITH WITH_ZVTS_EMP AS (SELECT * FROM ZVTS_EMP)
        SELECT ZIM.TRK_ITEM_SEQ
        ,      ZIM.TRK_ITEM_NAME
        ,      NVL(TRK_ITEM_GROUP, -1) AS TRK_ITEM_GROUP
        ,      ORGANIZATION_ID
        ,      ZIM.PROJECT_ID
        ,      ZIM.PROJECT_NO
        ,      ZIM.REMARK
        ,      PA.NAME AS PROJECT_NAME
        --,      TASK_ID
        ,      ZIM.TASK_ID
        ,      ZIM.TASK_NUMBER
        --,      (SELECT PT.TASK_NAME FROM PA_TASKS_INT PT WHERE PT.PROJECT_ID = ZIM.PROJECT_ID AND PT.TASK_ID = ZIM.TASK_ID) TASK_NAME
        ,      PTI.TASK_NAME
        ,      BATCH
        ,      OFFSHORE
        ,      PRIMAVERA_ID
        ,      TO_CHAR(MPS_PLAN_DATE, 'YYYY/MM/DD') AS MPS_PLAN_DATE
        ,      TO_CHAR(MPS_EXPECTED_DATE, 'YYYY/MM/DD') AS MPS_EXPECTED_DATE
        ,      TO_CHAR(MPS_ACTUAL_DATE, 'YYYY/MM/DD') AS MPS_ACTUAL_DATE
        ,      PURCHASE_DURATION
        ,      TO_CHAR(TE_PLAN_DATE, 'YYYY/MM/DD') AS TE_PLAN_DATE
        ,      TO_CHAR(TE_EXPECTED_DATE, 'YYYY/MM/DD') AS TE_EXPECTED_DATE
        ,      TO_CHAR(TE_ACTUAL_DATE, 'YYYY/MM/DD') AS TE_ACTUAL_DATE
        ,      TO_CHAR(PO_PLAN_DATE, 'YYYY/MM/DD') AS PO_PLAN_DATE
        ,      TO_CHAR(PO_EXPECTED_DATE, 'YYYY/MM/DD') AS PO_EXPECTED_DATE
        ,      TO_CHAR(PO_ATCUAL_DATE, 'YYYY/MM/DD') AS PO_ATCUAL_DATE
        ,      MAKE_DURATION
        ,      PROGRESS
        ,      TO_CHAR(CARGO_PLAN_DATE, 'YYYY/MM/DD') AS CARGO_PLAN_DATE
        ,      TO_CHAR(CARGO_EXPECTED_DATE, 'YYYY/MM/DD') AS CARGO_EXPECTED_DATE
        ,      TO_CHAR(CARGO_PROMISED_DATE, 'YYYY/MM/DD') AS CARGO_PROMISED_DATE
        ,      TO_CHAR(CARGO_ACTUAL_DATE, 'YYYY/MM/DD') AS CARGO_ACTUAL_DATE
        ,      SHIPMENT_DURATION
        ,      TO_CHAR(FOB_PLAN_DATE, 'YYYY/MM/DD') AS FOB_PLAN_DATE
        ,      TO_CHAR(FOB_EXPECTED_DATE, 'YYYY/MM/DD') AS FOB_EXPECTED_DATE
        ,      TO_CHAR(FOB_ACTUAL_DATE, 'YYYY/MM/DD') AS FOB_ACTUAL_DATE
        ,      TRANS_DURATION
        ,      TO_CHAR(ONSITE_PLAN_DATE, 'YYYY/MM/DD') AS ONSITE_PLAN_DATE
        ,      TO_CHAR(ONSITE_EXPECTED_DATE, 'YYYY/MM/DD') AS ONSITE_EXPECTED_DATE
        ,      TO_CHAR(ONSITE_ACTUAL_DATE, 'YYYY/MM/DD') AS ONSITE_ACTUAL_DATE
        ,      PAYMENT_MILESTONE
        ,      TRK_ITEM_DEFAULT
        ,      IAV.PM_AD
        ,      IAV.PM_NAME
        ,      IAV.EM_AD
        ,      IAV.EM_NAME
        ,      IAV.BUYER_AD
        ,      IAV.BUYER_NAME
        ,      IAV.QC_AD
        ,      IAV.QC_NAME
        ,      IAV.SM_AD
        ,      IAV.SM_NAME
        ,      CASE WHEN CARGO_PLAN_DATE <![CDATA[<]]> CARGO_EXPECTED_DATE THEN 'Y' ELSE 'N' END AS ISSUE_FLAG
        ,      ZIM.INVOICE_NUM
        ,      ZIM.ATTRIBUTE1
        ,      ZIM.ATTRIBUTE2
        ,      ZIM.ATTRIBUTE3
        ,      ZIM.ATTRIBUTE4
        ,      ZIM.ATTRIBUTE5
        ,      ZIM.ATTRIBUTE6
        ,      ZIM.ATTRIBUTE7
        ,      ZIM.ATTRIBUTE8
        ,      ZIM.ATTRIBUTE9
        ,      ZIM.ATTRIBUTE10
        ,      ZIM.LAST_UPDATE_DATE
        ,      ZIM.LAST_UPDATED_BY
        ,      ZIM.CREATION_DATE
        ,      ZIM.CREATED_BY
        ,      EMP_PM.ZORG_ID AS PM_DEPT_CODE
        ,      EMP_PM.ZORG_NM AS PM_DEPT_NAME
        ,      EMP_EM.ZORG_ID AS EM_DEPT_CODE
        ,      EMP_EM.ZORG_NM AS EM_DEPT_NAME
        ,      EMP_BUYER.ZORG_ID AS BUYER_DEPT_CODE
        ,      EMP_BUYER.ZORG_NM AS BUYER_DEPT_NAME
        ,      EMP_QC.ZORG_ID AS QC_DEPT_CODE
        ,      EMP_QC.ZORG_NM AS QC_DEPT_NAME
        ,      CASE WHEN CNT = 1 THEN AA.INVOICE_NUM
                    WHEN CNT > 1 THEN AA.INVOICE_NUM || ' 외 ' || AA.CALC_CNT  || '건'
                    ELSE ''
               END SEL_INVOICE_NUM
        ,      (SELECT CASE WHEN COUNT(*) = 0 THEN NULL ELSE COUNT(*) END
                FROM ESAATTH ATT
                WHERE 1=1
                AND ATT.GRP_CD  = ZDA.FILE_GRP_CD
                AND ATT.STS <![CDATA[<>]]> 'D'
               ) ATTH_CNT
        ,      ZDA.FILE_GRP_CD
        ,      (SELECT COUNT(*)
                FROM DESM_PACKING_MST
                WHERE PROJECT_NO = ZIM.PROJECT_NO
                AND TRK_ITEM_NAME = ZIM.TRK_ITEM_NAME
               ) AS PL_CNT
        ,      TO_CHAR(TRANS_PLAN_DATE, 'YYYY/MM/DD') AS TRANS_PLAN_DATE
        ,      TO_CHAR(TRANS_EXPECTED_DATE, 'YYYY/MM/DD') AS TRANS_EXPECTED_DATE
        ,      TO_CHAR(TRANS_ACTUAL_DATE, 'YYYY/MM/DD') AS TRANS_ACTUAL_DATE
        ,      TO_CHAR(DPPII.RFQ_1R_FROM, 'YYYY/MM/DD HH24:MI:SS') AS RFQ_1R_FROM
        ,      TO_CHAR(DPPII.RFQ_1R_TO, 'YYYY/MM/DD HH24:MI:SS') AS RFQ_1R_TO
        ,      TO_CHAR(DPPII.RFQ_2R_FROM, 'YYYY/MM/DD HH24:MI:SS') AS RFQ_2R_FROM
        ,      TO_CHAR(DPPII.RFQ_2R_TO, 'YYYY/MM/DD HH24:MI:SS') AS RFQ_2R_TO
        ,      TO_CHAR(DPPII.RFQ_3R_FROM, 'YYYY/MM/DD HH24:MI:SS') AS RFQ_3R_FROM
        ,      TO_CHAR(DPPII.RFQ_3R_TO, 'YYYY/MM/DD HH24:MI:SS') AS RFQ_3R_TO
        ,      TO_CHAR(DPPII.RFQ_4R_FROM, 'YYYY/MM/DD HH24:MI:SS') AS RFQ_4R_FROM
		,      TO_CHAR(DPPII.RFQ_4R_TO, 'YYYY/MM/DD HH24:MI:SS') AS RFQ_4R_TO
        ,      DPPII.PO_NUM
        ,      DPPII.PO_DESCRIPTION
        ,      DPPII.PO_REVISION_NUM
        ,      DPPII.RELEASE_NUM
        ,      DPPII.DOC_TYPE
        ,      DPPII.FOB
        ,      DPPII.SUPPLIER_NUMBER
        ,      DPPII.SUPPLIER_NAME
        ,      DPPII.PO_LINE_NUM
        ,      DPPII.PROMISED_DATE
        ,      DPPII.CLOSED_CODE
        ,      MG.MPR_NO
        ,      MG.MDS_P
        ,      MG.MDS_A
        ,      MG.MDA_P
        ,      MG.MDA_A
        ,      MG.MTL_P
        ,      MG.MTL_A
        ,      MG.MFG_P
        ,      MG.MFG_A
        ,      MG.FAT_P
        ,      MG.FAT_A
        ,      MG.CAR_P
        ,      MG.CAR_A
        ,      TO_CHAR(MFG_PLAN_DATE, 'YYYY/MM/DD') AS MFG_PLAN_DATE
        ,      TO_CHAR(MFG_EXPECTED_DATE, 'YYYY/MM/DD') AS MFG_EXPECTED_DATE
        ,      TO_CHAR(MFG_ACTUAL_DATE, 'YYYY/MM/DD') AS MFG_ACTUAL_DATE
        ,	   TE_DURATION
        ,      CARGO_DURATION
        ,      ONSITE_DURATION
        ,	   CON_PROJECT_NO
        ,      CASE WHEN ZIM.TASK_NUMBER IS NULL THEN 0
                    WHEN ZIM.TASK_NUMBER IS NOT NULL AND ZIM.ATTRIBUTE1 IS NOT NULL THEN 0
                    WHEN ZIM.TASK_NUMBER IS NOT NULL AND ZIM.ATTRIBUTE1 IS NULL THEN (SELECT COUNT(1) FROM DESM_PR_PO_INFO_INT WHERE PROJECT_NO = NVL(ZIM.CON_PROJECT_NO, ZIM.PROJECT_NO) AND TASK_NUMBER = ZIM.TASK_NUMBER AND PR_STATUS = 'APPROVED' AND NVL(PR_LINE_CANCEL_FLAG, 'Cancelled') != 'Cancelled')
                    ELSE 0
               END AS IS_PR_MAPPED
        ,	   CASE WHEN DPPII.PO_NUM IS NULL THEN 0
        	   WHEN DPPII.PO_NUM IS NOT NULL AND ZIM.ATTRIBUTE5 IS NOT NULL THEN 0
        	   WHEN DPPII.PO_NUM IS NOT NULL AND ZIM.ATTRIBUTE5 IS NULL THEN (SELECT COUNT(1) FROM DESM_MPR_HEADER WHERE PO_NO = DPPII.PO_NUM AND STATUS = 'Confirmed')
        	   ELSE 0
        	   END AS IS_MPR_MAPPED  
        FROM ZVTS_ITEM_MASTER ZIM
        ,    PA_PROJECTS_ALL_INT PA
        ,    WITH_ZVTS_EMP EMP_PM
        ,    WITH_ZVTS_EMP EMP_EM
        ,    WITH_ZVTS_EMP EMP_BUYER
        ,    WITH_ZVTS_EMP EMP_QC
        ,    WITH_ZVTS_EMP EMP_SM
        ,    ZVTS_ITEM_ADMIN_V IAV
        ,    ZVTS_DESM_ATTACH ZDA
        ,    (SELECT DI.TRK_ITEM_SEQ
              ,      COUNT(*) CNT
              ,      COUNT(*) - 1 CALC_CNT
              ,      MAX(DI.INVOICE_NUM) INVOICE_NUM
              FROM ZVTS_DESM_INVOICE DI
              WHERE 1=1 --DI.TRK_ITEM_SEQ = ZIM.TRK_ITEM_SEQ
              GROUP BY DI.TRK_ITEM_SEQ
             ) AA
        ,    DESM_PR_PO_INFO_INT DPPII
        ,    DESM_MPR_VTS_DATE_V MG
        ,    (SELECT PT.PROJECT_ID
              ,      PT.TASK_ID
              ,      PT.TASK_NAME
              FROM PA_TASKS_INT PT
             ) PTI
        WHERE 1=1
        AND ZIM.PROJECT_ID = PA.PROJECT_ID
        AND ZIM.TRK_ITEM_SEQ = IAV.TRK_ITEM_SEQ(+)
        AND IAV.PM_AD = EMP_PM.AD_USER_ID(+)
        AND IAV.EM_AD = EMP_EM.AD_USER_ID(+)
        AND IAV.BUYER_AD = EMP_BUYER.AD_USER_ID(+)
        AND IAV.QC_AD = EMP_QC.AD_USER_ID(+)
        AND IAV.SM_AD = EMP_SM.AD_USER_ID(+)
        AND ZIM.TRK_ITEM_SEQ = AA.TRK_ITEM_SEQ(+)
        AND ZIM.PROJECT_NO = ZDA.PROJECT_NO(+)
        AND ZIM.TRK_ITEM_NAME = ZDA.TRK_ITEM_NAME(+)
        AND ZIM.ATTRIBUTE1 = DPPII.REQUISITION_NUM(+)
        AND ZIM.ATTRIBUTE4 = DPPII.REQUISITION_LINE_NUM(+)
        AND ZIM.ATTRIBUTE5 = MG.MPR_NO(+)
        AND ZIM.PROJECT_ID = PTI.PROJECT_ID(+)
        AND ZIM.TASK_ID = PTI.TASK_ID(+)
    	CONNECT BY ZIM.TRK_ITEM_SEQ = PRIOR ZIM.TRK_ITEM_GROUP
        START WITH ZIM.TRK_ITEM_SEQ IN
    	(
         SELECT
         DISTINCT ZIM_IN.TRK_ITEM_SEQ
         FROM ZVTS_ITEM_MASTER ZIM_IN
         ,    PA_PROJECTS_ALL_INT PA
         ,    PA_PROJECTS_ALL_INT PA_INTER
         ,    ZVTS_ITEM_MASTER_AUTH IAV
         ,    ZVTS_EMP EMP
         ,    ZVTS_DESM_INVOICE DI
         WHERE 1=1
         AND ZIM_IN.PROJECT_ID = PA.PROJECT_ID
         AND ZIM_IN.TRK_ITEM_SEQ = IAV.TRK_ITEM_SEQ(+)
         AND ZIM_IN.ATTRIBUTE8 = PA_INTER.SEGMENT1(+)
         AND IAV.USER_AD = EMP.AD_USER_ID(+)
         AND ZIM_IN.TRK_ITEM_SEQ = DI.TRK_ITEM_SEQ(+)
         <if test='VIEW_TYPE == "INTER"'>
         	AND ZIM_IN.PROJECT_NO LIKE 'Z%'
         	<if test='KEY1 == "project_name" and VALUE1 != null and VALUE1 != ""'> AND UPPER(PA.NAME) LIKE UPPER(#{VALUE1})||'%'</if>
		 	<if test='KEY1 == "project_no" and VALUE1 != null and VALUE1 != ""'> AND ZIM_IN.PROJECT_NO = UPPER(#{VALUE1})</if>
		 	<if test='KEY4 == "project_name" and VALUE4 != null and VALUE4 != ""'> AND UPPER(PA.NAME) LIKE UPPER(#{VALUE4})||'%'</if>
		 	<if test='KEY4 == "project_no" and VALUE4 != null and VALUE4 != ""'> AND ZIM_IN.PROJECT_NO = UPPER(#{VALUE4})</if>
		 </if>
		 <if test='VIEW_TYPE != "INTER"'>
		 	<if test='KEY1 == "project_name" and VALUE1 != null and VALUE1 != ""'> AND UPPER(PA.NAME) LIKE UPPER(#{VALUE1})||'%'</if>
		 	<if test='KEY1 == "project_no" and VALUE1 != null and VALUE1 != ""'> AND ZIM_IN.PROJECT_NO = UPPER(#{VALUE1})</if>
			<if test='KEY4 == "project_name" and VALUE4 != null and VALUE4 != ""'> AND UPPER(PA.NAME) LIKE UPPER(#{VALUE4})||'%'</if>
		 	<if test='KEY4 == "project_no" and VALUE4 != null and VALUE4 != ""'> AND ZIM_IN.PROJECT_NO = UPPER(#{VALUE4})</if>
		 </if>
		 <if test='KEY1 == "item" and VALUE1 != null and VALUE1 != ""'> AND UPPER(TRK_ITEM_NAME) LIKE '%' || UPPER(#{VALUE1})||'%'</if>
		 <if test='KEY1 == "pm" and VALUE1 != null and VALUE1 != ""'> AND (IAV.PM_AD LIKE  '%' ||UPPER(#{VALUE1})||'%' OR IAV.PM_NAME LIKE  '%' ||UPPER(#{VALUE1})||'%')</if>
		 <if test='KEY1 == "em" and VALUE1 != null and VALUE1 != ""'> AND (IAV.EM_AD LIKE  '%' ||UPPER(#{VALUE1})||'%' OR IAV.EM_NAME LIKE  '%' ||UPPER(#{VALUE1})||'%')</if>
		 <if test='KEY1 == "buyer" and VALUE1 != null and VALUE1 != ""'> AND (IAV.BUYER_AD LIKE  '%' ||UPPER(#{VALUE1})||'%' OR IAV.BUYER_NAME LIKE  '%' ||UPPER(#{VALUE1})||'%')</if>
		 <if test='KEY1 == "qc" and VALUE1 != null and VALUE1 != ""'> AND (IAV.QC_AD LIKE  '%' ||UPPER(#{VALUE1})||'%' OR IAV.QC_NAME LIKE  '%' ||UPPER(#{VALUE1})||'%')</if>
		 <if test='KEY1 == "sm" and VALUE1 != null and VALUE1 != ""'> AND (IAV.SM_AD LIKE  '%' ||UPPER(#{VALUE1})||'%' OR IAV.SM_NAME LIKE  '%' ||UPPER(#{VALUE1})||'%')</if>
		 <if test='KEY1 == "attribute7" and VALUE1 != null and VALUE1 != ""'> AND UPPER(ZIM_IN.ATTRIBUTE7) LIKE '%' || UPPER(#{VALUE1})||'%'</if>
		 <if test='KEY1 == "attribute3" and VALUE1 != null and VALUE1 != ""'> AND UPPER(ZIM_IN.ATTRIBUTE3) LIKE '%' || UPPER(#{VALUE1})||'%'</if>
		 <if test='KEY1 == "attribute10" and VALUE1 != null and VALUE1 != ""'> AND UPPER(ZIM_IN.ATTRIBUTE10) LIKE '%' || UPPER(#{VALUE1})||'%'</if>
		 <if test='KEY1 == "attribute6" and VALUE1 != null and VALUE1 != ""'> AND UPPER(ZIM_IN.ATTRIBUTE6) LIKE '%' || UPPER(#{VALUE1})||'%'</if>
		 <if test='KEY1 == "invoice_num" and VALUE1 != null and VALUE1 != ""'> AND UPPER(DI.INVOICE_NUM) LIKE '%' || UPPER(#{VALUE1})||'%'</if>
		 <if test='KEY4 == "item" and VALUE4 != null and VALUE4 != ""'> AND UPPER(TRK_ITEM_NAME) LIKE '%' || UPPER(#{VALUE4})||'%'</if>
		 <if test='KEY4 == "pm" and VALUE4 != null and VALUE4 != ""'> AND USER_JOB = 'PM' AND UPPER(USER_NAME) LIKE UPPER(#{VALUE4})||'%'</if>
		 <if test='KEY4 == "em" and VALUE4 != null and VALUE4 != ""'> AND USER_JOB = 'EM' AND UPPER(USER_NAME) LIKE UPPER(#{VALUE4})||'%'</if>
		 <if test='KEY4 == "buyer" and VALUE4 != null and VALUE4 != ""'> AND USER_JOB = 'BUYER' AND UPPER(USER_NAME) LIKE UPPER(#{VALUE4})||'%' </if>
		 <if test='KEY4 == "qc" and VALUE4 != null and VALUE4 != ""'> AND USER_JOB='QC' AND UPPER(USER_NAME) LIKE UPPER(#{VALUE4})||'%'</if>
		 <if test='KEY4 == "sm" and VALUE4 != null and VALUE4 != ""'> AND USER_JOB='SM' AND UPPER(USER_NAME) LIKE UPPER(#{VALUE4})||'%'</if>
		 <if test='KEY4 == "attribute7" and VALUE4 != null and VALUE4 != ""'> AND UPPER(ZIM_IN.ATTRIBUTE7) LIKE '%' || UPPER(#{VALUE4})||'%'</if>
		 <if test='KEY4 == "attribute3" and VALUE4 != null and VALUE4 != ""'> AND UPPER(ZIM_IN.ATTRIBUTE3) LIKE '%' || UPPER(#{VALUE4})||'%'</if>
		 <if test='KEY4 == "attribute10" and VALUE4 != null and VALUE4 != ""'> AND UPPER(ZIM_IN.ATTRIBUTE10) LIKE '%' || UPPER(#{VALUE4})||'%'</if>
		 <if test='KEY4 == "attribute6" and VALUE4 != null and VALUE4 != ""'> AND UPPER(ZIM_IN.ATTRIBUTE6) LIKE '%' || UPPER(#{VALUE4})||'%'</if>
		 <if test='KEY4 == "invoice_num" and VALUE4 != null and VALUE4 != ""'> AND UPPER(DI.INVOICE_NUM) LIKE '%' || UPPER(#{VALUE4})||'%'</if>
		 <if test='KEY3 == "plan" '>
		 	<if test='(VALUE2 != null and VALUE2 !="") or (VALUE3 != null and VALUE3 !="")'>
		 		<if test='KEY2 == "mps"'> AND MPS_PLAN_DATE BETWEEN TO_DATE(NVL(#{VALUE2},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE3},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 		<if test='KEY2 == "po"'> AND PO_PLAN_DATE BETWEEN TO_DATE(NVL(#{VALUE2},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE3},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 		<if test='KEY2 == "cargo"'> AND CARGO_PLAN_DATE BETWEEN TO_DATE(NVL(#{VALUE2},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE3},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 		<if test='KEY2 == "fob"'> AND FOB_PLAN_DATE BETWEEN TO_DATE(NVL(#{VALUE2},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE3},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 		<if test='KEY2 == "onsite"'> AND ONSITE_PLAN_DATE BETWEEN TO_DATE(NVL(#{VALUE2},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE3},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 	</if>
		 </if>
		 <if test='KEY3 == "expected"'>
		 	<if test='(VALUE2 != null and VALUE2 !="") or (VALUE3 != null and VALUE3 !="")'>
		 		<if test='KEY2 == "mps"'> AND MPS_EXPECTED_DATE BETWEEN TO_DATE(NVL(#{VALUE2},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE3},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 		<if test='KEY2 == "po"'> AND PO_EXPECTED_DATE BETWEEN TO_DATE(NVL(#{VALUE2},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE3},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 		<if test='KEY2 == "cargo"'> AND CARGO_EXPECTED_DATE BETWEEN TO_DATE(NVL(#{VALUE2},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE3},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 		<if test='KEY2 == "fob"'> AND FOB_EXPECTED_DATE BETWEEN TO_DATE(NVL(#{VALUE2},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE3},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 		<if test='KEY2 == "onsite"'> AND ONSITE_EXPECTED_DATE BETWEEN TO_DATE(NVL(#{VALUE2},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE3},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 	</if>
		 </if>
		 <if test='KEY3 == "actual"'>
		 	<if test='(VALUE2 != null and VALUE2 !="") or (VALUE3 != null and VALUE3 !="")'>
		 		<if test='KEY2 == "mps"'> AND MPS_ACTUAL_DATE BETWEEN TO_DATE(NVL(#{VALUE2},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE3},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 		<if test='KEY2 == "po"'> AND PO_ACTUAL_DATE BETWEEN TO_DATE(NVL(#{VALUE2},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE3},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 		<if test='KEY2 == "cargo"'> AND CARGO_ACTUAL_DATE BETWEEN TO_DATE(NVL(#{VALUE2},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE3},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 		<if test='KEY2 == "fob"'> AND FOB_ACTUAL_DATE BETWEEN TO_DATE(NVL(#{VALUE2},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE3},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 		<if test='KEY2 == "onsite"'> AND ONSITE_ACTUAL_DATE BETWEEN TO_DATE(NVL(#{VALUE2},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE3},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 	</if>
		 </if>
		 <if test='KEY6 == "plan"'>
		 	<if test='(VALUE5 != null and VALUE5 !="") or (VALUE6 != null and VALUE6 !="")'>
		 		<if test='KEY5 == "mps"'> AND MPS_PLAN_DATE BETWEEN TO_DATE(NVL(#{VALUE5},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE6},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 		<if test='KEY5 == "po"'> AND PO_PLAN_DATE BETWEEN TO_DATE(NVL(#{VALUE5},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE6},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 		<if test='KEY5 == "cargo"'> AND CARGO_PLAN_DATE BETWEEN TO_DATE(NVL(#{VALUE5},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE6},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 		<if test='KEY5 == "fob"'> AND FOB_PLAN_DATE BETWEEN TO_DATE(NVL(#{VALUE5},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE6},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 		<if test='KEY5 == "onsite"'> AND ONSITE_PLAN_DATE BETWEEN TO_DATE(NVL(#{VALUE5},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE6},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 	</if>
		 </if>
		 <if test='KEY6 == "expected"'>
		 	<if test='(VALUE5 != null and VALUE5 !="") or (VALUE6 != null and VALUE6 !="")'>
		 		<if test='KEY5 == "mps"'> AND MPS_PLAN_DATE BETWEEN TO_DATE(NVL(#{VALUE5},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE6},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 		<if test='KEY5 == "po"'> AND PO_EXPECTED_DATE BETWEEN TO_DATE(NVL(#{VALUE5},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE6},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 		<if test='KEY5 == "cargo"'>	AND CARGO_EXPECTED_DATE BETWEEN TO_DATE(NVL(#{VALUE5},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE6},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 		<if test='KEY5 == "fob"'> AND FOB_EXPECTED_DATE BETWEEN TO_DATE(NVL(#{VALUE5},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE6},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 		<if test='KEY5 == "onsite"'> AND ONSITE_EXPECTED_DATE BETWEEN TO_DATE(NVL(#{VALUE5},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE6},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 	</if>
		 </if>
		 <if test='KEY6 == "actual"'>
		 	<if test='(VALUE5 != null and VALUE5 !="") or (VALUE6 != null and VALUE6 !="")'>
		 		<if test='KEY5 == "mps"'> AND MPS_ACTUAL_DATE BETWEEN TO_DATE(NVL(#{VALUE5},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE6},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 		<if test='KEY5 == "po"'> AND PO_ACTUAL_DATE BETWEEN TO_DATE(NVL(#{VALUE5},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE6},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 		<if test='KEY5 == "cargo"'> AND CARGO_ACTUAL_DATE BETWEEN TO_DATE(NVL(#{VALUE5},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE6},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 		<if test='KEY5 == "fob"'> AND FOB_ACTUAL_DATE BETWEEN TO_DATE(NVL(#{VALUE5},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE6},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 		<if test='KEY5 == "onsite"'> AND ONSITE_ACTUAL_DATE BETWEEN TO_DATE(NVL(#{VALUE5},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE6},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 	</if>
		 </if>
		 <if test='ISSUE_CHECK == "Y"'>
		 	AND (CARGO_ACTUAL_DATE IS NULL AND CARGO_PLAN_DATE <![CDATA[<]]> CARGO_EXPECTED_DATE
		 		 OR (PO_ATCUAL_DATE IS NULL AND PO_PLAN_DATE <![CDATA[<]]> PO_EXPECTED_DATE)
		 		 OR (MPS_ACTUAL_DATE IS NULL AND MPS_PLAN_DATE <![CDATA[<]]> MPS_EXPECTED_DATE)
		 		 OR (FOB_ACTUAL_DATE IS NULL AND FOB_PLAN_DATE <![CDATA[<]]> FOB_EXPECTED_DATE)
		 		 OR (ONSITE_ACTUAL_DATE IS NULL AND ONSITE_PLAN_DATE <![CDATA[<]]> ONSITE_EXPECTED_DATE)
		 		)
		 </if>
		 <if test='OFFSHORE != null and OFFSHORE !=""'> AND OFFSHORE = #{OFFSHORE}</if>
		 <if test='PROJECT_NO != ""'> AND ZIM_IN.PROJECT_NO = UPPER(#{PROJECT_NO})</if>
		)
		UNION
        SELECT ZIM.TRK_ITEM_SEQ
        ,      ZIM.TRK_ITEM_NAME
        ,      NVL(TRK_ITEM_GROUP, -1) AS TRK_ITEM_GROUP
        ,      ORGANIZATION_ID
        ,      ZIM.PROJECT_ID
        ,      ZIM.PROJECT_NO
        ,      ZIM.REMARK
        ,      PA.NAME AS PROJECT_NAME
        --,      TASK_ID
        ,      ZIM.TASK_ID
        ,      ZIM.TASK_NUMBER
        --,      (SELECT PT.TASK_NAME FROM PA_TASKS_INT PT WHERE PT.PROJECT_ID = ZIM.PROJECT_ID AND PT.TASK_ID = ZIM.TASK_ID) TASK_NAME
        ,      PTI.TASK_NAME
        ,      BATCH
        ,      OFFSHORE
        ,      PRIMAVERA_ID
        ,      TO_CHAR(MPS_PLAN_DATE, 'YYYY/MM/DD') AS MPS_PLAN_DATE
        ,      TO_CHAR(MPS_EXPECTED_DATE, 'YYYY/MM/DD') AS MPS_EXPECTED_DATE
        ,      TO_CHAR(MPS_ACTUAL_DATE, 'YYYY/MM/DD') AS MPS_ACTUAL_DATE
        ,      PURCHASE_DURATION
        ,      TO_CHAR(TE_PLAN_DATE, 'YYYY/MM/DD') AS TE_PLAN_DATE
        ,      TO_CHAR(TE_EXPECTED_DATE, 'YYYY/MM/DD') AS TE_EXPECTED_DATE
        ,      TO_CHAR(TE_ACTUAL_DATE, 'YYYY/MM/DD') AS TE_ACTUAL_DATE
        ,      TO_CHAR(PO_PLAN_DATE, 'YYYY/MM/DD') AS PO_PLAN_DATE
        ,      TO_CHAR(PO_EXPECTED_DATE, 'YYYY/MM/DD') AS PO_EXPECTED_DATE
        ,      TO_CHAR(PO_ATCUAL_DATE, 'YYYY/MM/DD') AS PO_ATCUAL_DATE
        ,      MAKE_DURATION
        ,      PROGRESS
        ,      TO_CHAR(CARGO_PLAN_DATE, 'YYYY/MM/DD') AS CARGO_PLAN_DATE
        ,      TO_CHAR(CARGO_EXPECTED_DATE, 'YYYY/MM/DD') AS CARGO_EXPECTED_DATE
        ,      TO_CHAR(CARGO_PROMISED_DATE, 'YYYY/MM/DD') AS CARGO_PROMISED_DATE
        ,      TO_CHAR(CARGO_ACTUAL_DATE, 'YYYY/MM/DD') AS CARGO_ACTUAL_DATE
        ,      SHIPMENT_DURATION
        ,      TO_CHAR(FOB_PLAN_DATE, 'YYYY/MM/DD') AS FOB_PLAN_DATE
        ,      TO_CHAR(FOB_EXPECTED_DATE, 'YYYY/MM/DD') AS FOB_EXPECTED_DATE
        ,      TO_CHAR(FOB_ACTUAL_DATE, 'YYYY/MM/DD') AS FOB_ACTUAL_DATE
        ,      TRANS_DURATION
        ,      TO_CHAR(ONSITE_PLAN_DATE, 'YYYY/MM/DD') AS ONSITE_PLAN_DATE
        ,      TO_CHAR(ONSITE_EXPECTED_DATE, 'YYYY/MM/DD') AS ONSITE_EXPECTED_DATE
        ,      TO_CHAR(ONSITE_ACTUAL_DATE, 'YYYY/MM/DD') AS ONSITE_ACTUAL_DATE
        ,      PAYMENT_MILESTONE
        ,      TRK_ITEM_DEFAULT
        ,      IAV.PM_AD
        ,      IAV.PM_NAME
        ,      IAV.EM_AD
        ,      IAV.EM_NAME
        ,      IAV.BUYER_AD
        ,      IAV.BUYER_NAME
        ,      IAV.QC_AD
        ,      IAV.QC_NAME
        ,      IAV.SM_AD
        ,      IAV.SM_NAME
        ,      CASE WHEN CARGO_PLAN_DATE <![CDATA[<]]> CARGO_EXPECTED_DATE THEN 'Y' ELSE 'N' END AS ISSUE_FLAG
        ,      ZIM.INVOICE_NUM
        ,      ZIM.ATTRIBUTE1
        ,      ZIM.ATTRIBUTE2
        ,      ZIM.ATTRIBUTE3
        ,      ZIM.ATTRIBUTE4
        ,      ZIM.ATTRIBUTE5
        ,      ZIM.ATTRIBUTE6
        ,      ZIM.ATTRIBUTE7
        ,      ZIM.ATTRIBUTE8
        ,      ZIM.ATTRIBUTE9
        ,      ZIM.ATTRIBUTE10
        ,      ZIM.LAST_UPDATE_DATE
        ,      ZIM.LAST_UPDATED_BY
        ,      ZIM.CREATION_DATE
        ,      ZIM.CREATED_BY
        ,      EMP_PM.ZORG_ID AS PM_DEPT_CODE
        ,      EMP_PM.ZORG_NM AS PM_DEPT_NAME
        ,      EMP_EM.ZORG_ID AS EM_DEPT_CODE
        ,      EMP_EM.ZORG_NM AS EM_DEPT_NAME
        ,      EMP_BUYER.ZORG_ID AS BUYER_DEPT_CODE
        ,      EMP_BUYER.ZORG_NM AS BUYER_DEPT_NAME
        ,      EMP_QC.ZORG_ID AS QC_DEPT_CODE
        ,      EMP_QC.ZORG_NM AS QC_DEPT_NAME
        ,      CASE WHEN CNT = 1 THEN AA.INVOICE_NUM
                    WHEN CNT > 1 THEN AA.INVOICE_NUM || ' 외 ' || AA.CALC_CNT  || '건'
               END  SEL_INVOICE_NUM
        ,      (SELECT CASE WHEN COUNT(*) = 0 THEN NULL ELSE COUNT(*) END
                FROM ESAATTH ATT
                WHERE 1=1
                AND ATT.GRP_CD  = ZDA.FILE_GRP_CD
                AND ATT.STS <![CDATA[<>]]> 'D'
               ) ATTH_CNT
        ,      ZDA.FILE_GRP_CD
        ,      (SELECT COUNT(*)
                FROM DESM_PACKING_MST
                WHERE PROJECT_NO = ZIM.PROJECT_NO
                AND TRK_ITEM_NAME = ZIM.TRK_ITEM_NAME
               ) AS PL_CNT
        ,      TO_CHAR(TRANS_PLAN_DATE, 'YYYY/MM/DD') AS TRANS_PLAN_DATE
        ,      TO_CHAR(TRANS_EXPECTED_DATE, 'YYYY/MM/DD') AS TRANS_EXPECTED_DATE
        ,      TO_CHAR(TRANS_ACTUAL_DATE, 'YYYY/MM/DD') AS TRANS_ACTUAL_DATE
        ,      TO_CHAR(DPPII.RFQ_1R_FROM, 'YYYY/MM/DD HH24:MI:SS') AS RFQ_1R_FROM
        ,      TO_CHAR(DPPII.RFQ_1R_TO, 'YYYY/MM/DD HH24:MI:SS') AS RFQ_1R_TO
        ,      TO_CHAR(DPPII.RFQ_2R_FROM, 'YYYY/MM/DD HH24:MI:SS') AS RFQ_2R_FROM
        ,      TO_CHAR(DPPII.RFQ_2R_TO, 'YYYY/MM/DD HH24:MI:SS') AS RFQ_2R_TO
        ,      TO_CHAR(DPPII.RFQ_3R_FROM, 'YYYY/MM/DD HH24:MI:SS') AS RFQ_3R_FROM
        ,      TO_CHAR(DPPII.RFQ_3R_TO, 'YYYY/MM/DD HH24:MI:SS') AS RFQ_3R_TO
        ,      TO_CHAR(DPPII.RFQ_4R_FROM, 'YYYY/MM/DD HH24:MI:SS') AS RFQ_4R_FROM
		,      TO_CHAR(DPPII.RFQ_4R_TO, 'YYYY/MM/DD HH24:MI:SS') AS RFQ_4R_TO
        ,      DPPII.PO_NUM
        ,      DPPII.PO_DESCRIPTION
        ,      DPPII.PO_REVISION_NUM
        ,      DPPII.RELEASE_NUM
        ,      DPPII.DOC_TYPE
        ,      DPPII.FOB
        ,      DPPII.SUPPLIER_NUMBER
        ,      DPPII.SUPPLIER_NAME
        ,      DPPII.PO_LINE_NUM
        ,      DPPII.PROMISED_DATE
        ,      DPPII.CLOSED_CODE
        ,      MG.MPR_NO
        ,      MG.MDS_P
        ,      MG.MDS_A
        ,      MG.MDA_P
        ,      MG.MDA_A
        ,      MG.MTL_P
        ,      MG.MTL_A
        ,      MG.MFG_P
        ,      MG.MFG_A
        ,      MG.FAT_P
        ,      MG.FAT_A
        ,      MG.CAR_P
        ,      MG.CAR_A
        ,      TO_CHAR(MFG_PLAN_DATE, 'YYYY/MM/DD') AS MFG_PLAN_DATE
        ,      TO_CHAR(MFG_EXPECTED_DATE, 'YYYY/MM/DD') AS MFG_EXPECTED_DATE
        ,      TO_CHAR(MFG_ACTUAL_DATE, 'YYYY/MM/DD') AS MFG_ACTUAL_DATE
        ,	   TE_DURATION
        ,      CARGO_DURATION
        ,      ONSITE_DURATION
        ,	   CON_PROJECT_NO
        ,      CASE WHEN ZIM.TASK_NUMBER IS NULL THEN 0
                    WHEN ZIM.TASK_NUMBER IS NOT NULL AND ZIM.ATTRIBUTE1 IS NOT NULL THEN 0
                    WHEN ZIM.TASK_NUMBER IS NOT NULL AND ZIM.ATTRIBUTE1 IS NULL THEN (SELECT COUNT(1) FROM DESM_PR_PO_INFO_INT WHERE PROJECT_NO = NVL(ZIM.CON_PROJECT_NO, ZIM.PROJECT_NO) AND TASK_NUMBER = ZIM.TASK_NUMBER AND PR_STATUS = 'APPROVED' AND NVL(PR_LINE_CANCEL_FLAG, 'Cancelled') != 'Cancelled')
                    ELSE 0
               END AS IS_PR_MAPPED
        ,	   CASE WHEN DPPII.PO_NUM IS NULL THEN 0
        	   WHEN DPPII.PO_NUM IS NOT NULL AND ZIM.ATTRIBUTE5 IS NOT NULL THEN 0
        	   WHEN DPPII.PO_NUM IS NOT NULL AND ZIM.ATTRIBUTE5 IS NULL THEN (SELECT COUNT(1) FROM DESM_MPR_HEADER WHERE PO_NO = DPPII.PO_NUM AND STATUS = 'Confirmed')
        	   ELSE 0
        	   END AS IS_MPR_MAPPED
        FROM ZVTS_ITEM_MASTER ZIM
        ,    ZVTS_ITEM_ADMIN_V IAV
        ,    PA_PROJECTS_ALL_INT PA
        ,    WITH_ZVTS_EMP EMP_PM
        ,    WITH_ZVTS_EMP EMP_EM
        ,    WITH_ZVTS_EMP EMP_BUYER
        ,    WITH_ZVTS_EMP EMP_QC
        ,    WITH_ZVTS_EMP EMP_SM
        ,    ZVTS_DESM_ATTACH ZDA
        ,    (SELECT DI.TRK_ITEM_SEQ
            ,      COUNT(*) CNT
            ,      COUNT(*) - 1 CALC_CNT
            ,      MAX(DI.INVOICE_NUM) INVOICE_NUM
            FROM ZVTS_DESM_INVOICE DI
            WHERE 1=1 --DI.TRK_ITEM_SEQ = ZIM.TRK_ITEM_SEQ
            GROUP BY DI.TRK_ITEM_SEQ
            ) AA
        ,   DESM_PR_PO_INFO_INT DPPII
        ,   DESM_MPR_VTS_DATE_V MG
        ,    (SELECT PT.PROJECT_ID
              ,      PT.TASK_ID
              ,      PT.TASK_NAME
              FROM PA_TASKS_INT PT
             ) PTI
        WHERE 1=1
        AND ZIM.PROJECT_ID = PA.PROJECT_ID
        AND ZIM.TRK_ITEM_SEQ = IAV.TRK_ITEM_SEQ(+)
        AND IAV.PM_AD = EMP_PM.AD_USER_ID(+)
        AND IAV.EM_AD = EMP_EM.AD_USER_ID(+)
        AND IAV.BUYER_AD = EMP_BUYER.AD_USER_ID(+)
        AND IAV.QC_AD = EMP_QC.AD_USER_ID(+)
        AND IAV.SM_AD = EMP_SM.AD_USER_ID(+)
        AND ZIM.TRK_ITEM_SEQ = AA.TRK_ITEM_SEQ(+)
        AND ZIM.PROJECT_NO = ZDA.PROJECT_NO(+)
        AND ZIM.TRK_ITEM_NAME = ZDA.TRK_ITEM_NAME(+)
        AND ZIM.ATTRIBUTE1 = DPPII.REQUISITION_NUM(+)
        AND ZIM.ATTRIBUTE4 = DPPII.REQUISITION_LINE_NUM(+)
        AND ZIM.ATTRIBUTE5 = MG.MPR_NO(+)
        AND ZIM.PROJECT_ID = PTI.PROJECT_ID(+)
        AND ZIM.TASK_ID = PTI.TASK_ID(+)
        CONNECT BY PRIOR ZIM.TRK_ITEM_SEQ = ZIM.TRK_ITEM_GROUP
        START WITH ZIM.TRK_ITEM_SEQ IN
        (
        SELECT DISTINCT ZIM_IN.TRK_ITEM_SEQ
        FROM ZVTS_ITEM_MASTER ZIM_IN
        ,    ZVTS_ITEM_MASTER_AUTH IAV
        ,    PA_PROJECTS_ALL_INT PA
        ,    PA_PROJECTS_ALL_INT PA_INTER
        ,    ZVTS_EMP EMP
        ,    ZVTS_DESM_INVOICE DI
        WHERE 1=1
        AND ZIM_IN.PROJECT_ID = PA.PROJECT_ID
        AND ZIM_IN.TRK_ITEM_SEQ = IAV.TRK_ITEM_SEQ(+)
        AND ZIM_IN.ATTRIBUTE8 = PA_INTER.SEGMENT1(+)
        AND IAV.USER_AD = EMP.AD_USER_ID(+)
        AND ZIM_IN.TRK_ITEM_SEQ = DI.TRK_ITEM_SEQ(+)
        <if test='VIEW_TYPE == "INTER"'>
         	AND ZIM_IN.PROJECT_NO LIKE 'Z%'
         	<if test='KEY1 == "project_name" and VALUE1 != null and VALUE1 != ""'> AND UPPER(PA.NAME) LIKE UPPER(#{VALUE1})||'%'</if>
		 	<if test='KEY1 == "project_no" and VALUE1 != null and VALUE1 != ""'> AND ZIM_IN.PROJECT_NO = UPPER(#{VALUE1})</if>
		 	<if test='KEY4 == "project_name" and VALUE4 != null and VALUE4 != ""'> AND UPPER(PA.NAME) LIKE UPPER(#{VALUE4})||'%'</if>
		 	<if test='KEY4 == "project_no" and VALUE4 != null and VALUE4 != ""'> AND ZIM_IN.PROJECT_NO = UPPER(#{VALUE4})</if>
		 </if>
		 <if test='VIEW_TYPE != "INTER"'>
		 	<if test='KEY1 == "project_name" and VALUE1 != null and VALUE1 != ""'> AND UPPER(PA.NAME) LIKE UPPER(#{VALUE1})||'%'</if>
		 	<if test='KEY1 == "project_no" and VALUE1 != null and VALUE1 != ""'> AND ZIM_IN.PROJECT_NO = UPPER(#{VALUE1})</if>
			<if test='KEY4 == "project_name" and VALUE4 != null and VALUE4 != ""'> AND UPPER(PA.NAME) LIKE UPPER(#{VALUE4})||'%'</if>
		 	<if test='KEY4 == "project_no" and VALUE4 != null and VALUE4 != ""'> AND ZIM_IN.PROJECT_NO = UPPER(#{VALUE4})</if>
		 </if>
		 <if test='KEY1 == "item" and VALUE1 != null and VALUE1 != ""'> AND UPPER(TRK_ITEM_NAME) LIKE '%' || UPPER(#{VALUE1})||'%'</if>
		 <if test='KEY1 == "pm" and VALUE1 != null and VALUE1 != ""'> AND (IAV.PM_AD LIKE  '%' ||UPPER(#{VALUE1})||'%' OR IAV.PM_NAME LIKE  '%' ||UPPER(#{VALUE1})||'%')</if>
		 <if test='KEY1 == "em" and VALUE1 != null and VALUE1 != ""'> AND (IAV.EM_AD LIKE  '%' ||UPPER(#{VALUE1})||'%' OR IAV.EM_NAME LIKE  '%' ||UPPER(#{VALUE1})||'%')</if>
		 <if test='KEY1 == "buyer" and VALUE1 != null and VALUE1 != ""'> AND (IAV.BUYER_AD LIKE  '%' ||UPPER(#{VALUE1})||'%' OR IAV.BUYER_NAME LIKE  '%' ||UPPER(#{VALUE1})||'%')</if>
		 <if test='KEY1 == "qc" and VALUE1 != null and VALUE1 != ""'> AND (IAV.QC_AD LIKE  '%' ||UPPER(#{VALUE1})||'%' OR IAV.QC_NAME LIKE  '%' ||UPPER(#{VALUE1})||'%')</if>
		 <if test='KEY1 == "sm" and VALUE1 != null and VALUE1 != ""'> AND (IAV.SM_AD LIKE  '%' ||UPPER(#{VALUE1})||'%' OR IAV.SM_NAME LIKE  '%' ||UPPER(#{VALUE1})||'%')</if>
		 <if test='KEY1 == "attribute7" and VALUE1 != null and VALUE1 != ""'> AND UPPER(ZIM_IN.ATTRIBUTE7) LIKE '%' || UPPER(#{VALUE1})||'%'</if>
		 <if test='KEY1 == "attribute3" and VALUE1 != null and VALUE1 != ""'> AND UPPER(ZIM_IN.ATTRIBUTE3) LIKE '%' || UPPER(#{VALUE1})||'%'</if>
		 <if test='KEY1 == "attribute10" and VALUE1 != null and VALUE1 != ""'> AND UPPER(ZIM_IN.ATTRIBUTE10) LIKE '%' || UPPER(#{VALUE1})||'%'</if>
		 <if test='KEY1 == "attribute6" and VALUE1 != null and VALUE1 != ""'> AND UPPER(ZIM_IN.ATTRIBUTE6) LIKE '%' || UPPER(#{VALUE1})||'%'</if>
		 <if test='KEY1 == "invoice_num" and VALUE1 != null and VALUE1 != ""'> AND UPPER(DI.INVOICE_NUM) LIKE '%' || UPPER(#{VALUE1})||'%'</if>
		 <if test='KEY4 == "item" and VALUE4 != null and VALUE4 != ""'> AND UPPER(TRK_ITEM_NAME) LIKE '%' || UPPER(#{VALUE4})||'%'</if>
		 <if test='KEY4 == "pm" and VALUE4 != null and VALUE4 != ""'> AND USER_JOB = 'PM' AND UPPER(USER_NAME) LIKE UPPER(#{VALUE4})||'%'</if>
		 <if test='KEY4 == "em" and VALUE4 != null and VALUE4 != ""'> AND USER_JOB = 'EM' AND UPPER(USER_NAME) LIKE UPPER(#{VALUE4})||'%'</if>
		 <if test='KEY4 == "buyer" and VALUE4 != null and VALUE4 != ""'> AND USER_JOB = 'BUYER' AND UPPER(USER_NAME) LIKE UPPER(#{VALUE4})||'%' </if>
		 <if test='KEY4 == "qc" and VALUE4 != null and VALUE4 != ""'> AND USER_JOB='QC' AND UPPER(USER_NAME) LIKE UPPER(#{VALUE4})||'%'</if>
		 <if test='KEY4 == "sm" and VALUE4 != null and VALUE4 != ""'> AND USER_JOB='SM' AND UPPER(USER_NAME) LIKE UPPER(#{VALUE4})||'%'</if>
		 <if test='KEY4 == "attribute7" and VALUE4 != null and VALUE4 != ""'> AND UPPER(ZIM_IN.ATTRIBUTE7) LIKE '%' || UPPER(#{VALUE4})||'%'</if>
		 <if test='KEY4 == "attribute3" and VALUE4 != null and VALUE4 != ""'> AND UPPER(ZIM_IN.ATTRIBUTE3) LIKE '%' || UPPER(#{VALUE4})||'%'</if>
		 <if test='KEY4 == "attribute10" and VALUE4 != null and VALUE4 != ""'> AND UPPER(ZIM_IN.ATTRIBUTE10) LIKE '%' || UPPER(#{VALUE4})||'%'</if>
		 <if test='KEY4 == "attribute6" and VALUE4 != null and VALUE4 != ""'> AND UPPER(ZIM_IN.ATTRIBUTE6) LIKE '%' || UPPER(#{VALUE4})||'%'</if>
		 <if test='KEY4 == "invoice_num" and VALUE4 != null and VALUE4 != ""'> AND UPPER(DI.INVOICE_NUM) LIKE '%' || UPPER(#{VALUE4})||'%'</if>
		 <if test='KEY3 == "plan" '>
		 	<if test='(VALUE2 != null and VALUE2 !="") or (VALUE3 != null and VALUE3 !="")'>
		 		<if test='KEY2 == "mps"'> AND MPS_PLAN_DATE BETWEEN TO_DATE(NVL(#{VALUE2},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE3},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 		<if test='KEY2 == "po"'> AND PO_PLAN_DATE BETWEEN TO_DATE(NVL(#{VALUE2},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE3},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 		<if test='KEY2 == "cargo"'> AND CARGO_PLAN_DATE BETWEEN TO_DATE(NVL(#{VALUE2},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE3},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 		<if test='KEY2 == "fob"'> AND FOB_PLAN_DATE BETWEEN TO_DATE(NVL(#{VALUE2},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE3},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 		<if test='KEY2 == "onsite"'> AND ONSITE_PLAN_DATE BETWEEN TO_DATE(NVL(#{VALUE2},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE3},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 	</if>
		 </if>
		 <if test='KEY3 == "expected"'>
		 	<if test='(VALUE2 != null and VALUE2 !="") or (VALUE3 != null and VALUE3 !="")'>
		 		<if test='KEY2 == "mps"'> AND MPS_EXPECTED_DATE BETWEEN TO_DATE(NVL(#{VALUE2},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE3},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 		<if test='KEY2 == "po"'> AND PO_EXPECTED_DATE BETWEEN TO_DATE(NVL(#{VALUE2},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE3},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 		<if test='KEY2 == "cargo"'> AND CARGO_EXPECTED_DATE BETWEEN TO_DATE(NVL(#{VALUE2},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE3},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 		<if test='KEY2 == "fob"'> AND FOB_EXPECTED_DATE BETWEEN TO_DATE(NVL(#{VALUE2},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE3},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 		<if test='KEY2 == "onsite"'> AND ONSITE_EXPECTED_DATE BETWEEN TO_DATE(NVL(#{VALUE2},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE3},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 	</if>
		 </if>
		 <if test='KEY3 == "actual"'>
		 	<if test='(VALUE2 != null and VALUE2 !="") or (VALUE3 != null and VALUE3 !="")'>
		 		<if test='KEY2 == "mps"'> AND MPS_ACTUAL_DATE BETWEEN TO_DATE(NVL(#{VALUE2},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE3},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 		<if test='KEY2 == "po"'> AND PO_ACTUAL_DATE BETWEEN TO_DATE(NVL(#{VALUE2},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE3},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 		<if test='KEY2 == "cargo"'> AND CARGO_ACTUAL_DATE BETWEEN TO_DATE(NVL(#{VALUE2},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE3},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 		<if test='KEY2 == "fob"'> AND FOB_ACTUAL_DATE BETWEEN TO_DATE(NVL(#{VALUE2},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE3},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 		<if test='KEY2 == "onsite"'> AND ONSITE_ACTUAL_DATE BETWEEN TO_DATE(NVL(#{VALUE2},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE3},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 	</if>
		 </if>
		 <if test='KEY6 == "plan"'>
		 	<if test='(VALUE5 != null and VALUE5 !="") or (VALUE6 != null and VALUE6 !="")'>
		 		<if test='KEY5 == "mps"'> AND MPS_PLAN_DATE BETWEEN TO_DATE(NVL(#{VALUE5},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE6},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 		<if test='KEY5 == "po"'> AND PO_PLAN_DATE BETWEEN TO_DATE(NVL(#{VALUE5},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE6},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 		<if test='KEY5 == "cargo"'> AND CARGO_PLAN_DATE BETWEEN TO_DATE(NVL(#{VALUE5},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE6},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 		<if test='KEY5 == "fob"'> AND FOB_PLAN_DATE BETWEEN TO_DATE(NVL(#{VALUE5},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE6},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 		<if test='KEY5 == "onsite"'> AND ONSITE_PLAN_DATE BETWEEN TO_DATE(NVL(#{VALUE5},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE6},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 	</if>
		 </if>
		 <if test='KEY6 == "expected"'>
		 	<if test='(VALUE5 != null and VALUE5 !="") or (VALUE6 != null and VALUE6 !="")'>
		 		<if test='KEY5 == "mps"'> AND MPS_PLAN_DATE BETWEEN TO_DATE(NVL(#{VALUE5},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE6},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 		<if test='KEY5 == "po"'> AND PO_EXPECTED_DATE BETWEEN TO_DATE(NVL(#{VALUE5},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE6},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 		<if test='KEY5 == "cargo"'>	AND CARGO_EXPECTED_DATE BETWEEN TO_DATE(NVL(#{VALUE5},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE6},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 		<if test='KEY5 == "fob"'> AND FOB_EXPECTED_DATE BETWEEN TO_DATE(NVL(#{VALUE5},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE6},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 		<if test='KEY5 == "onsite"'> AND ONSITE_EXPECTED_DATE BETWEEN TO_DATE(NVL(#{VALUE5},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE6},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 	</if>
		 </if>
		 <if test='KEY6 == "actual"'>
		 	<if test='(VALUE5 != null and VALUE5 !="") or (VALUE6 != null and VALUE6 !="")'>
		 		<if test='KEY5 == "mps"'> AND MPS_ACTUAL_DATE BETWEEN TO_DATE(NVL(#{VALUE5},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE6},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 		<if test='KEY5 == "po"'> AND PO_ACTUAL_DATE BETWEEN TO_DATE(NVL(#{VALUE5},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE6},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 		<if test='KEY5 == "cargo"'> AND CARGO_ACTUAL_DATE BETWEEN TO_DATE(NVL(#{VALUE5},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE6},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 		<if test='KEY5 == "fob"'> AND FOB_ACTUAL_DATE BETWEEN TO_DATE(NVL(#{VALUE5},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE6},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 		<if test='KEY5 == "onsite"'> AND ONSITE_ACTUAL_DATE BETWEEN TO_DATE(NVL(#{VALUE5},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE6},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 	</if>
		 </if>
		 <if test='ISSUE_CHECK == "Y"'>
		 	AND (CARGO_ACTUAL_DATE IS NULL AND CARGO_PLAN_DATE <![CDATA[<]]> CARGO_EXPECTED_DATE
		 		 OR (PO_ATCUAL_DATE IS NULL AND PO_PLAN_DATE <![CDATA[<]]> PO_EXPECTED_DATE)
		 		 OR (MPS_ACTUAL_DATE IS NULL AND MPS_PLAN_DATE <![CDATA[<]]> MPS_EXPECTED_DATE)
		 		 OR (FOB_ACTUAL_DATE IS NULL AND FOB_PLAN_DATE <![CDATA[<]]> FOB_EXPECTED_DATE)
		 		 OR (ONSITE_ACTUAL_DATE IS NULL AND ONSITE_PLAN_DATE <![CDATA[<]]> ONSITE_EXPECTED_DATE)
		 		)
		 </if>
		 <if test='OFFSHORE != null and OFFSHORE !=""'> AND OFFSHORE = #{OFFSHORE}</if>
		 <if test='PROJECT_NO != ""'> AND ZIM_IN.PROJECT_NO = UPPER(#{PROJECT_NO})</if>
		 )
	</select>
	
	<select id="getIdsmSetupT_BACKUP230811" parameterType="java.util.Map" resultType="java.util.HashMap">
    	/* IdsmMapper.getIdsmSetupT : 기자재 일정관리 Main Grid 조회 */
		WITH WITH_ZVTS_EMP AS (SELECT * FROM ZVTS_EMP)
		,    WITH_MPR_GROUP AS (
				  SELECT DMH.MPR_SEQ
		          ,      DMH.MPR_NO AS MPR_NO
		          ,      CASE WHEN DMDP.TYPE_CODE = 'E' AND DMDP.TYPE_SUB_CODE = 'A' AND DMDP.GUBUN_SUB_CODE = 'P' THEN MAX(DMDP.VAL_SUB) END AS MDS_P
		          ,      CASE WHEN DMDP.TYPE_CODE = 'E' AND DMDP.TYPE_SUB_CODE = 'A' AND DMDP.GUBUN_SUB_CODE = 'R' THEN MAX(DMDP.VAL_SUB) END AS MDS_A
		          ,      CASE WHEN DMDP.TYPE_CODE = 'E' AND DMDP.TYPE_SUB_CODE = 'B' AND DMDP.GUBUN_SUB_CODE = 'P' THEN MAX(DMDP.VAL_SUB) END AS MDA_P
		          ,      CASE WHEN DMDP.TYPE_CODE = 'E' AND DMDP.TYPE_SUB_CODE = 'B' AND DMDP.GUBUN_SUB_CODE = 'R' THEN MAX(DMDP.VAL_SUB) END AS MDA_A
		          ,      CASE WHEN DMDP.TYPE_CODE = 'B' AND DMDP.TYPE_SUB_CODE = 'C' AND DMDP.GUBUN_SUB_CODE = 'P' THEN MAX(DMDP.VAL_SUB) END AS MTL_P
		          ,      CASE WHEN DMDP.TYPE_CODE = 'B' AND DMDP.TYPE_SUB_CODE = 'C' AND DMDP.GUBUN_SUB_CODE = 'R' THEN MAX(DMDP.VAL_SUB) END AS MTL_A
		          ,      CASE WHEN DMDP.TYPE_CODE = 'P' AND DMDP.TYPE_SUB_CODE = 'D' AND DMDP.GUBUN_SUB_CODE = 'P' THEN MAX(DMDP.VAL_SUB) END AS MFG_P
		          ,      CASE WHEN DMDP.TYPE_CODE = 'P' AND DMDP.TYPE_SUB_CODE = 'D' AND DMDP.GUBUN_SUB_CODE = 'R' THEN MAX(DMDP.VAL_SUB) END AS MFG_A
		          ,      CASE WHEN DMDP.TYPE_CODE = 'P' AND DMDP.TYPE_SUB_CODE = 'E' AND DMDP.GUBUN_SUB_CODE = 'P' THEN MAX(DMDP.VAL_SUB) END AS FAT_P
		          ,      CASE WHEN DMDP.TYPE_CODE = 'P' AND DMDP.TYPE_SUB_CODE = 'E' AND DMDP.GUBUN_SUB_CODE = 'R' THEN MAX(DMDP.VAL_SUB) END AS FAT_A
		          ,      CASE WHEN DMDP.TYPE_CODE = 'P' AND DMDP.TYPE_SUB_CODE = 'F' AND DMDP.GUBUN_SUB_CODE = 'P' THEN MAX(DMDP.VAL_SUB) END AS CAR_P
		          ,      CASE WHEN DMDP.TYPE_CODE = 'P' AND DMDP.TYPE_SUB_CODE = 'F' AND DMDP.GUBUN_SUB_CODE = 'R' THEN MAX(DMDP.VAL_SUB) END AS CAR_A
		          FROM DESM_MPR_HEADER DMH
		          ,    DESM_MPR_DETAIL_PROGRESS DMDP
		          WHERE 1=1
		          AND DMH.MPR_SEQ = DMDP.MPR_SEQ
		          AND NVL(DMDP.TYPE_SUB_CODE, 'NN') != 'NN'
		          AND NVL(DMDP.GUBUN_SUB_CODE, 'NN') != 'NN'
		          GROUP BY DMH.MPR_SEQ, DMH.MPR_NO, DMDP.TYPE_CODE, DMDP.TYPE_SUB_CODE, DMDP.GUBUN_SUB_CODE
		)
        SELECT ZIM.TRK_ITEM_SEQ
        ,      ZIM.TRK_ITEM_NAME
        ,      NVL(TRK_ITEM_GROUP, -1) AS TRK_ITEM_GROUP
        ,      ORGANIZATION_ID
        ,      ZIM.PROJECT_ID
        ,      ZIM.PROJECT_NO
        ,      ZIM.REMARK
        ,      PA.NAME AS PROJECT_NAME
        --,      TASK_ID
        ,      ZIM.TASK_ID
        ,      ZIM.TASK_NUMBER
        --,      (SELECT PT.TASK_NAME FROM PA_TASKS_INT PT WHERE PT.PROJECT_ID = ZIM.PROJECT_ID AND PT.TASK_ID = ZIM.TASK_ID) TASK_NAME
        ,      PTI.TASK_NAME
        ,      BATCH
        ,      OFFSHORE
        ,      PRIMAVERA_ID
        ,      TO_CHAR(MPS_PLAN_DATE, 'YYYY/MM/DD') AS MPS_PLAN_DATE
        ,      TO_CHAR(MPS_EXPECTED_DATE, 'YYYY/MM/DD') AS MPS_EXPECTED_DATE
        ,      TO_CHAR(MPS_ACTUAL_DATE, 'YYYY/MM/DD') AS MPS_ACTUAL_DATE
        ,      PURCHASE_DURATION
        ,      TO_CHAR(TE_PLAN_DATE, 'YYYY/MM/DD') AS TE_PLAN_DATE
        ,      TO_CHAR(TE_EXPECTED_DATE, 'YYYY/MM/DD') AS TE_EXPECTED_DATE
        ,      TO_CHAR(TE_ACTUAL_DATE, 'YYYY/MM/DD') AS TE_ACTUAL_DATE
        ,      TO_CHAR(PO_PLAN_DATE, 'YYYY/MM/DD') AS PO_PLAN_DATE
        ,      TO_CHAR(PO_EXPECTED_DATE, 'YYYY/MM/DD') AS PO_EXPECTED_DATE
        ,      TO_CHAR(PO_ATCUAL_DATE, 'YYYY/MM/DD') AS PO_ATCUAL_DATE
        ,      MAKE_DURATION
        ,      PROGRESS
        ,      TO_CHAR(CARGO_PLAN_DATE, 'YYYY/MM/DD') AS CARGO_PLAN_DATE
        ,      TO_CHAR(CARGO_EXPECTED_DATE, 'YYYY/MM/DD') AS CARGO_EXPECTED_DATE
        ,      TO_CHAR(CARGO_PROMISED_DATE, 'YYYY/MM/DD') AS CARGO_PROMISED_DATE
        ,      TO_CHAR(CARGO_ACTUAL_DATE, 'YYYY/MM/DD') AS CARGO_ACTUAL_DATE
        ,      SHIPMENT_DURATION
        ,      TO_CHAR(FOB_PLAN_DATE, 'YYYY/MM/DD') AS FOB_PLAN_DATE
        ,      TO_CHAR(FOB_EXPECTED_DATE, 'YYYY/MM/DD') AS FOB_EXPECTED_DATE
        ,      TO_CHAR(FOB_ACTUAL_DATE, 'YYYY/MM/DD') AS FOB_ACTUAL_DATE
        ,      TRANS_DURATION
        ,      TO_CHAR(ONSITE_PLAN_DATE, 'YYYY/MM/DD') AS ONSITE_PLAN_DATE
        ,      TO_CHAR(ONSITE_EXPECTED_DATE, 'YYYY/MM/DD') AS ONSITE_EXPECTED_DATE
        ,      TO_CHAR(ONSITE_ACTUAL_DATE, 'YYYY/MM/DD') AS ONSITE_ACTUAL_DATE
        ,      PAYMENT_MILESTONE
        ,      TRK_ITEM_DEFAULT
        ,      IAV.PM_AD
        ,      IAV.PM_NAME
        ,      IAV.EM_AD
        ,      IAV.EM_NAME
        ,      IAV.BUYER_AD
        ,      IAV.BUYER_NAME
        ,      IAV.QC_AD
        ,      IAV.QC_NAME
        ,      IAV.SM_AD
        ,      IAV.SM_NAME
        ,      CASE WHEN CARGO_PLAN_DATE <![CDATA[<]]> CARGO_EXPECTED_DATE THEN 'Y' ELSE 'N' END AS ISSUE_FLAG
        ,      ZIM.INVOICE_NUM
        ,      ZIM.ATTRIBUTE1
        ,      ZIM.ATTRIBUTE2
        ,      ZIM.ATTRIBUTE3
        ,      ZIM.ATTRIBUTE4
        ,      ZIM.ATTRIBUTE5
        ,      ZIM.ATTRIBUTE6
        ,      ZIM.ATTRIBUTE7
        ,      ZIM.ATTRIBUTE8
        ,      ZIM.ATTRIBUTE9
        ,      ZIM.ATTRIBUTE10
        ,      ZIM.LAST_UPDATE_DATE
        ,      ZIM.LAST_UPDATED_BY
        ,      ZIM.CREATION_DATE
        ,      ZIM.CREATED_BY
        ,      EMP_PM.ZORG_ID AS PM_DEPT_CODE
        ,      EMP_PM.ZORG_NM AS PM_DEPT_NAME
        ,      EMP_EM.ZORG_ID AS EM_DEPT_CODE
        ,      EMP_EM.ZORG_NM AS EM_DEPT_NAME
        ,      EMP_BUYER.ZORG_ID AS BUYER_DEPT_CODE
        ,      EMP_BUYER.ZORG_NM AS BUYER_DEPT_NAME
        ,      EMP_QC.ZORG_ID AS QC_DEPT_CODE
        ,      EMP_QC.ZORG_NM AS QC_DEPT_NAME
        ,      CASE WHEN CNT = 1 THEN AA.INVOICE_NUM
                    WHEN CNT > 1 THEN AA.INVOICE_NUM || ' 외 ' || AA.CALC_CNT  || '건'
                    ELSE ''
               END SEL_INVOICE_NUM
        ,      (SELECT CASE WHEN COUNT(*) = 0 THEN NULL ELSE COUNT(*) END
                FROM ESAATTH ATT
                WHERE 1=1
                AND ATT.GRP_CD  = ZDA.FILE_GRP_CD
                AND ATT.STS <![CDATA[<>]]> 'D'
               ) ATTH_CNT
        ,      ZDA.FILE_GRP_CD
        ,      (SELECT COUNT(*)
                FROM DESM_PACKING_MST
                WHERE PROJECT_NO = ZIM.PROJECT_NO
                AND TRK_ITEM_NAME = ZIM.TRK_ITEM_NAME
               ) AS PL_CNT
        ,      TO_CHAR(TRANS_PLAN_DATE, 'YYYY/MM/DD') AS TRANS_PLAN_DATE
        ,      TO_CHAR(TRANS_EXPECTED_DATE, 'YYYY/MM/DD') AS TRANS_EXPECTED_DATE
        ,      TO_CHAR(TRANS_ACTUAL_DATE, 'YYYY/MM/DD') AS TRANS_ACTUAL_DATE
        ,      TO_CHAR(DPPII.RFQ_1R_FROM, 'YYYY/MM/DD HH24:MI:SS') AS RFQ_1R_FROM
        ,      TO_CHAR(DPPII.RFQ_1R_TO, 'YYYY/MM/DD HH24:MI:SS') AS RFQ_1R_TO
        ,      TO_CHAR(DPPII.RFQ_2R_FROM, 'YYYY/MM/DD HH24:MI:SS') AS RFQ_2R_FROM
        ,      TO_CHAR(DPPII.RFQ_2R_TO, 'YYYY/MM/DD HH24:MI:SS') AS RFQ_2R_TO
        ,      TO_CHAR(DPPII.RFQ_3R_FROM, 'YYYY/MM/DD HH24:MI:SS') AS RFQ_3R_FROM
        ,      TO_CHAR(DPPII.RFQ_3R_TO, 'YYYY/MM/DD HH24:MI:SS') AS RFQ_3R_TO
        ,      TO_CHAR(DPPII.RFQ_4R_FROM, 'YYYY/MM/DD HH24:MI:SS') AS RFQ_4R_FROM
		,      TO_CHAR(DPPII.RFQ_4R_TO, 'YYYY/MM/DD HH24:MI:SS') AS RFQ_4R_TO
        ,      DPPII.PO_NUM
        ,      DPPII.PO_DESCRIPTION
        ,      DPPII.PO_REVISION_NUM
        ,      DPPII.RELEASE_NUM
        ,      DPPII.DOC_TYPE
        ,      DPPII.FOB
        ,      DPPII.SUPPLIER_NUMBER
        ,      DPPII.SUPPLIER_NAME
        ,      DPPII.PO_LINE_NUM
        ,      DPPII.PROMISED_DATE
        ,      DPPII.CLOSED_CODE
        ,      MG.MPR_NO
        ,      MG.MDS_P
        ,      MG.MDS_A
        ,      MG.MDA_P
        ,      MG.MDA_A
        ,      MG.MTL_P
        ,      MG.MTL_A
        ,      MG.MFG_P
        ,      MG.MFG_A
        ,      MG.FAT_P
        ,      MG.FAT_A
        ,      MG.CAR_P
        ,      MG.CAR_A
        ,      TO_CHAR(MFG_PLAN_DATE, 'YYYY/MM/DD') AS MFG_PLAN_DATE
        ,      TO_CHAR(MFG_EXPECTED_DATE, 'YYYY/MM/DD') AS MFG_EXPECTED_DATE
        ,      TO_CHAR(MFG_ACTUAL_DATE, 'YYYY/MM/DD') AS MFG_ACTUAL_DATE
        ,	   TE_DURATION
        ,      CARGO_DURATION
        ,      ONSITE_DURATION
        ,	   CON_PROJECT_NO
        ,      CASE WHEN ZIM.TASK_NUMBER IS NULL THEN 0
                    WHEN ZIM.TASK_NUMBER IS NOT NULL AND ZIM.ATTRIBUTE1 IS NOT NULL THEN 0
                    WHEN ZIM.TASK_NUMBER IS NOT NULL AND ZIM.ATTRIBUTE1 IS NULL THEN (SELECT COUNT(1) FROM DESM_PR_PO_INFO_INT WHERE PROJECT_NO = NVL(ZIM.CON_PROJECT_NO, ZIM.PROJECT_NO) AND TASK_NUMBER = ZIM.TASK_NUMBER)
                    ELSE 0
               END AS IS_PR_MAPPED
        FROM ZVTS_ITEM_MASTER ZIM
        ,    PA_PROJECTS_ALL_INT PA
        ,    WITH_ZVTS_EMP EMP_PM
        ,    WITH_ZVTS_EMP EMP_EM
        ,    WITH_ZVTS_EMP EMP_BUYER
        ,    WITH_ZVTS_EMP EMP_QC
        ,    WITH_ZVTS_EMP EMP_SM
        ,    ZVTS_ITEM_ADMIN_V IAV
        ,    ZVTS_DESM_ATTACH ZDA
        ,    (SELECT DI.TRK_ITEM_SEQ
              ,      COUNT(*) CNT
              ,      COUNT(*) - 1 CALC_CNT
              ,      MAX(DI.INVOICE_NUM) INVOICE_NUM
              FROM ZVTS_DESM_INVOICE DI
              WHERE 1=1 --DI.TRK_ITEM_SEQ = ZIM.TRK_ITEM_SEQ
              GROUP BY DI.TRK_ITEM_SEQ
             ) AA
        ,    DESM_PR_PO_INFO_INT DPPII
        ,    (SELECT MPR_NO
              ,      MAX(MDS_P) AS MDS_P
              ,      MAX(MDS_A) AS MDS_A
              ,      MAX(MDA_P) AS MDA_P
              ,      MAX(MDA_A) AS MDA_A
              ,      MAX(MTL_P) AS MTL_P
              ,      MAX(MTL_A) AS MTL_A
              ,      MAX(MFG_P) AS MFG_P
              ,      MAX(MFG_A) AS MFG_A
              ,      MAX(FAT_P) AS FAT_P
              ,      MAX(FAT_A) AS FAT_A
              ,      MAX(CAR_P) AS CAR_P
              ,      MAX(CAR_A) AS CAR_A
              FROM WITH_MPR_GROUP
              GROUP BY MPR_NO
             ) MG
        ,    (SELECT PT.PROJECT_ID
              ,      PT.TASK_ID
              ,      PT.TASK_NAME
              FROM PA_TASKS_INT PT
             ) PTI
        WHERE 1=1
        AND ZIM.PROJECT_ID = PA.PROJECT_ID
        AND ZIM.TRK_ITEM_SEQ = IAV.TRK_ITEM_SEQ(+)
        AND IAV.PM_AD = EMP_PM.AD_USER_ID(+)
        AND IAV.EM_AD = EMP_EM.AD_USER_ID(+)
        AND IAV.BUYER_AD = EMP_BUYER.AD_USER_ID(+)
        AND IAV.QC_AD = EMP_QC.AD_USER_ID(+)
        AND IAV.SM_AD = EMP_SM.AD_USER_ID(+)
        AND ZIM.TRK_ITEM_SEQ = AA.TRK_ITEM_SEQ(+)
        AND ZIM.PROJECT_NO = ZDA.PROJECT_NO(+)
        AND ZIM.TRK_ITEM_NAME = ZDA.TRK_ITEM_NAME(+)
        AND ZIM.ATTRIBUTE1 = DPPII.REQUISITION_NUM(+)
        AND ZIM.ATTRIBUTE4 = DPPII.REQUISITION_LINE_NUM(+)
        AND ZIM.ATTRIBUTE5 = MG.MPR_NO(+)
        AND ZIM.PROJECT_ID = PTI.PROJECT_ID(+)
        AND ZIM.TASK_ID = PTI.TASK_ID(+)
    	CONNECT BY ZIM.TRK_ITEM_SEQ = PRIOR ZIM.TRK_ITEM_GROUP
        START WITH ZIM.TRK_ITEM_SEQ IN
    	(
         SELECT
         DISTINCT ZIM_IN.TRK_ITEM_SEQ
         FROM ZVTS_ITEM_MASTER ZIM_IN
         ,    PA_PROJECTS_ALL_INT PA
         ,    PA_PROJECTS_ALL_INT PA_INTER
         ,    ZVTS_ITEM_MASTER_AUTH IAV
         ,    ZVTS_EMP EMP
         ,    ZVTS_DESM_INVOICE DI
         WHERE 1=1
         AND ZIM_IN.PROJECT_ID = PA.PROJECT_ID
         AND ZIM_IN.TRK_ITEM_SEQ = IAV.TRK_ITEM_SEQ(+)
         AND ZIM_IN.ATTRIBUTE8 = PA_INTER.SEGMENT1(+)
         AND IAV.USER_AD = EMP.AD_USER_ID(+)
         AND ZIM_IN.TRK_ITEM_SEQ = DI.TRK_ITEM_SEQ(+)
         <if test='VIEW_TYPE == "INTER"'>
         	AND ZIM_IN.PROJECT_NO LIKE 'Z%'
         	<if test='KEY1 == "project_name" and VALUE1 != null and VALUE1 != ""'> AND UPPER(PA.NAME) LIKE UPPER(#{VALUE1})||'%'</if>
		 	<if test='KEY1 == "project_no" and VALUE1 != null and VALUE1 != ""'> AND ZIM_IN.PROJECT_NO = UPPER(#{VALUE1})</if>
		 	<if test='KEY4 == "project_name" and VALUE4 != null and VALUE4 != ""'> AND UPPER(PA.NAME) LIKE UPPER(#{VALUE4})||'%'</if>
		 	<if test='KEY4 == "project_no" and VALUE4 != null and VALUE4 != ""'> AND ZIM_IN.PROJECT_NO = UPPER(#{VALUE4})</if>
		 </if>
		 <if test='VIEW_TYPE != "INTER"'>
		 	<if test='KEY1 == "project_name" and VALUE1 != null and VALUE1 != ""'> AND UPPER(PA.NAME) LIKE UPPER(#{VALUE1})||'%'</if>
		 	<if test='KEY1 == "project_no" and VALUE1 != null and VALUE1 != ""'> AND ZIM_IN.PROJECT_NO = UPPER(#{VALUE1})</if>
			<if test='KEY4 == "project_name" and VALUE4 != null and VALUE4 != ""'> AND UPPER(PA.NAME) LIKE UPPER(#{VALUE4})||'%'</if>
		 	<if test='KEY4 == "project_no" and VALUE4 != null and VALUE4 != ""'> AND ZIM_IN.PROJECT_NO = UPPER(#{VALUE4})</if>
		 </if>
		 <if test='KEY1 == "item" and VALUE1 != null and VALUE1 != ""'> AND UPPER(TRK_ITEM_NAME) LIKE '%' || UPPER(#{VALUE1})||'%'</if>
		 <if test='KEY1 == "pm" and VALUE1 != null and VALUE1 != ""'> AND (IAV.PM_AD LIKE  '%' ||UPPER(#{VALUE1})||'%' OR IAV.PM_NAME LIKE  '%' ||UPPER(#{VALUE1})||'%')</if>
		 <if test='KEY1 == "em" and VALUE1 != null and VALUE1 != ""'> AND (IAV.EM_AD LIKE  '%' ||UPPER(#{VALUE1})||'%' OR IAV.EM_NAME LIKE  '%' ||UPPER(#{VALUE1})||'%')</if>
		 <if test='KEY1 == "buyer" and VALUE1 != null and VALUE1 != ""'> AND (IAV.BUYER_AD LIKE  '%' ||UPPER(#{VALUE1})||'%' OR IAV.BUYER_NAME LIKE  '%' ||UPPER(#{VALUE1})||'%')</if>
		 <if test='KEY1 == "qc" and VALUE1 != null and VALUE1 != ""'> AND (IAV.QC_AD LIKE  '%' ||UPPER(#{VALUE1})||'%' OR IAV.QC_NAME LIKE  '%' ||UPPER(#{VALUE1})||'%')</if>
		 <if test='KEY1 == "sm" and VALUE1 != null and VALUE1 != ""'> AND (IAV.SM_AD LIKE  '%' ||UPPER(#{VALUE1})||'%' OR IAV.SM_NAME LIKE  '%' ||UPPER(#{VALUE1})||'%')</if>
		 <if test='KEY1 == "attribute7" and VALUE1 != null and VALUE1 != ""'> AND UPPER(ZIM_IN.ATTRIBUTE7) LIKE '%' || UPPER(#{VALUE1})||'%'</if>
		 <if test='KEY1 == "attribute3" and VALUE1 != null and VALUE1 != ""'> AND UPPER(ZIM_IN.ATTRIBUTE3) LIKE '%' || UPPER(#{VALUE1})||'%'</if>
		 <if test='KEY1 == "attribute10" and VALUE1 != null and VALUE1 != ""'> AND UPPER(ZIM_IN.ATTRIBUTE10) LIKE '%' || UPPER(#{VALUE1})||'%'</if>
		 <if test='KEY1 == "attribute6" and VALUE1 != null and VALUE1 != ""'> AND UPPER(ZIM_IN.ATTRIBUTE6) LIKE '%' || UPPER(#{VALUE1})||'%'</if>
		 <if test='KEY1 == "invoice_num" and VALUE1 != null and VALUE1 != ""'> AND UPPER(DI.INVOICE_NUM) LIKE '%' || UPPER(#{VALUE1})||'%'</if>
		 <if test='KEY4 == "item" and VALUE4 != null and VALUE4 != ""'> AND UPPER(TRK_ITEM_NAME) LIKE '%' || UPPER(#{VALUE4})||'%'</if>
		 <if test='KEY4 == "pm" and VALUE4 != null and VALUE4 != ""'> AND USER_JOB = 'PM' AND UPPER(USER_NAME) LIKE UPPER(#{VALUE4})||'%'</if>
		 <if test='KEY4 == "em" and VALUE4 != null and VALUE4 != ""'> AND USER_JOB = 'EM' AND UPPER(USER_NAME) LIKE UPPER(#{VALUE4})||'%'</if>
		 <if test='KEY4 == "buyer" and VALUE4 != null and VALUE4 != ""'> AND USER_JOB = 'BUYER' AND UPPER(USER_NAME) LIKE UPPER(#{VALUE4})||'%' </if>
		 <if test='KEY4 == "qc" and VALUE4 != null and VALUE4 != ""'> AND USER_JOB='QC' AND UPPER(USER_NAME) LIKE UPPER(#{VALUE4})||'%'</if>
		 <if test='KEY4 == "sm" and VALUE4 != null and VALUE4 != ""'> AND USER_JOB='SM' AND UPPER(USER_NAME) LIKE UPPER(#{VALUE4})||'%'</if>
		 <if test='KEY4 == "attribute7" and VALUE4 != null and VALUE4 != ""'> AND UPPER(ZIM_IN.ATTRIBUTE7) LIKE '%' || UPPER(#{VALUE4})||'%'</if>
		 <if test='KEY4 == "attribute3" and VALUE4 != null and VALUE4 != ""'> AND UPPER(ZIM_IN.ATTRIBUTE3) LIKE '%' || UPPER(#{VALUE4})||'%'</if>
		 <if test='KEY4 == "attribute10" and VALUE4 != null and VALUE4 != ""'> AND UPPER(ZIM_IN.ATTRIBUTE10) LIKE '%' || UPPER(#{VALUE4})||'%'</if>
		 <if test='KEY4 == "attribute6" and VALUE4 != null and VALUE4 != ""'> AND UPPER(ZIM_IN.ATTRIBUTE6) LIKE '%' || UPPER(#{VALUE4})||'%'</if>
		 <if test='KEY4 == "invoice_num" and VALUE4 != null and VALUE4 != ""'> AND UPPER(DI.INVOICE_NUM) LIKE '%' || UPPER(#{VALUE4})||'%'</if>
		 <if test='KEY3 == "plan" '>
		 	<if test='(VALUE2 != null and VALUE2 !="") or (VALUE3 != null and VALUE3 !="")'>
		 		<if test='KEY2 == "mps"'> AND MPS_PLAN_DATE BETWEEN TO_DATE(NVL(#{VALUE2},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE3},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 		<if test='KEY2 == "po"'> AND PO_PLAN_DATE BETWEEN TO_DATE(NVL(#{VALUE2},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE3},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 		<if test='KEY2 == "cargo"'> AND CARGO_PLAN_DATE BETWEEN TO_DATE(NVL(#{VALUE2},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE3},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 		<if test='KEY2 == "fob"'> AND FOB_PLAN_DATE BETWEEN TO_DATE(NVL(#{VALUE2},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE3},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 		<if test='KEY2 == "onsite"'> AND ONSITE_PLAN_DATE BETWEEN TO_DATE(NVL(#{VALUE2},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE3},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 	</if>
		 </if>
		 <if test='KEY3 == "expected"'>
		 	<if test='(VALUE2 != null and VALUE2 !="") or (VALUE3 != null and VALUE3 !="")'>
		 		<if test='KEY2 == "mps"'> AND MPS_EXPECTED_DATE BETWEEN TO_DATE(NVL(#{VALUE2},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE3},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 		<if test='KEY2 == "po"'> AND PO_EXPECTED_DATE BETWEEN TO_DATE(NVL(#{VALUE2},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE3},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 		<if test='KEY2 == "cargo"'> AND CARGO_EXPECTED_DATE BETWEEN TO_DATE(NVL(#{VALUE2},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE3},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 		<if test='KEY2 == "fob"'> AND FOB_EXPECTED_DATE BETWEEN TO_DATE(NVL(#{VALUE2},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE3},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 		<if test='KEY2 == "onsite"'> AND ONSITE_EXPECTED_DATE BETWEEN TO_DATE(NVL(#{VALUE2},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE3},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 	</if>
		 </if>
		 <if test='KEY3 == "actual"'>
		 	<if test='(VALUE2 != null and VALUE2 !="") or (VALUE3 != null and VALUE3 !="")'>
		 		<if test='KEY2 == "mps"'> AND MPS_ACTUAL_DATE BETWEEN TO_DATE(NVL(#{VALUE2},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE3},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 		<if test='KEY2 == "po"'> AND PO_ACTUAL_DATE BETWEEN TO_DATE(NVL(#{VALUE2},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE3},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 		<if test='KEY2 == "cargo"'> AND CARGO_ACTUAL_DATE BETWEEN TO_DATE(NVL(#{VALUE2},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE3},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 		<if test='KEY2 == "fob"'> AND FOB_ACTUAL_DATE BETWEEN TO_DATE(NVL(#{VALUE2},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE3},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 		<if test='KEY2 == "onsite"'> AND ONSITE_ACTUAL_DATE BETWEEN TO_DATE(NVL(#{VALUE2},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE3},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 	</if>
		 </if>
		 <if test='KEY6 == "plan"'>
		 	<if test='(VALUE5 != null and VALUE5 !="") or (VALUE6 != null and VALUE6 !="")'>
		 		<if test='KEY5 == "mps"'> AND MPS_PLAN_DATE BETWEEN TO_DATE(NVL(#{VALUE5},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE6},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 		<if test='KEY5 == "po"'> AND PO_PLAN_DATE BETWEEN TO_DATE(NVL(#{VALUE5},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE6},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 		<if test='KEY5 == "cargo"'> AND CARGO_PLAN_DATE BETWEEN TO_DATE(NVL(#{VALUE5},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE6},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 		<if test='KEY5 == "fob"'> AND FOB_PLAN_DATE BETWEEN TO_DATE(NVL(#{VALUE5},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE6},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 		<if test='KEY5 == "onsite"'> AND ONSITE_PLAN_DATE BETWEEN TO_DATE(NVL(#{VALUE5},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE6},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 	</if>
		 </if>
		 <if test='KEY6 == "expected"'>
		 	<if test='(VALUE5 != null and VALUE5 !="") or (VALUE6 != null and VALUE6 !="")'>
		 		<if test='KEY5 == "mps"'> AND MPS_PLAN_DATE BETWEEN TO_DATE(NVL(#{VALUE5},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE6},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 		<if test='KEY5 == "po"'> AND PO_EXPECTED_DATE BETWEEN TO_DATE(NVL(#{VALUE5},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE6},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 		<if test='KEY5 == "cargo"'>	AND CARGO_EXPECTED_DATE BETWEEN TO_DATE(NVL(#{VALUE5},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE6},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 		<if test='KEY5 == "fob"'> AND FOB_EXPECTED_DATE BETWEEN TO_DATE(NVL(#{VALUE5},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE6},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 		<if test='KEY5 == "onsite"'> AND ONSITE_EXPECTED_DATE BETWEEN TO_DATE(NVL(#{VALUE5},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE6},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 	</if>
		 </if>
		 <if test='KEY6 == "actual"'>
		 	<if test='(VALUE5 != null and VALUE5 !="") or (VALUE6 != null and VALUE6 !="")'>
		 		<if test='KEY5 == "mps"'> AND MPS_ACTUAL_DATE BETWEEN TO_DATE(NVL(#{VALUE5},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE6},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 		<if test='KEY5 == "po"'> AND PO_ACTUAL_DATE BETWEEN TO_DATE(NVL(#{VALUE5},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE6},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 		<if test='KEY5 == "cargo"'> AND CARGO_ACTUAL_DATE BETWEEN TO_DATE(NVL(#{VALUE5},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE6},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 		<if test='KEY5 == "fob"'> AND FOB_ACTUAL_DATE BETWEEN TO_DATE(NVL(#{VALUE5},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE6},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 		<if test='KEY5 == "onsite"'> AND ONSITE_ACTUAL_DATE BETWEEN TO_DATE(NVL(#{VALUE5},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE6},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 	</if>
		 </if>
		 <if test='ISSUE_CHECK == "Y"'>
		 	AND (CARGO_ACTUAL_DATE IS NULL AND CARGO_PLAN_DATE <![CDATA[<]]> CARGO_EXPECTED_DATE
		 		 OR (PO_ATCUAL_DATE IS NULL AND PO_PLAN_DATE <![CDATA[<]]> PO_EXPECTED_DATE)
		 		 OR (MPS_ACTUAL_DATE IS NULL AND MPS_PLAN_DATE <![CDATA[<]]> MPS_EXPECTED_DATE)
		 		 OR (FOB_ACTUAL_DATE IS NULL AND FOB_PLAN_DATE <![CDATA[<]]> FOB_EXPECTED_DATE)
		 		 OR (ONSITE_ACTUAL_DATE IS NULL AND ONSITE_PLAN_DATE <![CDATA[<]]> ONSITE_EXPECTED_DATE)
		 		)
		 </if>
		 <if test='OFFSHORE != null and OFFSHORE !=""'> AND OFFSHORE = #{OFFSHORE}</if>
		 <if test='PROJECT_NO != ""'> AND ZIM_IN.PROJECT_NO = UPPER(#{PROJECT_NO})</if>
		)
		UNION
        SELECT ZIM.TRK_ITEM_SEQ
        ,      ZIM.TRK_ITEM_NAME
        ,      NVL(TRK_ITEM_GROUP, -1) AS TRK_ITEM_GROUP
        ,      ORGANIZATION_ID
        ,      ZIM.PROJECT_ID
        ,      ZIM.PROJECT_NO
        ,      ZIM.REMARK
        ,      PA.NAME AS PROJECT_NAME
        --,      TASK_ID
        ,      ZIM.TASK_ID
        ,      ZIM.TASK_NUMBER
        --,      (SELECT PT.TASK_NAME FROM PA_TASKS_INT PT WHERE PT.PROJECT_ID = ZIM.PROJECT_ID AND PT.TASK_ID = ZIM.TASK_ID) TASK_NAME
        ,      PTI.TASK_NAME
        ,      BATCH
        ,      OFFSHORE
        ,      PRIMAVERA_ID
        ,      TO_CHAR(MPS_PLAN_DATE, 'YYYY/MM/DD') AS MPS_PLAN_DATE
        ,      TO_CHAR(MPS_EXPECTED_DATE, 'YYYY/MM/DD') AS MPS_EXPECTED_DATE
        ,      TO_CHAR(MPS_ACTUAL_DATE, 'YYYY/MM/DD') AS MPS_ACTUAL_DATE
        ,      PURCHASE_DURATION
        ,      TO_CHAR(TE_PLAN_DATE, 'YYYY/MM/DD') AS TE_PLAN_DATE
        ,      TO_CHAR(TE_EXPECTED_DATE, 'YYYY/MM/DD') AS TE_EXPECTED_DATE
        ,      TO_CHAR(TE_ACTUAL_DATE, 'YYYY/MM/DD') AS TE_ACTUAL_DATE
        ,      TO_CHAR(PO_PLAN_DATE, 'YYYY/MM/DD') AS PO_PLAN_DATE
        ,      TO_CHAR(PO_EXPECTED_DATE, 'YYYY/MM/DD') AS PO_EXPECTED_DATE
        ,      TO_CHAR(PO_ATCUAL_DATE, 'YYYY/MM/DD') AS PO_ATCUAL_DATE
        ,      MAKE_DURATION
        ,      PROGRESS
        ,      TO_CHAR(CARGO_PLAN_DATE, 'YYYY/MM/DD') AS CARGO_PLAN_DATE
        ,      TO_CHAR(CARGO_EXPECTED_DATE, 'YYYY/MM/DD') AS CARGO_EXPECTED_DATE
        ,      TO_CHAR(CARGO_PROMISED_DATE, 'YYYY/MM/DD') AS CARGO_PROMISED_DATE
        ,      TO_CHAR(CARGO_ACTUAL_DATE, 'YYYY/MM/DD') AS CARGO_ACTUAL_DATE
        ,      SHIPMENT_DURATION
        ,      TO_CHAR(FOB_PLAN_DATE, 'YYYY/MM/DD') AS FOB_PLAN_DATE
        ,      TO_CHAR(FOB_EXPECTED_DATE, 'YYYY/MM/DD') AS FOB_EXPECTED_DATE
        ,      TO_CHAR(FOB_ACTUAL_DATE, 'YYYY/MM/DD') AS FOB_ACTUAL_DATE
        ,      TRANS_DURATION
        ,      TO_CHAR(ONSITE_PLAN_DATE, 'YYYY/MM/DD') AS ONSITE_PLAN_DATE
        ,      TO_CHAR(ONSITE_EXPECTED_DATE, 'YYYY/MM/DD') AS ONSITE_EXPECTED_DATE
        ,      TO_CHAR(ONSITE_ACTUAL_DATE, 'YYYY/MM/DD') AS ONSITE_ACTUAL_DATE
        ,      PAYMENT_MILESTONE
        ,      TRK_ITEM_DEFAULT
        ,      IAV.PM_AD
        ,      IAV.PM_NAME
        ,      IAV.EM_AD
        ,      IAV.EM_NAME
        ,      IAV.BUYER_AD
        ,      IAV.BUYER_NAME
        ,      IAV.QC_AD
        ,      IAV.QC_NAME
        ,      IAV.SM_AD
        ,      IAV.SM_NAME
        ,      CASE WHEN CARGO_PLAN_DATE <![CDATA[<]]> CARGO_EXPECTED_DATE THEN 'Y' ELSE 'N' END AS ISSUE_FLAG
        ,      ZIM.INVOICE_NUM
        ,      ZIM.ATTRIBUTE1
        ,      ZIM.ATTRIBUTE2
        ,      ZIM.ATTRIBUTE3
        ,      ZIM.ATTRIBUTE4
        ,      ZIM.ATTRIBUTE5
        ,      ZIM.ATTRIBUTE6
        ,      ZIM.ATTRIBUTE7
        ,      ZIM.ATTRIBUTE8
        ,      ZIM.ATTRIBUTE9
        ,      ZIM.ATTRIBUTE10
        ,      ZIM.LAST_UPDATE_DATE
        ,      ZIM.LAST_UPDATED_BY
        ,      ZIM.CREATION_DATE
        ,      ZIM.CREATED_BY
        ,      EMP_PM.ZORG_ID AS PM_DEPT_CODE
        ,      EMP_PM.ZORG_NM AS PM_DEPT_NAME
        ,      EMP_EM.ZORG_ID AS EM_DEPT_CODE
        ,      EMP_EM.ZORG_NM AS EM_DEPT_NAME
        ,      EMP_BUYER.ZORG_ID AS BUYER_DEPT_CODE
        ,      EMP_BUYER.ZORG_NM AS BUYER_DEPT_NAME
        ,      EMP_QC.ZORG_ID AS QC_DEPT_CODE
        ,      EMP_QC.ZORG_NM AS QC_DEPT_NAME
        ,      CASE WHEN CNT = 1 THEN AA.INVOICE_NUM
                    WHEN CNT > 1 THEN AA.INVOICE_NUM || ' 외 ' || AA.CALC_CNT  || '건'
               END  SEL_INVOICE_NUM
        ,      (SELECT CASE WHEN COUNT(*) = 0 THEN NULL ELSE COUNT(*) END
                FROM ESAATTH ATT
                WHERE 1=1
                AND ATT.GRP_CD  = ZDA.FILE_GRP_CD
                AND ATT.STS <![CDATA[<>]]> 'D'
               ) ATTH_CNT
        ,      ZDA.FILE_GRP_CD
        ,      (SELECT COUNT(*)
                FROM DESM_PACKING_MST
                WHERE PROJECT_NO = ZIM.PROJECT_NO
                AND TRK_ITEM_NAME = ZIM.TRK_ITEM_NAME
               ) AS PL_CNT
        ,      TO_CHAR(TRANS_PLAN_DATE, 'YYYY/MM/DD') AS TRANS_PLAN_DATE
        ,      TO_CHAR(TRANS_EXPECTED_DATE, 'YYYY/MM/DD') AS TRANS_EXPECTED_DATE
        ,      TO_CHAR(TRANS_ACTUAL_DATE, 'YYYY/MM/DD') AS TRANS_ACTUAL_DATE
        ,      TO_CHAR(DPPII.RFQ_1R_FROM, 'YYYY/MM/DD HH24:MI:SS') AS RFQ_1R_FROM
        ,      TO_CHAR(DPPII.RFQ_1R_TO, 'YYYY/MM/DD HH24:MI:SS') AS RFQ_1R_TO
        ,      TO_CHAR(DPPII.RFQ_2R_FROM, 'YYYY/MM/DD HH24:MI:SS') AS RFQ_2R_FROM
        ,      TO_CHAR(DPPII.RFQ_2R_TO, 'YYYY/MM/DD HH24:MI:SS') AS RFQ_2R_TO
        ,      TO_CHAR(DPPII.RFQ_3R_FROM, 'YYYY/MM/DD HH24:MI:SS') AS RFQ_3R_FROM
        ,      TO_CHAR(DPPII.RFQ_3R_TO, 'YYYY/MM/DD HH24:MI:SS') AS RFQ_3R_TO
        ,      TO_CHAR(DPPII.RFQ_4R_FROM, 'YYYY/MM/DD HH24:MI:SS') AS RFQ_4R_FROM
		,      TO_CHAR(DPPII.RFQ_4R_TO, 'YYYY/MM/DD HH24:MI:SS') AS RFQ_4R_TO
        ,      DPPII.PO_NUM
        ,      DPPII.PO_DESCRIPTION
        ,      DPPII.PO_REVISION_NUM
        ,      DPPII.RELEASE_NUM
        ,      DPPII.DOC_TYPE
        ,      DPPII.FOB
        ,      DPPII.SUPPLIER_NUMBER
        ,      DPPII.SUPPLIER_NAME
        ,      DPPII.PO_LINE_NUM
        ,      DPPII.PROMISED_DATE
        ,      DPPII.CLOSED_CODE
        ,      MG.MPR_NO
        ,      MG.MDS_P
        ,      MG.MDS_A
        ,      MG.MDA_P
        ,      MG.MDA_A
        ,      MG.MTL_P
        ,      MG.MTL_A
        ,      MG.MFG_P
        ,      MG.MFG_A
        ,      MG.FAT_P
        ,      MG.FAT_A
        ,      MG.CAR_P
        ,      MG.CAR_A
        ,      TO_CHAR(MFG_PLAN_DATE, 'YYYY/MM/DD') AS MFG_PLAN_DATE
        ,      TO_CHAR(MFG_EXPECTED_DATE, 'YYYY/MM/DD') AS MFG_EXPECTED_DATE
        ,      TO_CHAR(MFG_ACTUAL_DATE, 'YYYY/MM/DD') AS MFG_ACTUAL_DATE
        ,	   TE_DURATION
        ,      CARGO_DURATION
        ,      ONSITE_DURATION
        ,	   CON_PROJECT_NO
        ,      CASE WHEN ZIM.TASK_NUMBER IS NULL THEN 0
                    WHEN ZIM.TASK_NUMBER IS NOT NULL AND ZIM.ATTRIBUTE1 IS NOT NULL THEN 0
                    WHEN ZIM.TASK_NUMBER IS NOT NULL AND ZIM.ATTRIBUTE1 IS NULL THEN (SELECT COUNT(1) FROM DESM_PR_PO_INFO_INT WHERE PROJECT_NO = NVL(ZIM.CON_PROJECT_NO, ZIM.PROJECT_NO) AND TASK_NUMBER = ZIM.TASK_NUMBER)
                    ELSE 0
               END AS IS_PR_MAPPED
        FROM ZVTS_ITEM_MASTER ZIM
        ,    ZVTS_ITEM_ADMIN_V IAV
        ,    PA_PROJECTS_ALL_INT PA
        ,    WITH_ZVTS_EMP EMP_PM
        ,    WITH_ZVTS_EMP EMP_EM
        ,    WITH_ZVTS_EMP EMP_BUYER
        ,    WITH_ZVTS_EMP EMP_QC
        ,    WITH_ZVTS_EMP EMP_SM
        ,    ZVTS_DESM_ATTACH ZDA
        ,    (SELECT DI.TRK_ITEM_SEQ
            ,      COUNT(*) CNT
            ,      COUNT(*) - 1 CALC_CNT
            ,      MAX(DI.INVOICE_NUM) INVOICE_NUM
            FROM ZVTS_DESM_INVOICE DI
            WHERE 1=1 --DI.TRK_ITEM_SEQ = ZIM.TRK_ITEM_SEQ
            GROUP BY DI.TRK_ITEM_SEQ
            ) AA
        ,   DESM_PR_PO_INFO_INT DPPII
        ,   (SELECT MPR_NO
              ,      MAX(MDS_P) AS MDS_P
              ,      MAX(MDS_A) AS MDS_A
              ,      MAX(MDA_P) AS MDA_P
              ,      MAX(MDA_A) AS MDA_A
              ,      MAX(MTL_P) AS MTL_P
              ,      MAX(MTL_A) AS MTL_A
              ,      MAX(MFG_P) AS MFG_P
              ,      MAX(MFG_A) AS MFG_A
              ,      MAX(FAT_P) AS FAT_P
              ,      MAX(FAT_A) AS FAT_A
              ,      MAX(CAR_P) AS CAR_P
              ,      MAX(CAR_A) AS CAR_A
              FROM WITH_MPR_GROUP
              GROUP BY MPR_NO
             ) MG
        ,    (SELECT PT.PROJECT_ID
              ,      PT.TASK_ID
              ,      PT.TASK_NAME
              FROM PA_TASKS_INT PT
             ) PTI
        WHERE 1=1
        AND ZIM.PROJECT_ID = PA.PROJECT_ID
        AND ZIM.TRK_ITEM_SEQ = IAV.TRK_ITEM_SEQ(+)
        AND IAV.PM_AD = EMP_PM.AD_USER_ID(+)
        AND IAV.EM_AD = EMP_EM.AD_USER_ID(+)
        AND IAV.BUYER_AD = EMP_BUYER.AD_USER_ID(+)
        AND IAV.QC_AD = EMP_QC.AD_USER_ID(+)
        AND IAV.SM_AD = EMP_SM.AD_USER_ID(+)
        AND ZIM.TRK_ITEM_SEQ = AA.TRK_ITEM_SEQ(+)
        AND ZIM.PROJECT_NO = ZDA.PROJECT_NO(+)
        AND ZIM.TRK_ITEM_NAME = ZDA.TRK_ITEM_NAME(+)
        AND ZIM.ATTRIBUTE1 = DPPII.REQUISITION_NUM(+)
        AND ZIM.ATTRIBUTE4 = DPPII.REQUISITION_LINE_NUM(+)
        AND ZIM.ATTRIBUTE5 = MG.MPR_NO(+)
        AND ZIM.PROJECT_ID = PTI.PROJECT_ID(+)
        AND ZIM.TASK_ID = PTI.TASK_ID(+)
        CONNECT BY PRIOR ZIM.TRK_ITEM_SEQ = ZIM.TRK_ITEM_GROUP
        START WITH ZIM.TRK_ITEM_SEQ IN
        (
        SELECT DISTINCT ZIM_IN.TRK_ITEM_SEQ
        FROM ZVTS_ITEM_MASTER ZIM_IN
        ,    ZVTS_ITEM_MASTER_AUTH IAV
        ,    PA_PROJECTS_ALL_INT PA
        ,    PA_PROJECTS_ALL_INT PA_INTER
        ,    ZVTS_EMP EMP
        ,    ZVTS_DESM_INVOICE DI
        WHERE 1=1
        AND ZIM_IN.PROJECT_ID = PA.PROJECT_ID
        AND ZIM_IN.TRK_ITEM_SEQ = IAV.TRK_ITEM_SEQ(+)
        AND ZIM_IN.ATTRIBUTE8 = PA_INTER.SEGMENT1(+)
        AND IAV.USER_AD = EMP.AD_USER_ID(+)
        AND ZIM_IN.TRK_ITEM_SEQ = DI.TRK_ITEM_SEQ(+)
        <if test='VIEW_TYPE == "INTER"'>
         	AND ZIM_IN.PROJECT_NO LIKE 'Z%'
         	<if test='KEY1 == "project_name" and VALUE1 != null and VALUE1 != ""'> AND UPPER(PA.NAME) LIKE UPPER(#{VALUE1})||'%'</if>
		 	<if test='KEY1 == "project_no" and VALUE1 != null and VALUE1 != ""'> AND ZIM_IN.PROJECT_NO = UPPER(#{VALUE1})</if>
		 	<if test='KEY4 == "project_name" and VALUE4 != null and VALUE4 != ""'> AND UPPER(PA.NAME) LIKE UPPER(#{VALUE4})||'%'</if>
		 	<if test='KEY4 == "project_no" and VALUE4 != null and VALUE4 != ""'> AND ZIM_IN.PROJECT_NO = UPPER(#{VALUE4})</if>
		 </if>
		 <if test='VIEW_TYPE != "INTER"'>
		 	<if test='KEY1 == "project_name" and VALUE1 != null and VALUE1 != ""'> AND UPPER(PA.NAME) LIKE UPPER(#{VALUE1})||'%'</if>
		 	<if test='KEY1 == "project_no" and VALUE1 != null and VALUE1 != ""'> AND ZIM_IN.PROJECT_NO = UPPER(#{VALUE1})</if>
			<if test='KEY4 == "project_name" and VALUE4 != null and VALUE4 != ""'> AND UPPER(PA.NAME) LIKE UPPER(#{VALUE4})||'%'</if>
		 	<if test='KEY4 == "project_no" and VALUE4 != null and VALUE4 != ""'> AND ZIM_IN.PROJECT_NO = UPPER(#{VALUE4})</if>
		 </if>
		 <if test='KEY1 == "item" and VALUE1 != null and VALUE1 != ""'> AND UPPER(TRK_ITEM_NAME) LIKE '%' || UPPER(#{VALUE1})||'%'</if>
		 <if test='KEY1 == "pm" and VALUE1 != null and VALUE1 != ""'> AND (IAV.PM_AD LIKE  '%' ||UPPER(#{VALUE1})||'%' OR IAV.PM_NAME LIKE  '%' ||UPPER(#{VALUE1})||'%')</if>
		 <if test='KEY1 == "em" and VALUE1 != null and VALUE1 != ""'> AND (IAV.EM_AD LIKE  '%' ||UPPER(#{VALUE1})||'%' OR IAV.EM_NAME LIKE  '%' ||UPPER(#{VALUE1})||'%')</if>
		 <if test='KEY1 == "buyer" and VALUE1 != null and VALUE1 != ""'> AND (IAV.BUYER_AD LIKE  '%' ||UPPER(#{VALUE1})||'%' OR IAV.BUYER_NAME LIKE  '%' ||UPPER(#{VALUE1})||'%')</if>
		 <if test='KEY1 == "qc" and VALUE1 != null and VALUE1 != ""'> AND (IAV.QC_AD LIKE  '%' ||UPPER(#{VALUE1})||'%' OR IAV.QC_NAME LIKE  '%' ||UPPER(#{VALUE1})||'%')</if>
		 <if test='KEY1 == "sm" and VALUE1 != null and VALUE1 != ""'> AND (IAV.SM_AD LIKE  '%' ||UPPER(#{VALUE1})||'%' OR IAV.SM_NAME LIKE  '%' ||UPPER(#{VALUE1})||'%')</if>
		 <if test='KEY1 == "attribute7" and VALUE1 != null and VALUE1 != ""'> AND UPPER(ZIM_IN.ATTRIBUTE7) LIKE '%' || UPPER(#{VALUE1})||'%'</if>
		 <if test='KEY1 == "attribute3" and VALUE1 != null and VALUE1 != ""'> AND UPPER(ZIM_IN.ATTRIBUTE3) LIKE '%' || UPPER(#{VALUE1})||'%'</if>
		 <if test='KEY1 == "attribute10" and VALUE1 != null and VALUE1 != ""'> AND UPPER(ZIM_IN.ATTRIBUTE10) LIKE '%' || UPPER(#{VALUE1})||'%'</if>
		 <if test='KEY1 == "attribute6" and VALUE1 != null and VALUE1 != ""'> AND UPPER(ZIM_IN.ATTRIBUTE6) LIKE '%' || UPPER(#{VALUE1})||'%'</if>
		 <if test='KEY1 == "invoice_num" and VALUE1 != null and VALUE1 != ""'> AND UPPER(DI.INVOICE_NUM) LIKE '%' || UPPER(#{VALUE1})||'%'</if>
		 <if test='KEY4 == "item" and VALUE4 != null and VALUE4 != ""'> AND UPPER(TRK_ITEM_NAME) LIKE '%' || UPPER(#{VALUE4})||'%'</if>
		 <if test='KEY4 == "pm" and VALUE4 != null and VALUE4 != ""'> AND USER_JOB = 'PM' AND UPPER(USER_NAME) LIKE UPPER(#{VALUE4})||'%'</if>
		 <if test='KEY4 == "em" and VALUE4 != null and VALUE4 != ""'> AND USER_JOB = 'EM' AND UPPER(USER_NAME) LIKE UPPER(#{VALUE4})||'%'</if>
		 <if test='KEY4 == "buyer" and VALUE4 != null and VALUE4 != ""'> AND USER_JOB = 'BUYER' AND UPPER(USER_NAME) LIKE UPPER(#{VALUE4})||'%' </if>
		 <if test='KEY4 == "qc" and VALUE4 != null and VALUE4 != ""'> AND USER_JOB='QC' AND UPPER(USER_NAME) LIKE UPPER(#{VALUE4})||'%'</if>
		 <if test='KEY4 == "sm" and VALUE4 != null and VALUE4 != ""'> AND USER_JOB='SM' AND UPPER(USER_NAME) LIKE UPPER(#{VALUE4})||'%'</if>
		 <if test='KEY4 == "attribute7" and VALUE4 != null and VALUE4 != ""'> AND UPPER(ZIM_IN.ATTRIBUTE7) LIKE '%' || UPPER(#{VALUE4})||'%'</if>
		 <if test='KEY4 == "attribute3" and VALUE4 != null and VALUE4 != ""'> AND UPPER(ZIM_IN.ATTRIBUTE3) LIKE '%' || UPPER(#{VALUE4})||'%'</if>
		 <if test='KEY4 == "attribute10" and VALUE4 != null and VALUE4 != ""'> AND UPPER(ZIM_IN.ATTRIBUTE10) LIKE '%' || UPPER(#{VALUE4})||'%'</if>
		 <if test='KEY4 == "attribute6" and VALUE4 != null and VALUE4 != ""'> AND UPPER(ZIM_IN.ATTRIBUTE6) LIKE '%' || UPPER(#{VALUE4})||'%'</if>
		 <if test='KEY4 == "invoice_num" and VALUE4 != null and VALUE4 != ""'> AND UPPER(DI.INVOICE_NUM) LIKE '%' || UPPER(#{VALUE4})||'%'</if>
		 <if test='KEY3 == "plan" '>
		 	<if test='(VALUE2 != null and VALUE2 !="") or (VALUE3 != null and VALUE3 !="")'>
		 		<if test='KEY2 == "mps"'> AND MPS_PLAN_DATE BETWEEN TO_DATE(NVL(#{VALUE2},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE3},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 		<if test='KEY2 == "po"'> AND PO_PLAN_DATE BETWEEN TO_DATE(NVL(#{VALUE2},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE3},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 		<if test='KEY2 == "cargo"'> AND CARGO_PLAN_DATE BETWEEN TO_DATE(NVL(#{VALUE2},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE3},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 		<if test='KEY2 == "fob"'> AND FOB_PLAN_DATE BETWEEN TO_DATE(NVL(#{VALUE2},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE3},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 		<if test='KEY2 == "onsite"'> AND ONSITE_PLAN_DATE BETWEEN TO_DATE(NVL(#{VALUE2},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE3},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 	</if>
		 </if>
		 <if test='KEY3 == "expected"'>
		 	<if test='(VALUE2 != null and VALUE2 !="") or (VALUE3 != null and VALUE3 !="")'>
		 		<if test='KEY2 == "mps"'> AND MPS_EXPECTED_DATE BETWEEN TO_DATE(NVL(#{VALUE2},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE3},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 		<if test='KEY2 == "po"'> AND PO_EXPECTED_DATE BETWEEN TO_DATE(NVL(#{VALUE2},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE3},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 		<if test='KEY2 == "cargo"'> AND CARGO_EXPECTED_DATE BETWEEN TO_DATE(NVL(#{VALUE2},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE3},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 		<if test='KEY2 == "fob"'> AND FOB_EXPECTED_DATE BETWEEN TO_DATE(NVL(#{VALUE2},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE3},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 		<if test='KEY2 == "onsite"'> AND ONSITE_EXPECTED_DATE BETWEEN TO_DATE(NVL(#{VALUE2},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE3},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 	</if>
		 </if>
		 <if test='KEY3 == "actual"'>
		 	<if test='(VALUE2 != null and VALUE2 !="") or (VALUE3 != null and VALUE3 !="")'>
		 		<if test='KEY2 == "mps"'> AND MPS_ACTUAL_DATE BETWEEN TO_DATE(NVL(#{VALUE2},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE3},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 		<if test='KEY2 == "po"'> AND PO_ACTUAL_DATE BETWEEN TO_DATE(NVL(#{VALUE2},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE3},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 		<if test='KEY2 == "cargo"'> AND CARGO_ACTUAL_DATE BETWEEN TO_DATE(NVL(#{VALUE2},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE3},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 		<if test='KEY2 == "fob"'> AND FOB_ACTUAL_DATE BETWEEN TO_DATE(NVL(#{VALUE2},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE3},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 		<if test='KEY2 == "onsite"'> AND ONSITE_ACTUAL_DATE BETWEEN TO_DATE(NVL(#{VALUE2},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE3},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 	</if>
		 </if>
		 <if test='KEY6 == "plan"'>
		 	<if test='(VALUE5 != null and VALUE5 !="") or (VALUE6 != null and VALUE6 !="")'>
		 		<if test='KEY5 == "mps"'> AND MPS_PLAN_DATE BETWEEN TO_DATE(NVL(#{VALUE5},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE6},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 		<if test='KEY5 == "po"'> AND PO_PLAN_DATE BETWEEN TO_DATE(NVL(#{VALUE5},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE6},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 		<if test='KEY5 == "cargo"'> AND CARGO_PLAN_DATE BETWEEN TO_DATE(NVL(#{VALUE5},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE6},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 		<if test='KEY5 == "fob"'> AND FOB_PLAN_DATE BETWEEN TO_DATE(NVL(#{VALUE5},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE6},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 		<if test='KEY5 == "onsite"'> AND ONSITE_PLAN_DATE BETWEEN TO_DATE(NVL(#{VALUE5},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE6},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 	</if>
		 </if>
		 <if test='KEY6 == "expected"'>
		 	<if test='(VALUE5 != null and VALUE5 !="") or (VALUE6 != null and VALUE6 !="")'>
		 		<if test='KEY5 == "mps"'> AND MPS_PLAN_DATE BETWEEN TO_DATE(NVL(#{VALUE5},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE6},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 		<if test='KEY5 == "po"'> AND PO_EXPECTED_DATE BETWEEN TO_DATE(NVL(#{VALUE5},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE6},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 		<if test='KEY5 == "cargo"'>	AND CARGO_EXPECTED_DATE BETWEEN TO_DATE(NVL(#{VALUE5},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE6},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 		<if test='KEY5 == "fob"'> AND FOB_EXPECTED_DATE BETWEEN TO_DATE(NVL(#{VALUE5},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE6},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 		<if test='KEY5 == "onsite"'> AND ONSITE_EXPECTED_DATE BETWEEN TO_DATE(NVL(#{VALUE5},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE6},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 	</if>
		 </if>
		 <if test='KEY6 == "actual"'>
		 	<if test='(VALUE5 != null and VALUE5 !="") or (VALUE6 != null and VALUE6 !="")'>
		 		<if test='KEY5 == "mps"'> AND MPS_ACTUAL_DATE BETWEEN TO_DATE(NVL(#{VALUE5},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE6},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 		<if test='KEY5 == "po"'> AND PO_ACTUAL_DATE BETWEEN TO_DATE(NVL(#{VALUE5},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE6},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 		<if test='KEY5 == "cargo"'> AND CARGO_ACTUAL_DATE BETWEEN TO_DATE(NVL(#{VALUE5},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE6},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 		<if test='KEY5 == "fob"'> AND FOB_ACTUAL_DATE BETWEEN TO_DATE(NVL(#{VALUE5},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE6},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 		<if test='KEY5 == "onsite"'> AND ONSITE_ACTUAL_DATE BETWEEN TO_DATE(NVL(#{VALUE5},'1970/01/01'),'YYYY/MM/DD') AND TO_DATE(NVL(#{VALUE6},'9999/12/31'),'YYYY/MM/DD') + 0.99999</if>
		 	</if>
		 </if>
		 <if test='ISSUE_CHECK == "Y"'>
		 	AND (CARGO_ACTUAL_DATE IS NULL AND CARGO_PLAN_DATE <![CDATA[<]]> CARGO_EXPECTED_DATE
		 		 OR (PO_ATCUAL_DATE IS NULL AND PO_PLAN_DATE <![CDATA[<]]> PO_EXPECTED_DATE)
		 		 OR (MPS_ACTUAL_DATE IS NULL AND MPS_PLAN_DATE <![CDATA[<]]> MPS_EXPECTED_DATE)
		 		 OR (FOB_ACTUAL_DATE IS NULL AND FOB_PLAN_DATE <![CDATA[<]]> FOB_EXPECTED_DATE)
		 		 OR (ONSITE_ACTUAL_DATE IS NULL AND ONSITE_PLAN_DATE <![CDATA[<]]> ONSITE_EXPECTED_DATE)
		 		)
		 </if>
		 <if test='OFFSHORE != null and OFFSHORE !=""'> AND OFFSHORE = #{OFFSHORE}</if>
		 <if test='PROJECT_NO != ""'> AND ZIM_IN.PROJECT_NO = UPPER(#{PROJECT_NO})</if>
		 )
	</select>
	
	<update id="saveIdsmSetupT" parameterType="java.util.Map">
		/* IdsmMapper.saveIdsmSetupT : 기자재 일정관리 Main grid Save*/
		MERGE INTO ZVTS_ITEM_MASTER
        USING DUAL
        ON (TRK_ITEM_SEQ = #{TRK_ITEM_SEQ})
        WHEN MATCHED THEN
        UPDATE SET TRK_ITEM_NAME = #{TRK_ITEM_NAME}
        ,          TRK_ITEM_GROUP = DECODE(#{TRK_ITEM_GROUP}, '-1', NULL, #{TRK_ITEM_GROUP})
        ,          ORGANIZATION_ID = #{ORGANIZATION_ID}
        ,          PROJECT_ID = #{PROJECT_ID}
        ,          PROJECT_NO = UPPER(#{PROJECT_NO})
        ,          TASK_ID = (SELECT PT.TASK_ID
                              FROM PA_TASKS PT,
                              PA_PROJECTS_ALL_INT PPA
                              WHERE PPA.SEGMENT1 = UPPER(#{PROJECT_NO})
                              AND PPA.PROJECT_ID = PT.PROJECT_ID
                              AND PT.TASK_NUMBER = UPPER(#{TASK_NUMBER})
                             )
        ,          TASK_NUMBER = #{TASK_NUMBER}
        ,          BATCH = #{BATCH}
        ,          OFFSHORE = #{OFFSHORE}
        ,          PRIMAVERA_ID = #{PRIMAVERA_ID}
        ,          INVOICE_NUM = #{INVOICE_NUM}
        ,          MPS_PLAN_DATE = TO_DATE (#{MPS_PLAN_DATE},'YYYY/MM/DD')
        ,          MPS_EXPECTED_DATE = TO_DATE(#{MPS_EXPECTED_DATE},'YYYY/MM/DD')
        ,          MPS_ACTUAL_DATE = TO_DATE(#{MPS_ACTUAL_DATE},'YYYY/MM/DD')
        ,          TE_PLAN_DATE = TO_DATE (#{TE_PLAN_DATE},'YYYY/MM/DD')
        ,          TE_EXPECTED_DATE = TO_DATE(#{TE_EXPECTED_DATE},'YYYY/MM/DD')
        ,          TE_ACTUAL_DATE = TO_DATE(#{TE_ACTUAL_DATE},'YYYY/MM/DD')
        ,          PURCHASE_DURATION = #{PURCHASE_DURATION}
        ,          PO_PLAN_DATE = TO_DATE(#{PO_PLAN_DATE},'YYYY/MM/DD')
        ,          PO_EXPECTED_DATE = TO_DATE(#{PO_EXPECTED_DATE},'YYYY/MM/DD')
        ,          PO_ATCUAL_DATE = TO_DATE(#{PO_ATCUAL_DATE},'YYYY/MM/DD')
        ,          MAKE_DURATION = #{MAKE_DURATION}
        ,          PROGRESS = #{PROGRESS}
        ,          CARGO_PLAN_DATE = TO_DATE(#{CARGO_PLAN_DATE},'YYYY/MM/DD')
        ,          CARGO_EXPECTED_DATE = TO_DATE(#{CARGO_EXPECTED_DATE},'YYYY/MM/DD')
        ,          CARGO_PROMISED_DATE = TO_DATE(#{CARGO_PROMISED_DATE},'YYYY/MM/DD')
        ,          CARGO_ACTUAL_DATE = TO_DATE(#{CARGO_ACTUAL_DATE},'YYYY/MM/DD')
        ,          SHIPMENT_DURATION = #{SHIPMENT_DURATION}
        ,          FOB_PLAN_DATE = TO_DATE(#{FOB_PLAN_DATE},'YYYY/MM/DD')
        ,          FOB_EXPECTED_DATE = TO_DATE(#{FOB_EXPECTED_DATE},'YYYY/MM/DD')
        ,          FOB_ACTUAL_DATE = TO_DATE(#{FOB_ACTUAL_DATE},'YYYY/MM/DD')
        ,          TRANS_DURATION = #{TRANS_DURATION}
        ,          ONSITE_PLAN_DATE = TO_DATE(#{ONSITE_PLAN_DATE},'YYYY/MM/DD')
        ,          ONSITE_EXPECTED_DATE = TO_DATE(#{ONSITE_EXPECTED_DATE},'YYYY/MM/DD')
        ,          ONSITE_ACTUAL_DATE = TO_DATE(#{ONSITE_ACTUAL_DATE},'YYYY/MM/DD')
        ,          PAYMENT_MILESTONE = #{PAYMENT_MILESTONE}
        ,          TRK_ITEM_DEFAULT = #{TRK_ITEM_DEFAULT}
        ,          PM_AD = #{PM_AD}
        ,          PM_NAME = #{PM_NAME}
        ,          EM_AD = #{EM_AD}
        ,          EM_NAME = #{EM_NAME}
        ,          BUYER_AD = #{BUYER_AD}
        ,          BUYER_NAME = #{BUYER_NAME}
        ,          QC_AD = #{QC_AD}
        ,          QC_NAME = #{QC_NAME}
        ,          SM_AD = #{SM_AD}
        ,          SM_NAME = #{SM_NAME}
        ,          ATTRIBUTE1 = #{ATTRIBUTE1}
        ,          ATTRIBUTE2 = #{ATTRIBUTE2}
        ,          ATTRIBUTE3 = #{ATTRIBUTE3}
        ,          ATTRIBUTE4 = #{ATTRIBUTE4}
        ,          ATTRIBUTE5 = #{ATTRIBUTE5}
        ,          ATTRIBUTE6 = #{ATTRIBUTE6}
        ,          ATTRIBUTE7 = #{ATTRIBUTE7}
        ,          ATTRIBUTE8 = #{ATTRIBUTE8}
        ,          ATTRIBUTE10 = #{ATTRIBUTE10}
        ,          TRANS_PLAN_DATE = TO_DATE (#{TRANS_PLAN_DATE},'YYYY/MM/DD')
        ,          TRANS_EXPECTED_DATE = TO_DATE(#{TRANS_EXPECTED_DATE},'YYYY/MM/DD')
        ,          TRANS_ACTUAL_DATE = TO_DATE(#{TRANS_ACTUAL_DATE},'YYYY/MM/DD')
        ,          MFG_PLAN_DATE = TO_DATE (#{MFG_PLAN_DATE},'YYYY/MM/DD')
        ,          MFG_EXPECTED_DATE = TO_DATE(#{MFG_EXPECTED_DATE},'YYYY/MM/DD')
        ,          MFG_ACTUAL_DATE = TO_DATE(#{MFG_ACTUAL_DATE},'YYYY/MM/DD')
        ,          TE_DURATION = #{TE_DURATION}
        ,          CARGO_DURATION = #{CARGO_DURATION}
        ,          ONSITE_DURATION = #{ONSITE_DURATION}
        ,		   CON_PROJECT_NO = #{CON_PROJECT_NO}
        ,          LAST_UPDATE_DATE = SYSDATE
        ,          LAST_UPDATED_BY = #{USER_AD}
        WHEN NOT MATCHED THEN
        INSERT (TRK_ITEM_SEQ
        ,       TRK_ITEM_NAME
        ,       TRK_ITEM_GROUP
        ,       ORGANIZATION_ID
        ,       PROJECT_ID
        ,       PROJECT_NO
        ,       TASK_ID
        ,       TASK_NUMBER
        ,       BATCH
        ,       OFFSHORE
        ,       PRIMAVERA_ID
        ,       INVOICE_NUM
        ,       MPS_PLAN_DATE
        ,       MPS_EXPECTED_DATE
        ,       MPS_ACTUAL_DATE
        ,       PURCHASE_DURATION
        ,       TE_PLAN_DATE
        ,       TE_EXPECTED_DATE
        ,       TE_ACTUAL_DATE
        ,       PO_PLAN_DATE
        ,       PO_EXPECTED_DATE
        ,       PO_ATCUAL_DATE
        ,       MAKE_DURATION
        ,       PROGRESS
        ,       CARGO_PLAN_DATE
        ,       CARGO_EXPECTED_DATE
        ,       CARGO_PROMISED_DATE
        ,       CARGO_ACTUAL_DATE
        ,       SHIPMENT_DURATION
        ,       FOB_PLAN_DATE
        ,       FOB_EXPECTED_DATE
        ,       FOB_ACTUAL_DATE
        ,       TRANS_DURATION
        ,       ONSITE_PLAN_DATE
        ,       ONSITE_EXPECTED_DATE
        ,       ONSITE_ACTUAL_DATE
        ,       PAYMENT_MILESTONE
        ,       TRK_ITEM_DEFAULT
        ,       ATTRIBUTE1
        ,       ATTRIBUTE2
        ,       ATTRIBUTE3
        ,       ATTRIBUTE4
        ,       ATTRIBUTE5
        ,       ATTRIBUTE6
        ,       ATTRIBUTE7
        ,       ATTRIBUTE8
        ,       ATTRIBUTE10
        ,       TRANS_PLAN_DATE
        ,       TRANS_EXPECTED_DATE
        ,       TRANS_ACTUAL_DATE
        ,       MFG_PLAN_DATE
        ,       MFG_EXPECTED_DATE
        ,       MFG_ACTUAL_DATE
        ,       TE_DURATION
        ,       CARGO_DURATION
        ,       ONSITE_DURATION
        ,		CON_PROJECT_NO
        ,       LAST_UPDATE_DATE
        ,       LAST_UPDATED_BY
        ,       CREATION_DATE
        ,       CREATED_BY)
        VALUES (#{TRK_ITEM_SEQ}
        ,       #{TRK_ITEM_NAME}
        ,       DECODE(#{TRK_ITEM_GROUP}, '-1', NULL, #{TRK_ITEM_GROUP})
        ,       #{ORGANIZATION_ID}
        ,       #{PROJECT_ID}
        ,       UPPER(#{PROJECT_NO})
        ,       (SELECT PT.TASK_ID
                 FROM PA_TASKS PT,
                 PA_PROJECTS_ALL_INT PPA
                 WHERE PPA.SEGMENT1 = UPPER(#{PROJECT_NO})
                 AND PPA.PROJECT_ID = PT.PROJECT_ID
                 AND PT.TASK_NUMBER = UPPER(#{TASK_NUMBER})
                )
        ,       #{TASK_NUMBER}
        ,       #{BATCH}
        ,       #{OFFSHORE}
        ,       #{PRIMAVERA_ID}
        ,       #{INVOICE_NUM}
        ,       TO_DATE (#{MPS_PLAN_DATE},'YYYY/MM/DD')
        ,       TO_DATE(#{MPS_EXPECTED_DATE},'YYYY/MM/DD')
        ,       TO_DATE(#{MPS_ACTUAL_DATE},'YYYY/MM/DD')
        ,       #{PURCHASE_DURATION}
        ,       TO_DATE (#{TE_PLAN_DATE},'YYYY/MM/DD')
        ,       TO_DATE(#{TE_EXPECTED_DATE},'YYYY/MM/DD')
        ,       TO_DATE(#{TE_ACTUAL_DATE},'YYYY/MM/DD')
        ,       TO_DATE(#{PO_PLAN_DATE},'YYYY/MM/DD')
        ,       TO_DATE(#{PO_EXPECTED_DATE},'YYYY/MM/DD')
        ,       TO_DATE(#{PO_ATCUAL_DATE},'YYYY/MM/DD')
        ,       #{MAKE_DURATION}
        ,       #{PROGRESS}
        ,       TO_DATE(#{CARGO_PLAN_DATE},'YYYY/MM/DD')
        ,       TO_DATE(#{CARGO_EXPECTED_DATE},'YYYY/MM/DD')
        ,       TO_DATE(#{CARGO_PROMISED_DATE},'YYYY/MM/DD')
        ,       TO_DATE(#{CARGO_ACTUAL_DATE},'YYYY/MM/DD')
        ,       #{SHIPMENT_DURATION}
        ,       TO_DATE(#{FOB_PLAN_DATE},'YYYY/MM/DD')
        ,       TO_DATE(#{FOB_EXPECTED_DATE},'YYYY/MM/DD')
        ,       TO_DATE(#{FOB_ACTUAL_DATE},'YYYY/MM/DD')
        ,       #{TRANS_DURATION}
        ,       TO_DATE(#{ONSITE_PLAN_DATE},'YYYY/MM/DD')
        ,       TO_DATE(#{ONSITE_EXPECTED_DATE},'YYYY/MM/DD')
        ,       TO_DATE(#{ONSITE_ACTUAL_DATE},'YYYY/MM/DD')
        ,       #{PAYMENT_MILESTONE}
        ,       #{TRK_ITEM_DEFAULT}
        ,       #{ATTRIBUTE1}
        ,       #{ATTRIBUTE2}
        ,       #{ATTRIBUTE3}
        ,       #{ATTRIBUTE4}
        ,       #{ATTRIBUTE5}
        ,       #{ATTRIBUTE6}
        ,       #{ATTRIBUTE7}
        ,       #{ATTRIBUTE8}
        ,       #{ATTRIBUTE10}
        ,       TO_DATE(#{TRANS_PLAN_DATE},'YYYY/MM/DD')
        ,       TO_DATE(#{TRANS_EXPECTED_DATE},'YYYY/MM/DD')
        ,       TO_DATE(#{TRANS_ACTUAL_DATE},'YYYY/MM/DD')
        ,       TO_DATE(#{MFG_PLAN_DATE},'YYYY/MM/DD')
        ,       TO_DATE(#{MFG_EXPECTED_DATE},'YYYY/MM/DD')
        ,       TO_DATE(#{MFG_ACTUAL_DATE},'YYYY/MM/DD')
        ,       #{TE_DURATION}
        ,       #{CARGO_DURATION}
        ,       #{ONSITE_DURATION}
        ,	    #{CON_PROJECT_NO}
        ,       SYSDATE
        ,       #{USER_AD}
        ,       SYSDATE
        ,       #{USER_AD})
    </update>
    
    <!-- 
    	Spare part & Special Tool
     -->  
	<select id="getIdsmSupplySpSt" parameterType="java.util.Map" resultType="java.util.HashMap">
		/* IdsmMapper.xml -> getIdsmSupplySpSt : Spare part &amp; Special Tool Main Grid 조회 */
    	SELECT
    		  SPST.SPST_CODE
			, SPST.PROJECT_NO
			, SPST.TYPE
			, SPST.CATEGORY
			, SPST.LEVEL1
			, SPST.LEVEL2
			, SPST.LEVEL3
			, SPST.LEVEL4
			, SPST.DESC_SYSTEM
			, SPST.DESC_EQUIPMENT
			, SPST.KKS_NO
			, SPST.DESC_TYPE
			, SPST.KEY_SPECIFICATION
			, SPST.ITEM_PART_NO
			, SPST.STORAGE_CLASSIFICATION
			, SPST.SHELF_LIFE
			, SPST.INSTALLED_QTY
			, SPST.RECOMMENDED_QTY
			, SPST.ST_QTY
			, SPST.UNIT
			, SPST.CURRENCY
			, SPST.UNIT_PRICE
			, SPST.DELIVERY
			, SPST.MANUFACTURER
			, SPST.ATTACH_GRP_CD
			, SPST.WEIGHT
			, SPST.DIMENSION
			, SPST.RELATED_DRAWING
			, SPST.TRK_ITEM_NAME
			, SPST.SHIPMENT_NO
			, SPST.SHIPMENT_SEQ
			, SPST.INVOICE_NO
			, SPST.PACKAGE_NO
			, SPST.MATERIAL_CODE
			, SPST.CREATED_BY
			, TO_CHAR(SPST.CREATION_DATE, 'YYYY/MM/DD HH24:MI:SS') AS CREATION_DATE
    	FROM DESM_SUPPLY_SP_ST SPST
    	WHERE 1=1
		<if test='PROJECT_NO != null and PROJECT_NO !=""'>
			AND SPST.PROJECT_NO = #{PROJECT_NO}
		</if>
		<if test='TYPE != null and TYPE !=""'>
			AND SPST.TYPE = #{TYPE}
		</if>
		<if test='CATEGORY != null and CATEGORY !=""'>
			AND SPST.CATEGORY = #{CATEGORY}
		</if>
		<if test='SHIPMENT_NO != null and SHIPMENT_NO !=""'>
			AND SPST.SHIPMENT_NO = #{SHIPMENT_NO}
		</if>
		<if test='DESC_SYSTEM != null and DESC_SYSTEM !=""'>
			AND SPST.DESC_SYSTEM = #{DESC_SYSTEM}
		</if>
		<if test='TRK_ITEM_NAME != null and TRK_ITEM_NAME !=""'>
			AND UPPER(SPST.TRK_ITEM_NAME) LIKE '%' || UPPER(#{TRK_ITEM_NAME}) || '%'
		</if>
		<if test='MANUFACTURER != null and MANUFACTURER !=""'>
			AND SPST.MANUFACTURER = #{MANUFACTURER}
		</if>
		<if test='INVOICE_NO != null and INVOICE_NO !=""'>
			AND SPST.INVOICE_NO = #{INVOICE_NO}
		</if>
		<if test='PACKAGE_NO != null and PACKAGE_NO !=""'>
			AND SPST.PACKAGE_NO = #{PACKAGE_NO}
		</if>
		<if test='DESC_EQUIPMENT != null and DESC_EQUIPMENT !=""'>
			AND SPST.DESC_EQUIPMENT = #{DESC_EQUIPMENT}
		</if>
		<if test='LEVEL1 != null and LEVEL1 !=""'>
			AND SPST.LEVEL1 = #{LEVEL1}
		</if>
		<if test='LEVEL2 != null and LEVEL2 !=""'>
			AND SPST.LEVEL2 = #{LEVEL2}
		</if>
		<if test='LEVEL3 != null and LEVEL3 !=""'>
			AND SPST.LEVEL3 = #{LEVEL3}
		</if>
		<if test='LEVEL4 != null and LEVEL4 !=""'>
			AND SPST.LEVEL4 = #{LEVEL4}
		</if>
     </select>
      
	<select id="getIdsmTrkItemSeq" parameterType="java.util.Map" resultType="java.util.HashMap">
		/* IdsmMapper.xml -> getIdsmTrkItemSeq : Spare part &amp; Special Tool TRK ITEM SEQ Autocomplete 조회 */
    	SELECT
    		  ZIM.TRK_ITEM_SEQ
			, ZIM.TRK_ITEM_NAME
    	FROM ZVTS_ITEM_MASTER ZIM
    	WHERE 1=1
	    <if test='keyword != null and keyword !=""'>
	   		AND (ZIM.TRK_ITEM_SEQ LIKE '%' || #{keyword} || '%' OR UPPER(ZIM.TRK_ITEM_NAME) LIKE '%' || UPPER(#{keyword}) || '%')
	    </if>
	    <if test='keyword2 != null and keyword2 !=""'>
	   		AND ZIM.PROJECT_NO = #{keyword2}
	    </if>
    </select>
     
	<update id="saveIdsmItemSupplySpSt" parameterType="java.util.Map">
		/* IdsmMapper.xml -> saveIdsmItemSupplySpSt : Spare part &amp; Special Tool Item 저장 */
		MERGE INTO DESM_SUPPLY_SP_ST
		USING DUAL
		ON (SPST_CODE = #{SPST_CODE})
		WHEN MATCHED THEN
		UPDATE SET
			  PROJECT_NO 				= #{PROJECT_NO}
			, TYPE	 					= #{TYPE}
			, CATEGORY	 				= #{CATEGORY}
			, LEVEL1	 				= #{LEVEL1}
			, LEVEL2	 				= #{LEVEL2}
			, LEVEL3	 				= #{LEVEL3}
			, LEVEL4	 				= #{LEVEL4}
			, DESC_SYSTEM	 			= #{DESC_SYSTEM}
			, DESC_EQUIPMENT	 		= #{DESC_EQUIPMENT}
			, KKS_NO	 				= #{KKS_NO}
			, DESC_TYPE 				= #{DESC_TYPE}
			, KEY_SPECIFICATION 		= #{KEY_SPECIFICATION}
			, ITEM_PART_NO 				= #{ITEM_PART_NO}
			, STORAGE_CLASSIFICATION	= #{STORAGE_CLASSIFICATION}
			, SHELF_LIFE 				= #{SHELF_LIFE}
			, INSTALLED_QTY 			= #{INSTALLED_QTY}
			, RECOMMENDED_QTY 			= #{RECOMMENDED_QTY}
			, ST_QTY 					= #{ST_QTY}
			, UNIT 						= #{UNIT}
			, CURRENCY 					= #{CURRENCY}
			, UNIT_PRICE 				= #{UNIT_PRICE}
			, DELIVERY 					= #{DELIVERY}
			, MANUFACTURER 				= #{MANUFACTURER}
			, ATTACH_GRP_CD 			= #{ATTACH_GRP_CD}
			, WEIGHT 					= #{WEIGHT}
			, DIMENSION 				= #{DIMENSION}
			, RELATED_DRAWING 			= #{RELATED_DRAWING}
			, TRK_ITEM_NAME 			= #{TRK_ITEM_NAME}
			, SHIPMENT_NO 				= #{SHIPMENT_NO}
			, SHIPMENT_SEQ 				= #{SHIPMENT_SEQ}
			, INVOICE_NO 				= #{INVOICE_NO}
			, PACKAGE_NO 				= #{PACKAGE_NO}
			, MATERIAL_CODE 			= #{MATERIAL_CODE}
		    , LAST_UPDATE_DATE 			= SYSDATE
		    , LAST_UPDATED_BY 			= #{USER_AD}
		WHEN NOT MATCHED THEN
		INSERT (
			  SPST_CODE
			, PROJECT_NO
			, TYPE
			, CATEGORY
			, LEVEL1
			, LEVEL2
			, LEVEL3
			, LEVEL4
			, DESC_SYSTEM
			, DESC_EQUIPMENT
			, KKS_NO
			, DESC_TYPE
			, KEY_SPECIFICATION
			, ITEM_PART_NO
			, STORAGE_CLASSIFICATION
			, SHELF_LIFE
			, INSTALLED_QTY
			, RECOMMENDED_QTY
			, ST_QTY
			, UNIT
			, CURRENCY
			, UNIT_PRICE
			, DELIVERY
			, MANUFACTURER
			, ATTACH_GRP_CD
			, WEIGHT
			, DIMENSION
			, RELATED_DRAWING
			, TRK_ITEM_NAME
			, SHIPMENT_NO
			, SHIPMENT_SEQ
			, INVOICE_NO
			, PACKAGE_NO
			, MATERIAL_CODE
			, LAST_UPDATE_DATE
			, LAST_UPDATED_BY
			, CREATION_DATE
			, CREATED_BY
		) VALUES (
			  (
			  	SELECT #{PROJECT_NO} || '-' || LPAD(NVL(MAX(SUBSTR(SPST_CODE, -7)), '0') + 1, 7, '0')
				FROM DESM_SUPPLY_SP_ST A
				WHERE A.PROJECT_NO = #{PROJECT_NO}
			  )
			, #{PROJECT_NO}
			, #{TYPE}
			, #{CATEGORY}
			, #{LEVEL1}
			, #{LEVEL2}
			, #{LEVEL3}
			, #{LEVEL4}
			, #{DESC_SYSTEM}
			, #{DESC_EQUIPMENT}
			, #{KKS_NO}
			, #{DESC_TYPE}
			, #{KEY_SPECIFICATION}
			, #{ITEM_PART_NO}
			, #{STORAGE_CLASSIFICATION}
			, #{SHELF_LIFE}
			, #{INSTALLED_QTY}
			, #{RECOMMENDED_QTY}
			, #{ST_QTY}
			, #{UNIT}
			, #{CURRENCY}
			, #{UNIT_PRICE}
			, #{DELIVERY}
			, #{MANUFACTURER}
			, #{ATTACH_GRP_CD}
			, #{WEIGHT}
			, #{DIMENSION}
			, #{RELATED_DRAWING}
			, #{TRK_ITEM_NAME}
			, #{SHIPMENT_NO}
			, #{SHIPMENT_SEQ}
			, #{INVOICE_NO}
			, #{PACKAGE_NO}
			, #{MATERIAL_CODE}
		    , SYSDATE
		    , #{USER_AD}
		    , SYSDATE
		    , #{USER_AD}
		)
	</update>
		
	<delete id="deleteIdsmItemSupplySpSt" parameterType="java.util.Map">
		/* IdsmMapper.xml -> deleteIdsmItemSupplySpSt : Spare part &amp; Special Tool Item 삭제 */
    	DELETE FROM DESM_SUPPLY_SP_ST
    	WHERE SPST_CODE = #{SPST_CODE}
	</delete>
	
	<select id="getMprSeqRecent" parameterType="java.util.Map" resultType="java.util.HashMap">
		/* IdsmMapper.xml -> getMprSeqRecent : 선택된 MPR의 가장 최근 MPR SEQ 찾기 */
		SELECT MPR_SEQ
        FROM (
              SELECT MPR_SEQ
              FROM DESM_MPR_HEADER DMH
              WHERE 1=1
              AND DMH.MPR_NO = #{MPR_NO}
              AND DMH.STATUS = 'Confirmed'
              ORDER BY DMH.MPR_DATE DESC
             ) 
        WHERE ROWNUM = 1
	</select>
	
</mapper>